(module
 (type $FUNCSIG$viiii (func (param i32 i32 i32 i32)))
 (type $FUNCSIG$iiiii (func (param i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$viiji (func (param i32 i32 i64 i32)))
 (type $FUNCSIG$vi (func (param i32)))
 (type $FUNCSIG$vii (func (param i32 i32)))
 (type $FUNCSIG$ff (func (param f32) (result f32)))
 (type $FUNCSIG$fff (func (param f32 f32) (result f32)))
 (type $FUNCSIG$iiii (func (param i32 i32 i32) (result i32)))
 (type $FUNCSIG$iidiiii (func (param i32 f64 i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$ii (func (param i32) (result i32)))
 (type $FUNCSIG$jiji (func (param i32 i64 i32) (result i64)))
 (type $FUNCSIG$vf (func (param f32)))
 (type $FUNCSIG$v (func))
 (type $FUNCSIG$vif (func (param i32 f32)))
 (type $FUNCSIG$vff (func (param f32 f32)))
 (type $FUNCSIG$viii (func (param i32 i32 i32)))
 (type $FUNCSIG$viif (func (param i32 i32 f32)))
 (type $FUNCSIG$viff (func (param i32 f32 f32)))
 (type $FUNCSIG$vfff (func (param f32 f32 f32)))
 (type $FUNCSIG$viifi (func (param i32 i32 f32 i32)))
 (type $FUNCSIG$vifff (func (param i32 f32 f32 f32)))
 (type $FUNCSIG$vffff (func (param f32 f32 f32 f32)))
 (type $FUNCSIG$viiiii (func (param i32 i32 i32 i32 i32)))
 (type $FUNCSIG$viffff (func (param i32 f32 f32 f32 f32)))
 (type $FUNCSIG$viiiiii (func (param i32 i32 i32 i32 i32 i32)))
 (type $FUNCSIG$viiiiiii (func (param i32 i32 i32 i32 i32 i32 i32)))
 (type $FUNCSIG$viiiiiiii (func (param i32 i32 i32 i32 i32 i32 i32 i32)))
 (type $FUNCSIG$viiiiiiiii (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (type $FUNCSIG$viiiiiiiiii (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (type $FUNCSIG$viiiiiiiiiii (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (type $FUNCSIG$i (func (result i32)))
 (type $FUNCSIG$iii (func (param i32 i32) (result i32)))
 (type $FUNCSIG$iiiiii (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$iiiiiii (func (param i32 i32 i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$iiiiiiii (func (param i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$iiiiiiiii (func (param i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$iiiiiiiiii (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$vfi (func (param f32 i32)))
 (type $FUNCSIG$vidd (func (param i32 f64 f64)))
 (type $FUNCSIG$iiid (func (param i32 i32 f64) (result i32)))
 (type $FUNCSIG$d (func (result f64)))
 (type $FUNCSIG$vdddd (func (param f64 f64 f64 f64)))
 (type $FUNCSIG$vd (func (param f64)))
 (type $FUNCSIG$vdd (func (param f64 f64)))
 (type $FUNCSIG$vdi (func (param f64 i32)))
 (type $FUNCSIG$viid (func (param i32 i32 f64)))
 (type $FUNCSIG$vid (func (param i32 f64)))
 (type $FUNCSIG$viddd (func (param i32 f64 f64 f64)))
 (type $FUNCSIG$vidddd (func (param i32 f64 f64 f64 f64)))
 (type $FUNCSIG$diii (func (param i32 i32 i32) (result f64)))
 (import "env" "memory" (memory $memory (shared 256 256)))
 (import "env" "table" (table $table 347 347 funcref))
 (elem (global.get $__table_base) $b0 $_stbir__support_zero $_stbir__support_trapezoid $_stbir__support_one $_stbir__support_two $b0 $b0 $b0 $b1 $_stbir__filter_trapezoid $_stbir__filter_triangle $_stbir__filter_cubic $_stbir__filter_catmullrom $_stbir__filter_mitchell $b1 $b1 $b2 $_emscripten_glCreateProgram $_emscripten_glGetError $b2 $b3 $___emscripten_stdout_close $_LoadDataThread $___stdio_close $_emscripten_glCheckFramebufferStatus $_emscripten_glCreateShader $_emscripten_glGetString $_emscripten_glIsBuffer $_emscripten_glIsEnabled $_emscripten_glIsFramebuffer $_emscripten_glIsProgram $_emscripten_glIsRenderbuffer $_emscripten_glIsShader $_emscripten_glIsTexture $_emscripten_glIsQueryEXT $_emscripten_glIsVertexArrayOES $___emscripten_thread_main $b3 $b3 $b3 $b3 $b3 $b3 $b3 $b3 $b3 $b3 $b3 $b3 $b3 $b3 $b3 $b4 $_fmt_fp $b5 $_emscripten_glGetAttribLocation $_emscripten_glGetUniformLocation $b5 $b6 $___stdio_write $_sn_write $_EmscriptenFullscreenChangeCallback $_EmscriptenKeyboardCallback $_EmscriptenMouseCallback $_EmscriptenTouchCallback $_EmscriptenGamepadCallback $___stdio_read $b6 $b6 $b6 $b6 $b6 $b6 $b6 $b7 $b8 $b9 $b10 $b11 $b12 $b13 $___emscripten_stdout_seek $___stdio_seek $b13 $b14 $_UpdateDrawFrame $_emscripten_glFinish $_emscripten_glFlush $_emscripten_glReleaseShaderCompiler $b14 $b14 $b14 $b15 $_emscripten_glClearDepthf$legalf32 $_emscripten_glLineWidth$legalf32 $b15 $b16 $_emscripten_glDepthRangef$legalf32 $_emscripten_glPolygonOffset$legalf32 $b16 $b17 $b18 $_emscripten_glBlendColor$legalf32 $_emscripten_glClearColor$legalf32 $b18 $b19 $_emscripten_glSampleCoverage$legalf32 $b20 $_emscripten_glActiveTexture $_emscripten_glBlendEquation $_emscripten_glClear $_emscripten_glClearStencil $_emscripten_glCompileShader $_emscripten_glCullFace $_emscripten_glDeleteProgram $_emscripten_glDeleteShader $_emscripten_glDepthFunc $_emscripten_glDepthMask $_emscripten_glDisable $_emscripten_glDisableVertexAttribArray $_emscripten_glEnable $_emscripten_glEnableVertexAttribArray $_emscripten_glFrontFace $_emscripten_glGenerateMipmap $_emscripten_glLinkProgram $_emscripten_glStencilMask $_emscripten_glUseProgram $_emscripten_glValidateProgram $_emscripten_glEndQueryEXT $_emscripten_glBindVertexArrayOES $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b21 $_MouseCursorPosCallback $_ScrollCallback $b21 $b22 $_emscripten_glUniform1f$legalf32 $_emscripten_glVertexAttrib1f$legalf32 $b22 $b23 $_emscripten_glUniform2f$legalf32 $_emscripten_glVertexAttrib2f$legalf32 $b23 $b24 $_emscripten_glUniform3f$legalf32 $_emscripten_glVertexAttrib3f$legalf32 $b24 $b25 $_emscripten_glUniform4f$legalf32 $_emscripten_glVertexAttrib4f$legalf32 $b25 $b26 $_ErrorCallback $_CursorEnterCallback $_CursorEnterCallback $_WindowIconifyCallback $_pop_arg_long_double $_emscripten_glVertexAttribDivisorANGLE $_emscripten_glAttachShader $_emscripten_glBindBuffer $_emscripten_glBindFramebuffer $_emscripten_glBindRenderbuffer $_emscripten_glBindTexture $_emscripten_glBlendEquationSeparate $_emscripten_glBlendFunc $_emscripten_glDeleteBuffers $_emscripten_glDeleteFramebuffers $_emscripten_glDeleteRenderbuffers $_emscripten_glDeleteTextures $_emscripten_glDetachShader $_emscripten_glGenBuffers $_emscripten_glGenFramebuffers $_emscripten_glGenRenderbuffers $_emscripten_glGenTextures $_emscripten_glGetBooleanv $_emscripten_glGetFloatv $_emscripten_glGetIntegerv $_emscripten_glHint $_emscripten_glPixelStorei $_emscripten_glStencilMaskSeparate $_emscripten_glUniform1i $_emscripten_glVertexAttrib1fv $_emscripten_glVertexAttrib2fv $_emscripten_glVertexAttrib3fv $_emscripten_glVertexAttrib4fv $_emscripten_glGenQueriesEXT $_emscripten_glDeleteQueriesEXT $_emscripten_glBeginQueryEXT $_emscripten_glQueryCounterEXT $_emscripten_glDeleteVertexArraysOES $_emscripten_glGenVertexArraysOES $_emscripten_glDrawBuffersWEBGL $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b26 $b27 $_emscripten_glTexParameterf$legalf32 $b28 $b29 $_WindowSizeCallback $_WindowDropCallback $_emscripten_glBindAttribLocation $_emscripten_glDrawArrays $_emscripten_glGetBufferParameteriv $_emscripten_glGetProgramiv $_emscripten_glGetRenderbufferParameteriv $_emscripten_glGetShaderiv $_emscripten_glGetTexParameterfv $_emscripten_glGetTexParameteriv $_emscripten_glGetUniformfv $_emscripten_glGetUniformiv $_emscripten_glGetVertexAttribfv $_emscripten_glGetVertexAttribiv $_emscripten_glGetVertexAttribPointerv $_emscripten_glStencilFunc $_emscripten_glStencilOp $_emscripten_glTexParameterfv $_emscripten_glTexParameteri $_emscripten_glTexParameteriv $_emscripten_glUniform1fv $_emscripten_glUniform1iv $_emscripten_glUniform2fv $_emscripten_glUniform2i $_emscripten_glUniform2iv $_emscripten_glUniform3fv $_emscripten_glUniform3iv $_emscripten_glUniform4fv $_emscripten_glUniform4iv $_emscripten_glGetQueryivEXT $_emscripten_glGetQueryObjectivEXT $_emscripten_glGetQueryObjectuivEXT $_emscripten_glGetQueryObjecti64vEXT $_emscripten_glGetQueryObjectui64vEXT $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b29 $b30 $_MouseButtonCallback $_emscripten_glBlendFuncSeparate $_emscripten_glBufferData $_emscripten_glBufferSubData $_emscripten_glColorMask $_emscripten_glDrawElements $_emscripten_glFramebufferRenderbuffer $_emscripten_glGetAttachedShaders $_emscripten_glGetFramebufferAttachmentParameteriv $_emscripten_glGetProgramInfoLog $_emscripten_glGetShaderInfoLog $_emscripten_glGetShaderPrecisionFormat $_emscripten_glGetShaderSource $_emscripten_glRenderbufferStorage $_emscripten_glScissor $_emscripten_glShaderSource $_emscripten_glStencilFuncSeparate $_emscripten_glStencilOpSeparate $_emscripten_glUniform3i $_emscripten_glUniformMatrix2fv $_emscripten_glUniformMatrix3fv $_emscripten_glUniformMatrix4fv $_emscripten_glViewport $_emscripten_glDrawArraysInstancedANGLE $b30 $b30 $b30 $b30 $b30 $b30 $b30 $b31 $_KeyCallback $_emscripten_glFramebufferTexture2D $_emscripten_glShaderBinary $_emscripten_glUniform4i $_emscripten_glDrawElementsInstancedANGLE $b31 $b31 $b32 $_emscripten_glVertexAttribPointer $b33 $_emscripten_glGetActiveAttrib $_emscripten_glGetActiveUniform $_emscripten_glReadPixels $b34 $_emscripten_glCompressedTexImage2D $_emscripten_glCopyTexImage2D $_emscripten_glCopyTexSubImage2D $b35 $_emscripten_glCompressedTexSubImage2D $_emscripten_glTexImage2D $_emscripten_glTexSubImage2D $b36 $b37 $b38)
 (import "env" "__table_base" (global $__table_base i32))
 (import "env" "DYNAMICTOP_PTR" (global $DYNAMICTOP_PTR$asm2wasm$import i32))
 (import "global" "Infinity" (global $inf$asm2wasm$import f64))
 (import "env" "abortStackOverflow" (func $abortStackOverflow (param i32)))
 (import "env" "nullFunc_ff" (func $nullFunc_ff (param i32)))
 (import "env" "nullFunc_fff" (func $nullFunc_fff (param i32)))
 (import "env" "nullFunc_i" (func $nullFunc_i (param i32)))
 (import "env" "nullFunc_ii" (func $nullFunc_ii (param i32)))
 (import "env" "nullFunc_iidiiii" (func $nullFunc_iidiiii (param i32)))
 (import "env" "nullFunc_iii" (func $nullFunc_iii (param i32)))
 (import "env" "nullFunc_iiii" (func $nullFunc_iiii (param i32)))
 (import "env" "nullFunc_iiiii" (func $nullFunc_iiiii (param i32)))
 (import "env" "nullFunc_iiiiii" (func $nullFunc_iiiiii (param i32)))
 (import "env" "nullFunc_iiiiiii" (func $nullFunc_iiiiiii (param i32)))
 (import "env" "nullFunc_iiiiiiii" (func $nullFunc_iiiiiiii (param i32)))
 (import "env" "nullFunc_iiiiiiiii" (func $nullFunc_iiiiiiiii (param i32)))
 (import "env" "nullFunc_iiiiiiiiii" (func $nullFunc_iiiiiiiiii (param i32)))
 (import "env" "nullFunc_jiji" (func $nullFunc_jiji (param i32)))
 (import "env" "nullFunc_v" (func $nullFunc_v (param i32)))
 (import "env" "nullFunc_vf" (func $nullFunc_vf (param i32)))
 (import "env" "nullFunc_vff" (func $nullFunc_vff (param i32)))
 (import "env" "nullFunc_vfff" (func $nullFunc_vfff (param i32)))
 (import "env" "nullFunc_vffff" (func $nullFunc_vffff (param i32)))
 (import "env" "nullFunc_vfi" (func $nullFunc_vfi (param i32)))
 (import "env" "nullFunc_vi" (func $nullFunc_vi (param i32)))
 (import "env" "nullFunc_vidd" (func $nullFunc_vidd (param i32)))
 (import "env" "nullFunc_vif" (func $nullFunc_vif (param i32)))
 (import "env" "nullFunc_viff" (func $nullFunc_viff (param i32)))
 (import "env" "nullFunc_vifff" (func $nullFunc_vifff (param i32)))
 (import "env" "nullFunc_viffff" (func $nullFunc_viffff (param i32)))
 (import "env" "nullFunc_vii" (func $nullFunc_vii (param i32)))
 (import "env" "nullFunc_viif" (func $nullFunc_viif (param i32)))
 (import "env" "nullFunc_viifi" (func $nullFunc_viifi (param i32)))
 (import "env" "nullFunc_viii" (func $nullFunc_viii (param i32)))
 (import "env" "nullFunc_viiii" (func $nullFunc_viiii (param i32)))
 (import "env" "nullFunc_viiiii" (func $nullFunc_viiiii (param i32)))
 (import "env" "nullFunc_viiiiii" (func $nullFunc_viiiiii (param i32)))
 (import "env" "nullFunc_viiiiiii" (func $nullFunc_viiiiiii (param i32)))
 (import "env" "nullFunc_viiiiiiii" (func $nullFunc_viiiiiiii (param i32)))
 (import "env" "nullFunc_viiiiiiiii" (func $nullFunc_viiiiiiiii (param i32)))
 (import "env" "nullFunc_viiiiiiiiii" (func $nullFunc_viiiiiiiiii (param i32)))
 (import "env" "nullFunc_viiiiiiiiiii" (func $nullFunc_viiiiiiiiiii (param i32)))
 (import "env" "nullFunc_viiji" (func $nullFunc_viiji (param i32)))
 (import "env" "___assert_fail" (func $___assert_fail (param i32 i32 i32 i32)))
 (import "env" "___call_main" (func $___call_main (param i32 i32) (result i32)))
 (import "env" "___lock" (func $___lock (param i32)))
 (import "env" "___setErrNo" (func $___setErrNo (param i32)))
 (import "env" "___syscall140" (func $___syscall140 (param i32 i32) (result i32)))
 (import "env" "___syscall145" (func $___syscall145 (param i32 i32) (result i32)))
 (import "env" "___syscall221" (func $___syscall221 (param i32 i32) (result i32)))
 (import "env" "___syscall5" (func $___syscall5 (param i32 i32) (result i32)))
 (import "env" "___syscall54" (func $___syscall54 (param i32 i32) (result i32)))
 (import "env" "___syscall6" (func $___syscall6 (param i32 i32) (result i32)))
 (import "env" "___unlock" (func $___unlock (param i32)))
 (import "env" "___wasi_fd_write" (func $___wasi_fd_write (param i32 i32 i32 i32) (result i32)))
 (import "env" "_abort" (func $_abort))
 (import "env" "_clock" (func $_clock (result i32)))
 (import "env" "_eglGetProcAddress" (func $_eglGetProcAddress (param i32) (result i32)))
 (import "env" "_emscripten_asm_const_i" (func $_emscripten_asm_const_i (param i32) (result i32)))
 (import "env" "_emscripten_asm_const_ii" (func $_emscripten_asm_const_ii (param i32 i32) (result i32)))
 (import "env" "_emscripten_exit_pointerlock" (func $_emscripten_exit_pointerlock (result i32)))
 (import "env" "_emscripten_futex_wait" (func $_emscripten_futex_wait (param i32 i32 f64) (result i32)))
 (import "env" "_emscripten_futex_wake" (func $_emscripten_futex_wake (param i32 i32) (result i32)))
 (import "env" "_emscripten_get_gamepad_status" (func $_emscripten_get_gamepad_status (param i32 i32) (result i32)))
 (import "env" "_emscripten_get_heap_size" (func $_emscripten_get_heap_size (result i32)))
 (import "env" "_emscripten_get_now" (func $_emscripten_get_now (result f64)))
 (import "env" "_emscripten_get_num_gamepads" (func $_emscripten_get_num_gamepads (result i32)))
 (import "env" "_emscripten_get_pointerlock_status" (func $_emscripten_get_pointerlock_status (param i32) (result i32)))
 (import "env" "_emscripten_glActiveTexture" (func $_emscripten_glActiveTexture (param i32)))
 (import "env" "_emscripten_glAttachShader" (func $_emscripten_glAttachShader (param i32 i32)))
 (import "env" "_emscripten_glBeginQueryEXT" (func $_emscripten_glBeginQueryEXT (param i32 i32)))
 (import "env" "_emscripten_glBindAttribLocation" (func $_emscripten_glBindAttribLocation (param i32 i32 i32)))
 (import "env" "_emscripten_glBindBuffer" (func $_emscripten_glBindBuffer (param i32 i32)))
 (import "env" "_emscripten_glBindFramebuffer" (func $_emscripten_glBindFramebuffer (param i32 i32)))
 (import "env" "_emscripten_glBindRenderbuffer" (func $_emscripten_glBindRenderbuffer (param i32 i32)))
 (import "env" "_emscripten_glBindTexture" (func $_emscripten_glBindTexture (param i32 i32)))
 (import "env" "_emscripten_glBindVertexArrayOES" (func $_emscripten_glBindVertexArrayOES (param i32)))
 (import "env" "_emscripten_glBlendColor" (func $_emscripten_glBlendColor (param f64 f64 f64 f64)))
 (import "env" "_emscripten_glBlendEquation" (func $_emscripten_glBlendEquation (param i32)))
 (import "env" "_emscripten_glBlendEquationSeparate" (func $_emscripten_glBlendEquationSeparate (param i32 i32)))
 (import "env" "_emscripten_glBlendFunc" (func $_emscripten_glBlendFunc (param i32 i32)))
 (import "env" "_emscripten_glBlendFuncSeparate" (func $_emscripten_glBlendFuncSeparate (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glBufferData" (func $_emscripten_glBufferData (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glBufferSubData" (func $_emscripten_glBufferSubData (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glCheckFramebufferStatus" (func $_emscripten_glCheckFramebufferStatus (param i32) (result i32)))
 (import "env" "_emscripten_glClear" (func $_emscripten_glClear (param i32)))
 (import "env" "_emscripten_glClearColor" (func $_emscripten_glClearColor (param f64 f64 f64 f64)))
 (import "env" "_emscripten_glClearDepthf" (func $_emscripten_glClearDepthf (param f64)))
 (import "env" "_emscripten_glClearStencil" (func $_emscripten_glClearStencil (param i32)))
 (import "env" "_emscripten_glColorMask" (func $_emscripten_glColorMask (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glCompileShader" (func $_emscripten_glCompileShader (param i32)))
 (import "env" "_emscripten_glCompressedTexImage2D" (func $_emscripten_glCompressedTexImage2D (param i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glCompressedTexSubImage2D" (func $_emscripten_glCompressedTexSubImage2D (param i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glCopyTexImage2D" (func $_emscripten_glCopyTexImage2D (param i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glCopyTexSubImage2D" (func $_emscripten_glCopyTexSubImage2D (param i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glCreateProgram" (func $_emscripten_glCreateProgram (result i32)))
 (import "env" "_emscripten_glCreateShader" (func $_emscripten_glCreateShader (param i32) (result i32)))
 (import "env" "_emscripten_glCullFace" (func $_emscripten_glCullFace (param i32)))
 (import "env" "_emscripten_glDeleteBuffers" (func $_emscripten_glDeleteBuffers (param i32 i32)))
 (import "env" "_emscripten_glDeleteFramebuffers" (func $_emscripten_glDeleteFramebuffers (param i32 i32)))
 (import "env" "_emscripten_glDeleteProgram" (func $_emscripten_glDeleteProgram (param i32)))
 (import "env" "_emscripten_glDeleteQueriesEXT" (func $_emscripten_glDeleteQueriesEXT (param i32 i32)))
 (import "env" "_emscripten_glDeleteRenderbuffers" (func $_emscripten_glDeleteRenderbuffers (param i32 i32)))
 (import "env" "_emscripten_glDeleteShader" (func $_emscripten_glDeleteShader (param i32)))
 (import "env" "_emscripten_glDeleteTextures" (func $_emscripten_glDeleteTextures (param i32 i32)))
 (import "env" "_emscripten_glDeleteVertexArraysOES" (func $_emscripten_glDeleteVertexArraysOES (param i32 i32)))
 (import "env" "_emscripten_glDepthFunc" (func $_emscripten_glDepthFunc (param i32)))
 (import "env" "_emscripten_glDepthMask" (func $_emscripten_glDepthMask (param i32)))
 (import "env" "_emscripten_glDepthRangef" (func $_emscripten_glDepthRangef (param f64 f64)))
 (import "env" "_emscripten_glDetachShader" (func $_emscripten_glDetachShader (param i32 i32)))
 (import "env" "_emscripten_glDisable" (func $_emscripten_glDisable (param i32)))
 (import "env" "_emscripten_glDisableVertexAttribArray" (func $_emscripten_glDisableVertexAttribArray (param i32)))
 (import "env" "_emscripten_glDrawArrays" (func $_emscripten_glDrawArrays (param i32 i32 i32)))
 (import "env" "_emscripten_glDrawArraysInstancedANGLE" (func $_emscripten_glDrawArraysInstancedANGLE (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glDrawBuffersWEBGL" (func $_emscripten_glDrawBuffersWEBGL (param i32 i32)))
 (import "env" "_emscripten_glDrawElements" (func $_emscripten_glDrawElements (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glDrawElementsInstancedANGLE" (func $_emscripten_glDrawElementsInstancedANGLE (param i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glEnable" (func $_emscripten_glEnable (param i32)))
 (import "env" "_emscripten_glEnableVertexAttribArray" (func $_emscripten_glEnableVertexAttribArray (param i32)))
 (import "env" "_emscripten_glEndQueryEXT" (func $_emscripten_glEndQueryEXT (param i32)))
 (import "env" "_emscripten_glFinish" (func $_emscripten_glFinish))
 (import "env" "_emscripten_glFlush" (func $_emscripten_glFlush))
 (import "env" "_emscripten_glFramebufferRenderbuffer" (func $_emscripten_glFramebufferRenderbuffer (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glFramebufferTexture2D" (func $_emscripten_glFramebufferTexture2D (param i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glFrontFace" (func $_emscripten_glFrontFace (param i32)))
 (import "env" "_emscripten_glGenBuffers" (func $_emscripten_glGenBuffers (param i32 i32)))
 (import "env" "_emscripten_glGenFramebuffers" (func $_emscripten_glGenFramebuffers (param i32 i32)))
 (import "env" "_emscripten_glGenQueriesEXT" (func $_emscripten_glGenQueriesEXT (param i32 i32)))
 (import "env" "_emscripten_glGenRenderbuffers" (func $_emscripten_glGenRenderbuffers (param i32 i32)))
 (import "env" "_emscripten_glGenTextures" (func $_emscripten_glGenTextures (param i32 i32)))
 (import "env" "_emscripten_glGenVertexArraysOES" (func $_emscripten_glGenVertexArraysOES (param i32 i32)))
 (import "env" "_emscripten_glGenerateMipmap" (func $_emscripten_glGenerateMipmap (param i32)))
 (import "env" "_emscripten_glGetActiveAttrib" (func $_emscripten_glGetActiveAttrib (param i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetActiveUniform" (func $_emscripten_glGetActiveUniform (param i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetAttachedShaders" (func $_emscripten_glGetAttachedShaders (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetAttribLocation" (func $_emscripten_glGetAttribLocation (param i32 i32) (result i32)))
 (import "env" "_emscripten_glGetBooleanv" (func $_emscripten_glGetBooleanv (param i32 i32)))
 (import "env" "_emscripten_glGetBufferParameteriv" (func $_emscripten_glGetBufferParameteriv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetError" (func $_emscripten_glGetError (result i32)))
 (import "env" "_emscripten_glGetFloatv" (func $_emscripten_glGetFloatv (param i32 i32)))
 (import "env" "_emscripten_glGetFramebufferAttachmentParameteriv" (func $_emscripten_glGetFramebufferAttachmentParameteriv (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetIntegerv" (func $_emscripten_glGetIntegerv (param i32 i32)))
 (import "env" "_emscripten_glGetProgramInfoLog" (func $_emscripten_glGetProgramInfoLog (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetProgramiv" (func $_emscripten_glGetProgramiv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetQueryObjecti64vEXT" (func $_emscripten_glGetQueryObjecti64vEXT (param i32 i32 i32)))
 (import "env" "_emscripten_glGetQueryObjectivEXT" (func $_emscripten_glGetQueryObjectivEXT (param i32 i32 i32)))
 (import "env" "_emscripten_glGetQueryObjectui64vEXT" (func $_emscripten_glGetQueryObjectui64vEXT (param i32 i32 i32)))
 (import "env" "_emscripten_glGetQueryObjectuivEXT" (func $_emscripten_glGetQueryObjectuivEXT (param i32 i32 i32)))
 (import "env" "_emscripten_glGetQueryivEXT" (func $_emscripten_glGetQueryivEXT (param i32 i32 i32)))
 (import "env" "_emscripten_glGetRenderbufferParameteriv" (func $_emscripten_glGetRenderbufferParameteriv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetShaderInfoLog" (func $_emscripten_glGetShaderInfoLog (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetShaderPrecisionFormat" (func $_emscripten_glGetShaderPrecisionFormat (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetShaderSource" (func $_emscripten_glGetShaderSource (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetShaderiv" (func $_emscripten_glGetShaderiv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetString" (func $_emscripten_glGetString (param i32) (result i32)))
 (import "env" "_emscripten_glGetTexParameterfv" (func $_emscripten_glGetTexParameterfv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetTexParameteriv" (func $_emscripten_glGetTexParameteriv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetUniformLocation" (func $_emscripten_glGetUniformLocation (param i32 i32) (result i32)))
 (import "env" "_emscripten_glGetUniformfv" (func $_emscripten_glGetUniformfv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetUniformiv" (func $_emscripten_glGetUniformiv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetVertexAttribPointerv" (func $_emscripten_glGetVertexAttribPointerv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetVertexAttribfv" (func $_emscripten_glGetVertexAttribfv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetVertexAttribiv" (func $_emscripten_glGetVertexAttribiv (param i32 i32 i32)))
 (import "env" "_emscripten_glHint" (func $_emscripten_glHint (param i32 i32)))
 (import "env" "_emscripten_glIsBuffer" (func $_emscripten_glIsBuffer (param i32) (result i32)))
 (import "env" "_emscripten_glIsEnabled" (func $_emscripten_glIsEnabled (param i32) (result i32)))
 (import "env" "_emscripten_glIsFramebuffer" (func $_emscripten_glIsFramebuffer (param i32) (result i32)))
 (import "env" "_emscripten_glIsProgram" (func $_emscripten_glIsProgram (param i32) (result i32)))
 (import "env" "_emscripten_glIsQueryEXT" (func $_emscripten_glIsQueryEXT (param i32) (result i32)))
 (import "env" "_emscripten_glIsRenderbuffer" (func $_emscripten_glIsRenderbuffer (param i32) (result i32)))
 (import "env" "_emscripten_glIsShader" (func $_emscripten_glIsShader (param i32) (result i32)))
 (import "env" "_emscripten_glIsTexture" (func $_emscripten_glIsTexture (param i32) (result i32)))
 (import "env" "_emscripten_glIsVertexArrayOES" (func $_emscripten_glIsVertexArrayOES (param i32) (result i32)))
 (import "env" "_emscripten_glLineWidth" (func $_emscripten_glLineWidth (param f64)))
 (import "env" "_emscripten_glLinkProgram" (func $_emscripten_glLinkProgram (param i32)))
 (import "env" "_emscripten_glPixelStorei" (func $_emscripten_glPixelStorei (param i32 i32)))
 (import "env" "_emscripten_glPolygonOffset" (func $_emscripten_glPolygonOffset (param f64 f64)))
 (import "env" "_emscripten_glQueryCounterEXT" (func $_emscripten_glQueryCounterEXT (param i32 i32)))
 (import "env" "_emscripten_glReadPixels" (func $_emscripten_glReadPixels (param i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glReleaseShaderCompiler" (func $_emscripten_glReleaseShaderCompiler))
 (import "env" "_emscripten_glRenderbufferStorage" (func $_emscripten_glRenderbufferStorage (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glSampleCoverage" (func $_emscripten_glSampleCoverage (param f64 i32)))
 (import "env" "_emscripten_glScissor" (func $_emscripten_glScissor (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glShaderBinary" (func $_emscripten_glShaderBinary (param i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glShaderSource" (func $_emscripten_glShaderSource (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glStencilFunc" (func $_emscripten_glStencilFunc (param i32 i32 i32)))
 (import "env" "_emscripten_glStencilFuncSeparate" (func $_emscripten_glStencilFuncSeparate (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glStencilMask" (func $_emscripten_glStencilMask (param i32)))
 (import "env" "_emscripten_glStencilMaskSeparate" (func $_emscripten_glStencilMaskSeparate (param i32 i32)))
 (import "env" "_emscripten_glStencilOp" (func $_emscripten_glStencilOp (param i32 i32 i32)))
 (import "env" "_emscripten_glStencilOpSeparate" (func $_emscripten_glStencilOpSeparate (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glTexImage2D" (func $_emscripten_glTexImage2D (param i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glTexParameterf" (func $_emscripten_glTexParameterf (param i32 i32 f64)))
 (import "env" "_emscripten_glTexParameterfv" (func $_emscripten_glTexParameterfv (param i32 i32 i32)))
 (import "env" "_emscripten_glTexParameteri" (func $_emscripten_glTexParameteri (param i32 i32 i32)))
 (import "env" "_emscripten_glTexParameteriv" (func $_emscripten_glTexParameteriv (param i32 i32 i32)))
 (import "env" "_emscripten_glTexSubImage2D" (func $_emscripten_glTexSubImage2D (param i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glUniform1f" (func $_emscripten_glUniform1f (param i32 f64)))
 (import "env" "_emscripten_glUniform1fv" (func $_emscripten_glUniform1fv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform1i" (func $_emscripten_glUniform1i (param i32 i32)))
 (import "env" "_emscripten_glUniform1iv" (func $_emscripten_glUniform1iv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform2f" (func $_emscripten_glUniform2f (param i32 f64 f64)))
 (import "env" "_emscripten_glUniform2fv" (func $_emscripten_glUniform2fv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform2i" (func $_emscripten_glUniform2i (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform2iv" (func $_emscripten_glUniform2iv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform3f" (func $_emscripten_glUniform3f (param i32 f64 f64 f64)))
 (import "env" "_emscripten_glUniform3fv" (func $_emscripten_glUniform3fv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform3i" (func $_emscripten_glUniform3i (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glUniform3iv" (func $_emscripten_glUniform3iv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform4f" (func $_emscripten_glUniform4f (param i32 f64 f64 f64 f64)))
 (import "env" "_emscripten_glUniform4fv" (func $_emscripten_glUniform4fv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform4i" (func $_emscripten_glUniform4i (param i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glUniform4iv" (func $_emscripten_glUniform4iv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniformMatrix2fv" (func $_emscripten_glUniformMatrix2fv (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glUniformMatrix3fv" (func $_emscripten_glUniformMatrix3fv (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glUniformMatrix4fv" (func $_emscripten_glUniformMatrix4fv (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glUseProgram" (func $_emscripten_glUseProgram (param i32)))
 (import "env" "_emscripten_glValidateProgram" (func $_emscripten_glValidateProgram (param i32)))
 (import "env" "_emscripten_glVertexAttrib1f" (func $_emscripten_glVertexAttrib1f (param i32 f64)))
 (import "env" "_emscripten_glVertexAttrib1fv" (func $_emscripten_glVertexAttrib1fv (param i32 i32)))
 (import "env" "_emscripten_glVertexAttrib2f" (func $_emscripten_glVertexAttrib2f (param i32 f64 f64)))
 (import "env" "_emscripten_glVertexAttrib2fv" (func $_emscripten_glVertexAttrib2fv (param i32 i32)))
 (import "env" "_emscripten_glVertexAttrib3f" (func $_emscripten_glVertexAttrib3f (param i32 f64 f64 f64)))
 (import "env" "_emscripten_glVertexAttrib3fv" (func $_emscripten_glVertexAttrib3fv (param i32 i32)))
 (import "env" "_emscripten_glVertexAttrib4f" (func $_emscripten_glVertexAttrib4f (param i32 f64 f64 f64 f64)))
 (import "env" "_emscripten_glVertexAttrib4fv" (func $_emscripten_glVertexAttrib4fv (param i32 i32)))
 (import "env" "_emscripten_glVertexAttribDivisorANGLE" (func $_emscripten_glVertexAttribDivisorANGLE (param i32 i32)))
 (import "env" "_emscripten_glVertexAttribPointer" (func $_emscripten_glVertexAttribPointer (param i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glViewport" (func $_emscripten_glViewport (param i32 i32 i32 i32)))
 (import "env" "_emscripten_has_threading_support" (func $_emscripten_has_threading_support (result i32)))
 (import "env" "_emscripten_memcpy_big" (func $_emscripten_memcpy_big (param i32 i32 i32) (result i32)))
 (import "env" "_emscripten_receive_on_main_thread_js" (func $_emscripten_receive_on_main_thread_js (param i32 i32 i32) (result f64)))
 (import "env" "_emscripten_request_pointerlock" (func $_emscripten_request_pointerlock (param i32 i32) (result i32)))
 (import "env" "_emscripten_resize_heap" (func $_emscripten_resize_heap (param i32) (result i32)))
 (import "env" "_emscripten_run_script" (func $_emscripten_run_script (param i32)))
 (import "env" "_emscripten_sample_gamepad_data" (func $_emscripten_sample_gamepad_data (result i32)))
 (import "env" "_emscripten_set_canvas_element_size" (func $_emscripten_set_canvas_element_size (param i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_click_callback_on_thread" (func $_emscripten_set_click_callback_on_thread (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_fullscreenchange_callback_on_thread" (func $_emscripten_set_fullscreenchange_callback_on_thread (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_gamepadconnected_callback_on_thread" (func $_emscripten_set_gamepadconnected_callback_on_thread (param i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_gamepaddisconnected_callback_on_thread" (func $_emscripten_set_gamepaddisconnected_callback_on_thread (param i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_keypress_callback_on_thread" (func $_emscripten_set_keypress_callback_on_thread (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_main_loop" (func $_emscripten_set_main_loop (param i32 i32 i32)))
 (import "env" "_emscripten_set_touchcancel_callback_on_thread" (func $_emscripten_set_touchcancel_callback_on_thread (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_touchend_callback_on_thread" (func $_emscripten_set_touchend_callback_on_thread (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_touchmove_callback_on_thread" (func $_emscripten_set_touchmove_callback_on_thread (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_touchstart_callback_on_thread" (func $_emscripten_set_touchstart_callback_on_thread (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_syscall" (func $_emscripten_syscall (param i32 i32) (result i32)))
 (import "env" "_emscripten_webgl_create_context" (func $_emscripten_webgl_create_context (param i32 i32) (result i32)))
 (import "env" "_exit" (func $_exit (param i32)))
 (import "env" "_glActiveTexture" (func $_glActiveTexture (param i32)))
 (import "env" "_glAttachShader" (func $_glAttachShader (param i32 i32)))
 (import "env" "_glBindAttribLocation" (func $_glBindAttribLocation (param i32 i32 i32)))
 (import "env" "_glBindBuffer" (func $_glBindBuffer (param i32 i32)))
 (import "env" "_glBindTexture" (func $_glBindTexture (param i32 i32)))
 (import "env" "_glBlendFunc" (func $_glBlendFunc (param i32 i32)))
 (import "env" "_glBufferData" (func $_glBufferData (param i32 i32 i32 i32)))
 (import "env" "_glBufferSubData" (func $_glBufferSubData (param i32 i32 i32 i32)))
 (import "env" "_glClear" (func $_glClear (param i32)))
 (import "env" "_glClearColor" (func $_glClearColor (param f64 f64 f64 f64)))
 (import "env" "_glClearDepthf" (func $_glClearDepthf (param f64)))
 (import "env" "_glCompileShader" (func $_glCompileShader (param i32)))
 (import "env" "_glCompressedTexImage2D" (func $_glCompressedTexImage2D (param i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_glCreateProgram" (func $_glCreateProgram (result i32)))
 (import "env" "_glCreateShader" (func $_glCreateShader (param i32) (result i32)))
 (import "env" "_glCullFace" (func $_glCullFace (param i32)))
 (import "env" "_glDeleteBuffers" (func $_glDeleteBuffers (param i32 i32)))
 (import "env" "_glDeleteProgram" (func $_glDeleteProgram (param i32)))
 (import "env" "_glDeleteShader" (func $_glDeleteShader (param i32)))
 (import "env" "_glDeleteTextures" (func $_glDeleteTextures (param i32 i32)))
 (import "env" "_glDepthFunc" (func $_glDepthFunc (param i32)))
 (import "env" "_glDetachShader" (func $_glDetachShader (param i32 i32)))
 (import "env" "_glDisable" (func $_glDisable (param i32)))
 (import "env" "_glDisableVertexAttribArray" (func $_glDisableVertexAttribArray (param i32)))
 (import "env" "_glDrawArrays" (func $_glDrawArrays (param i32 i32 i32)))
 (import "env" "_glDrawElements" (func $_glDrawElements (param i32 i32 i32 i32)))
 (import "env" "_glEnable" (func $_glEnable (param i32)))
 (import "env" "_glEnableVertexAttribArray" (func $_glEnableVertexAttribArray (param i32)))
 (import "env" "_glFrontFace" (func $_glFrontFace (param i32)))
 (import "env" "_glGenBuffers" (func $_glGenBuffers (param i32 i32)))
 (import "env" "_glGenTextures" (func $_glGenTextures (param i32 i32)))
 (import "env" "_glGetAttribLocation" (func $_glGetAttribLocation (param i32 i32) (result i32)))
 (import "env" "_glGetFloatv" (func $_glGetFloatv (param i32 i32)))
 (import "env" "_glGetProgramInfoLog" (func $_glGetProgramInfoLog (param i32 i32 i32 i32)))
 (import "env" "_glGetProgramiv" (func $_glGetProgramiv (param i32 i32 i32)))
 (import "env" "_glGetShaderInfoLog" (func $_glGetShaderInfoLog (param i32 i32 i32 i32)))
 (import "env" "_glGetShaderiv" (func $_glGetShaderiv (param i32 i32 i32)))
 (import "env" "_glGetString" (func $_glGetString (param i32) (result i32)))
 (import "env" "_glGetUniformLocation" (func $_glGetUniformLocation (param i32 i32) (result i32)))
 (import "env" "_glLinkProgram" (func $_glLinkProgram (param i32)))
 (import "env" "_glPixelStorei" (func $_glPixelStorei (param i32 i32)))
 (import "env" "_glReadPixels" (func $_glReadPixels (param i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_glShaderSource" (func $_glShaderSource (param i32 i32 i32 i32)))
 (import "env" "_glTexImage2D" (func $_glTexImage2D (param i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_glTexParameteri" (func $_glTexParameteri (param i32 i32 i32)))
 (import "env" "_glUniform1i" (func $_glUniform1i (param i32 i32)))
 (import "env" "_glUniform4f" (func $_glUniform4f (param i32 f64 f64 f64 f64)))
 (import "env" "_glUniformMatrix4fv" (func $_glUniformMatrix4fv (param i32 i32 i32 i32)))
 (import "env" "_glUseProgram" (func $_glUseProgram (param i32)))
 (import "env" "_glVertexAttribPointer" (func $_glVertexAttribPointer (param i32 i32 i32 i32 i32 i32)))
 (import "env" "_glViewport" (func $_glViewport (param i32 i32 i32 i32)))
 (import "env" "_glfwCreateWindow" (func $_glfwCreateWindow (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_glfwDefaultWindowHints" (func $_glfwDefaultWindowHints))
 (import "env" "_glfwDestroyWindow" (func $_glfwDestroyWindow (param i32)))
 (import "env" "_glfwGetCursorPos" (func $_glfwGetCursorPos (param i32 i32 i32)))
 (import "env" "_glfwGetTime" (func $_glfwGetTime (result f64)))
 (import "env" "_glfwInit" (func $_glfwInit (result i32)))
 (import "env" "_glfwMakeContextCurrent" (func $_glfwMakeContextCurrent (param i32)))
 (import "env" "_glfwSetCharCallback" (func $_glfwSetCharCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetCursorEnterCallback" (func $_glfwSetCursorEnterCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetCursorPosCallback" (func $_glfwSetCursorPosCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetDropCallback" (func $_glfwSetDropCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetErrorCallback" (func $_glfwSetErrorCallback (param i32) (result i32)))
 (import "env" "_glfwSetKeyCallback" (func $_glfwSetKeyCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetMouseButtonCallback" (func $_glfwSetMouseButtonCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetScrollCallback" (func $_glfwSetScrollCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetWindowIconifyCallback" (func $_glfwSetWindowIconifyCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetWindowShouldClose" (func $_glfwSetWindowShouldClose (param i32 i32)))
 (import "env" "_glfwSetWindowSizeCallback" (func $_glfwSetWindowSizeCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSwapBuffers" (func $_glfwSwapBuffers (param i32)))
 (import "env" "_glfwTerminate" (func $_glfwTerminate))
 (import "env" "_glfwWindowHint" (func $_glfwWindowHint (param i32 i32)))
 (import "env" "_initPthreadsJS" (func $_initPthreadsJS))
 (import "env" "_llvm_stackrestore" (func $_llvm_stackrestore (param i32)))
 (import "env" "_llvm_stacksave" (func $_llvm_stacksave (result i32)))
 (import "env" "_pthread_create" (func $_pthread_create (param i32 i32 i32 i32) (result i32)))
 (import "env" "_time" (func $_time (param i32) (result i32)))
 (import "env" "abortOnCannotGrowMemory" (func $abortOnCannotGrowMemory (param i32) (result i32)))
 (import "env" "setTempRet0" (func $setTempRet0 (param i32)))
 (global $__pthread_ptr (mut i32) (i32.const 0))
 (global $__pthread_is_main_runtime_thread (mut i32) (i32.const 0))
 (global $__pthread_is_main_browser_thread (mut i32) (i32.const 0))
 (global $STACKTOP (mut i32) (i32.const 30880))
 (global $STACK_MAX (mut i32) (i32.const 5273760))
 (export "___em_js__initPthreadsJS" (func $___em_js__initPthreadsJS))
 (export "___emscripten_pthread_data_constructor" (func $___emscripten_pthread_data_constructor))
 (export "___errno_location" (func $___errno_location))
 (export "___pthread_tsd_run_dtors" (func $___pthread_tsd_run_dtors))
 (export "__emscripten_atomic_fetch_and_add_u64" (func $legalstub$__emscripten_atomic_fetch_and_add_u64))
 (export "__emscripten_atomic_fetch_and_and_u64" (func $legalstub$__emscripten_atomic_fetch_and_and_u64))
 (export "__emscripten_atomic_fetch_and_or_u64" (func $legalstub$__emscripten_atomic_fetch_and_or_u64))
 (export "__emscripten_atomic_fetch_and_sub_u64" (func $legalstub$__emscripten_atomic_fetch_and_sub_u64))
 (export "__emscripten_atomic_fetch_and_xor_u64" (func $legalstub$__emscripten_atomic_fetch_and_xor_u64))
 (export "__register_pthread_ptr" (func $__register_pthread_ptr))
 (export "_emscripten_GetProcAddress" (func $_emscripten_GetProcAddress))
 (export "_emscripten_async_queue_call_on_thread" (func $_emscripten_async_queue_call_on_thread))
 (export "_emscripten_async_queue_on_thread_" (func $_emscripten_async_queue_on_thread_))
 (export "_emscripten_async_run_in_main_thread" (func $_emscripten_async_run_in_main_thread))
 (export "_emscripten_atomic_add_u64" (func $legalstub$__emscripten_atomic_fetch_and_add_u64))
 (export "_emscripten_atomic_and_u64" (func $legalstub$__emscripten_atomic_fetch_and_and_u64))
 (export "_emscripten_atomic_cas_u64" (func $legalstub$_emscripten_atomic_cas_u64))
 (export "_emscripten_atomic_exchange_u64" (func $legalstub$_emscripten_atomic_exchange_u64))
 (export "_emscripten_atomic_load_f32" (func $_emscripten_atomic_load_f32))
 (export "_emscripten_atomic_load_f64" (func $_emscripten_atomic_load_f64))
 (export "_emscripten_atomic_load_u64" (func $legalstub$_emscripten_atomic_load_u64))
 (export "_emscripten_atomic_or_u64" (func $legalstub$__emscripten_atomic_fetch_and_or_u64))
 (export "_emscripten_atomic_store_f32" (func $_emscripten_atomic_store_f32))
 (export "_emscripten_atomic_store_f64" (func $_emscripten_atomic_store_f64))
 (export "_emscripten_atomic_store_u64" (func $legalstub$_emscripten_atomic_store_u64))
 (export "_emscripten_atomic_sub_u64" (func $legalstub$__emscripten_atomic_fetch_and_sub_u64))
 (export "_emscripten_atomic_xor_u64" (func $legalstub$__emscripten_atomic_fetch_and_xor_u64))
 (export "_emscripten_conditional_set_current_thread_status" (func $_CursorEnterCallback))
 (export "_emscripten_current_thread_process_queued_calls" (func $_emscripten_current_thread_process_queued_calls))
 (export "_emscripten_get_global_libc" (func $_emscripten_get_global_libc))
 (export "_emscripten_is_main_browser_thread" (func $_emscripten_is_main_browser_thread))
 (export "_emscripten_main_browser_thread_id" (func $_emscripten_main_browser_thread_id))
 (export "_emscripten_main_thread_process_queued_calls" (func $_emscripten_main_thread_process_queued_calls))
 (export "_emscripten_register_main_browser_thread_id" (func $_emscripten_register_main_browser_thread_id))
 (export "_emscripten_run_in_main_runtime_thread_js" (func $_emscripten_run_in_main_runtime_thread_js))
 (export "_emscripten_set_current_thread_status" (func $_emscripten_set_current_thread_status))
 (export "_emscripten_set_thread_name" (func $_CursorEnterCallback))
 (export "_emscripten_sync_run_in_main_thread" (func $_emscripten_sync_run_in_main_thread))
 (export "_emscripten_sync_run_in_main_thread_0" (func $_emscripten_sync_run_in_main_thread_0))
 (export "_emscripten_sync_run_in_main_thread_1" (func $_emscripten_sync_run_in_main_thread_1))
 (export "_emscripten_sync_run_in_main_thread_2" (func $_emscripten_sync_run_in_main_thread_2))
 (export "_emscripten_sync_run_in_main_thread_3" (func $_emscripten_sync_run_in_main_thread_3))
 (export "_emscripten_sync_run_in_main_thread_4" (func $_emscripten_sync_run_in_main_thread_4))
 (export "_emscripten_sync_run_in_main_thread_5" (func $_emscripten_sync_run_in_main_thread_5))
 (export "_emscripten_sync_run_in_main_thread_6" (func $_emscripten_sync_run_in_main_thread_6))
 (export "_emscripten_sync_run_in_main_thread_7" (func $_emscripten_sync_run_in_main_thread_7))
 (export "_emscripten_sync_run_in_main_thread_xprintf_varargs" (func $_emscripten_sync_run_in_main_thread_xprintf_varargs))
 (export "_fflush" (func $_fflush))
 (export "_free" (func $_free))
 (export "_llvm_round_f32" (func $_llvm_round_f32))
 (export "_ma_device_process_pcm_frames_capture__webaudio" (func $_ma_device_process_pcm_frames_capture__webaudio))
 (export "_ma_device_process_pcm_frames_playback__webaudio" (func $_ma_device_process_pcm_frames_playback__webaudio))
 (export "_main" (func $_main))
 (export "_malloc" (func $_malloc))
 (export "_memalign" (func $_memalign))
 (export "_memcpy" (func $_memcpy))
 (export "_memmove" (func $_memmove))
 (export "_memset" (func $_memset))
 (export "_proxy_main" (func $_proxy_main))
 (export "_pthread_self" (func $_pthread_self))
 (export "_sbrk" (func $_sbrk))
 (export "_strstr" (func $_strstr))
 (export "dynCall_ff" (func $dynCall_ff))
 (export "dynCall_fff" (func $dynCall_fff))
 (export "dynCall_i" (func $dynCall_i))
 (export "dynCall_ii" (func $dynCall_ii))
 (export "dynCall_iidiiii" (func $dynCall_iidiiii))
 (export "dynCall_iii" (func $dynCall_iii))
 (export "dynCall_iiii" (func $dynCall_iiii))
 (export "dynCall_iiiii" (func $dynCall_iiiii))
 (export "dynCall_iiiiii" (func $dynCall_iiiiii))
 (export "dynCall_iiiiiii" (func $dynCall_iiiiiii))
 (export "dynCall_iiiiiiii" (func $dynCall_iiiiiiii))
 (export "dynCall_iiiiiiiii" (func $dynCall_iiiiiiiii))
 (export "dynCall_iiiiiiiiii" (func $dynCall_iiiiiiiiii))
 (export "dynCall_jiji" (func $legalstub$dynCall_jiji))
 (export "dynCall_v" (func $dynCall_v))
 (export "dynCall_vf" (func $dynCall_vf))
 (export "dynCall_vff" (func $dynCall_vff))
 (export "dynCall_vfff" (func $dynCall_vfff))
 (export "dynCall_vffff" (func $dynCall_vffff))
 (export "dynCall_vfi" (func $dynCall_vfi))
 (export "dynCall_vi" (func $dynCall_vi))
 (export "dynCall_vidd" (func $dynCall_vidd))
 (export "dynCall_vif" (func $dynCall_vif))
 (export "dynCall_viff" (func $dynCall_viff))
 (export "dynCall_vifff" (func $dynCall_vifff))
 (export "dynCall_viffff" (func $dynCall_viffff))
 (export "dynCall_vii" (func $dynCall_vii))
 (export "dynCall_viif" (func $dynCall_viif))
 (export "dynCall_viifi" (func $dynCall_viifi))
 (export "dynCall_viii" (func $dynCall_viii))
 (export "dynCall_viiii" (func $dynCall_viiii))
 (export "dynCall_viiiii" (func $dynCall_viiiii))
 (export "dynCall_viiiiii" (func $dynCall_viiiiii))
 (export "dynCall_viiiiiii" (func $dynCall_viiiiiii))
 (export "dynCall_viiiiiiii" (func $dynCall_viiiiiiii))
 (export "dynCall_viiiiiiiii" (func $dynCall_viiiiiiiii))
 (export "dynCall_viiiiiiiiii" (func $dynCall_viiiiiiiiii))
 (export "dynCall_viiiiiiiiiii" (func $dynCall_viiiiiiiiiii))
 (export "dynCall_viiji" (func $legalstub$dynCall_viiji))
 (export "establishStackSpace" (func $establishStackSpace))
 (export "stackAlloc" (func $stackAlloc))
 (export "stackRestore" (func $stackRestore))
 (export "stackSave" (func $stackSave))
 (func $stackAlloc (; 326 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (local.get $0)
    (global.get $STACKTOP)
   )
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 15)
    )
    (i32.const -16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (local.get $0)
   )
  )
  (local.get $1)
 )
 (func $stackSave (; 327 ;) (; has Stack IR ;) (result i32)
  (global.get $STACKTOP)
 )
 (func $stackRestore (; 328 ;) (; has Stack IR ;) (param $0 i32)
  (global.set $STACKTOP
   (local.get $0)
  )
 )
 (func $establishStackSpace (; 329 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (global.set $STACKTOP
   (local.get $0)
  )
  (global.set $STACK_MAX
   (local.get $1)
  )
 )
 (func $_main (; 330 ;) (; has Stack IR ;) (result i32)
  ;;@ core/core_loading_thread.c:58:0
  (call $_InitWindow)
  ;;@ core/core_loading_thread.c:61:0
  (call $_emscripten_set_main_loop
   (i32.const 1)
   (i32.const 0)
   (i32.const 1)
  )
  ;;@ core/core_loading_thread.c:75:0
  (call $_CloseWindow)
  ;;@ core/core_loading_thread.c:78:0
  (i32.const 0)
 )
 (func $_UpdateDrawFrame (; 331 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 48)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 40)
   )
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
  )
  (local.set $1
   (local.get $0)
  )
  (block $switch
   (block $switch-case1
    (block $switch-case0
     (block $switch-case
      ;;@ core/core_loading_thread.c:88:0
      (br_table $switch-case $switch-case0 $switch-case1 $switch
       (i32.load
        (i32.const 27648)
       )
      )
     )
     (if
      ;;@ core/core_loading_thread.c:92:0
      (call $_IsKeyPressed)
      (block
       ;;@ core/core_loading_thread.c:94:0
       (local.set $4
        (call $_pthread_create
         (i32.const 27656)
         (i32.const 0)
         (i32.const 2)
         (i32.const 0)
        )
       )
       (if
        ;;@ core/core_loading_thread.c:95:0
        (local.get $4)
        (call $_TraceLog
         (i32.const 5)
         (i32.const 9003)
         (local.get $1)
        )
        ;;@ core/core_loading_thread.c:96:0
        (call $_TraceLog
         (i32.const 3)
         (i32.const 9033)
         (local.get $3)
        )
       )
       ;;@ core/core_loading_thread.c:98:0
       (i32.store
        (i32.const 27648)
        (i32.const 1)
       )
      )
     )
     (br $switch)
    )
    ;;@ core/core_loading_thread.c:103:0
    (local.set $1
     (i32.load
      (i32.const 27652)
     )
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (i32.const 1)
     )
    )
    (i32.store
     (i32.const 27652)
     (local.get $1)
    )
    ;;@ core/core_loading_thread.c:104:0
    (local.set $1
     (i32.load8_s
      (i32.const 28824)
     )
    )
    (if
     (local.get $1)
     (block
      ;;@ core/core_loading_thread.c:106:0
      (i32.store
       (i32.const 27652)
       (i32.const 0)
      )
      ;;@ core/core_loading_thread.c:107:0
      (i32.store
       (i32.const 27648)
       (i32.const 2)
      )
     )
    )
    (br $switch)
   )
   (if
    ;;@ core/core_loading_thread.c:112:0
    (call $_IsKeyPressed)
    (block
     ;;@ core/core_loading_thread.c:115:0
     (i32.store8
      (i32.const 28824)
      (i32.const 0)
     )
     ;;@ core/core_loading_thread.c:116:0
     (i32.store
      (i32.const 27660)
      (i32.const 0)
     )
     ;;@ core/core_loading_thread.c:117:0
     (i32.store
      (i32.const 27648)
      (i32.const 0)
     )
    )
   )
  )
  ;;@ core/core_loading_thread.c:126:0
  (call $_BeginDrawing)
  ;;@ core/core_loading_thread.c:128:0
  (i32.store8 offset=36
   (local.get $0)
   (i32.const -11)
  )
  (i32.store8 offset=37
   (local.get $0)
   (i32.const -11)
  )
  (i32.store8 offset=38
   (local.get $0)
   (i32.const -11)
  )
  (i32.store8 offset=39
   (local.get $0)
   (i32.const -1)
  )
  (i32.store align=1
   (local.get $2)
   (i32.load offset=36 align=1
    (local.get $0)
   )
  )
  (call $_ClearBackground
   (local.get $2)
  )
  (block $switch2
   (block $switch-case5
    (block $switch-case4
     (block $switch-case3
      ;;@ core/core_loading_thread.c:130:0
      (br_table $switch-case3 $switch-case4 $switch-case5 $switch2
       (i32.load
        (i32.const 27648)
       )
      )
     )
     ;;@ core/core_loading_thread.c:132:0
     (i32.store8 offset=32
      (local.get $0)
      (i32.const 80)
     )
     (i32.store8 offset=33
      (local.get $0)
      (i32.const 80)
     )
     (i32.store8 offset=34
      (local.get $0)
      (i32.const 80)
     )
     (i32.store8 offset=35
      (local.get $0)
      (i32.const -1)
     )
     (i32.store align=1
      (local.get $2)
      (i32.load offset=32 align=1
       (local.get $0)
      )
     )
     (call $_DrawText
      (i32.const 9073)
      (i32.const 150)
      (i32.const 170)
      (i32.const 20)
      (local.get $2)
     )
     (br $switch2)
    )
    ;;@ core/core_loading_thread.c:135:0
    (local.set $1
     (i32.load
      (i32.const 27660)
     )
    )
    (i32.store8 offset=28
     (local.get $0)
     (i32.const 102)
    )
    (i32.store8 offset=29
     (local.get $0)
     (i32.const -65)
    )
    (i32.store8 offset=30
     (local.get $0)
     (i32.const -1)
    )
    (i32.store8 offset=31
     (local.get $0)
     (i32.const -1)
    )
    (i32.store align=1
     (local.get $2)
     (i32.load offset=28 align=1
      (local.get $0)
     )
    )
    (call $_DrawRectangle
     (i32.const 150)
     (i32.const 200)
     (local.get $1)
     (i32.const 60)
     (local.get $2)
    )
    ;;@ core/core_loading_thread.c:136:0
    (local.set $1
     (i32.load
      (i32.const 27652)
     )
    )
    (local.set $1
     (i32.div_s
      (local.get $1)
      (i32.const 15)
     )
    )
    (local.set $1
     (i32.and
      (local.get $1)
      (i32.const 1)
     )
    )
    (if
     (local.get $1)
     (block
      (i32.store8 offset=24
       (local.get $0)
       (i32.const 0)
      )
      (i32.store8 offset=25
       (local.get $0)
       (i32.const 82)
      )
      (i32.store8 offset=26
       (local.get $0)
       (i32.const -84)
      )
      (i32.store8 offset=27
       (local.get $0)
       (i32.const -1)
      )
      (i32.store align=1
       (local.get $2)
       (i32.load offset=24 align=1
        (local.get $0)
       )
      )
      (call $_DrawText
       (i32.const 9107)
       (i32.const 240)
       (i32.const 210)
       (i32.const 40)
       (local.get $2)
      )
     )
    )
    (br $switch2)
   )
   ;;@ core/core_loading_thread.c:141:0
   (i32.store8 offset=20
    (local.get $0)
    (i32.const 0)
   )
   (i32.store8 offset=21
    (local.get $0)
    (i32.const -98)
   )
   (i32.store8 offset=22
    (local.get $0)
    (i32.const 47)
   )
   (i32.store8 offset=23
    (local.get $0)
    (i32.const -1)
   )
   (i32.store align=1
    (local.get $2)
    (i32.load offset=20 align=1
     (local.get $0)
    )
   )
   (call $_DrawRectangle
    (i32.const 150)
    (i32.const 200)
    (i32.const 500)
    (i32.const 60)
    (local.get $2)
   )
   ;;@ core/core_loading_thread.c:142:0
   (i32.store8 offset=16
    (local.get $0)
    (i32.const 0)
   )
   (i32.store8 offset=17
    (local.get $0)
    (i32.const -28)
   )
   (i32.store8 offset=18
    (local.get $0)
    (i32.const 48)
   )
   (i32.store8 offset=19
    (local.get $0)
    (i32.const -1)
   )
   (i32.store align=1
    (local.get $2)
    (i32.load offset=16 align=1
     (local.get $0)
    )
   )
   (call $_DrawText
    (i32.const 9123)
    (i32.const 250)
    (i32.const 210)
    (i32.const 40)
    (local.get $2)
   )
  )
  ;;@ core/core_loading_thread.c:148:0
  (i32.store8 offset=12
   (local.get $0)
   (i32.const 80)
  )
  (i32.store8 offset=13
   (local.get $0)
   (i32.const 80)
  )
  (i32.store8 offset=14
   (local.get $0)
   (i32.const 80)
  )
  (i32.store8 offset=15
   (local.get $0)
   (i32.const -1)
  )
  (i32.store align=1
   (local.get $2)
   (i32.load offset=12 align=1
    (local.get $0)
   )
  )
  (call $_DrawRectangleLines
   (local.get $2)
  )
  ;;@ core/core_loading_thread.c:150:0
  (call $_EndDrawing)
  (global.set $STACKTOP
   (local.get $0)
  )
 )
 (func $_LoadDataThread (; 332 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  ;;@ core/core_loading_thread.c:158:0
  (local.set $2
   (call $_clock)
  )
  ;;@ core/core_loading_thread.c:162:0
  (local.set $0
   (i32.load
    (i32.const 27664)
   )
  )
  (if
   (i32.lt_s
    (local.get $0)
    (i32.const 5000)
   )
   (loop $while-in
    ;;@ core/core_loading_thread.c:164:0
    (local.set $0
     (call $_clock)
    )
    (local.set $0
     (i32.sub
      (local.get $0)
      (local.get $2)
     )
    )
    ;;@ core/core_loading_thread.c:165:0
    (local.set $1
     (i32.div_s
      (local.get $0)
      (i32.const 1000)
     )
    )
    (i32.store
     (i32.const 27664)
     (local.get $1)
    )
    ;;@ core/core_loading_thread.c:169:0
    (local.set $1
     (i32.div_s
      (local.get $0)
      (i32.const 10000)
     )
    )
    (i32.store
     (i32.const 27660)
     (local.get $1)
    )
    ;;@ core/core_loading_thread.c:162:0
    (br_if $while-in
     (i32.lt_s
      (local.get $0)
      (i32.const 5000000)
     )
    )
   )
  )
  ;;@ core/core_loading_thread.c:173:0
  (i32.store8
   (i32.const 28824)
   (i32.const 1)
  )
  ;;@ core/core_loading_thread.c:175:0
  (i32.const 0)
 )
 (func $_ma_device_process_pcm_frames_capture__webaudio (; 333 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 4112)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 4112)
   )
  )
  (local.set $3
   (local.get $5)
  )
  (block $folding-inner0
   (if
    (i32.ne
     (i32.load offset=4
      (local.get $0)
     )
     (i32.const 3)
    )
    (block
     (if
      (i32.eqz
       (local.get $1)
      )
      (call $___assert_fail
       (i32.const 9136)
       (i32.const 9151)
       (i32.const 5409)
       (i32.const 9526)
      )
     )
     (if
      (i32.eqz
       (local.get $2)
      )
      (call $___assert_fail
       (i32.const 9290)
       (i32.const 9151)
       (i32.const 5410)
       (i32.const 9526)
      )
     )
     (br_if $folding-inner0
      (i32.eqz
       (local.tee $6
        (i32.load offset=16
         (local.get $0)
        )
       )
      )
     )
     (if
      (i32.and
       (i32.load8_s
        (i32.add
         (local.get $0)
         (i32.const 94208)
        )
       )
       (i32.const 64)
      )
      (block
       (call_indirect (type $FUNCSIG$viiii)
        (local.get $0)
        (i32.const 0)
        (local.get $2)
        (local.get $1)
        (i32.add
         (i32.and
          (local.get $6)
          (i32.const 31)
         )
         (i32.const 290)
        )
       )
       (br $folding-inner0)
      )
     )
     (i32.store
      (i32.add
       (local.get $0)
       (i32.const 94272)
      )
      (local.get $1)
     )
     (i32.store
      (i32.add
       (local.get $0)
       (i32.const 94276)
      )
      (local.get $2)
     )
     (if
      (local.tee $1
       (i32.wrap_i64
        (call $_ma_pcm_converter_read
         (local.tee $2
          (i32.add
           (local.get $0)
           (i32.const 47744)
          )
         )
         (local.get $3)
         (local.tee $8
          (i64.extend_i32_u
           (local.tee $4
            (i32.div_u
             (i32.const 4096)
             (i32.mul
              (i32.load
               (i32.add
                (local.get $0)
                (i32.const 47628)
               )
              )
              (call $_ma_get_bytes_per_sample
               (i32.load
                (i32.add
                 (local.get $0)
                 (i32.const 47624)
                )
               )
              )
             )
            )
           )
          )
         )
        )
       )
      )
      (loop $while-in
       (block $label$break$L16
        (call_indirect (type $FUNCSIG$viiii)
         (local.get $0)
         (i32.const 0)
         (local.get $3)
         (local.get $1)
         (i32.add
          (i32.and
           (local.get $6)
           (i32.const 31)
          )
          (i32.const 290)
         )
        )
        (br_if $label$break$L16
         (i32.gt_u
          (local.get $4)
          (local.get $1)
         )
        )
        (br_if $while-in
         (local.tee $1
          (i32.wrap_i64
           (call $_ma_pcm_converter_read
            (local.get $2)
            (local.get $3)
            (local.get $8)
           )
          )
         )
        )
       )
      )
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.eqz
     (local.get $1)
    )
    (call $___assert_fail
     (i32.const 9136)
     (i32.const 9151)
     (i32.const 5446)
     (i32.const 9377)
    )
   )
   (if
    (i32.eqz
     (local.get $2)
    )
    (call $___assert_fail
     (i32.const 9217)
     (i32.const 9151)
     (i32.const 5447)
     (i32.const 9377)
    )
   )
   (i32.store
    (i32.add
     (local.get $0)
     (i32.const 94272)
    )
    (local.get $1)
   )
   (i32.store
    (i32.add
     (local.get $0)
     (i32.const 94276)
    )
    (local.get $2)
   )
   (i32.store
    (local.get $3)
    (i32.const 256)
   )
   (if
    (i32.eqz
     (call $_ma_pcm_rb_acquire_write
      (local.tee $2
       (i32.add
        (local.get $0)
        (i32.const 94344)
       )
      )
      (local.get $3)
      (local.tee $4
       (i32.add
        (local.get $5)
        (i32.const 4096)
       )
      )
     )
    )
    (block $label$break$L30
     (local.set $9
      (i32.add
       (local.get $0)
       (i32.const 47744)
      )
     )
     (block $__rjti$2
      (loop $while-in2
       (block $__rjti$0
        (if
         (i32.eqz
          (local.tee $7
           (i32.load
            (local.get $3)
           )
          )
         )
         (br_if $folding-inner0
          (i32.eq
           (call $_ma_pcm_rb_pointer_disance
            (local.get $2)
           )
           (block $__inlined_func$_ma_pcm_rb_get_subbuffer_size (result i32)
            (drop
             (br_if $__inlined_func$_ma_pcm_rb_get_subbuffer_size
              (i32.const 0)
              (i32.eqz
               (local.tee $1
                (local.get $2)
               )
              )
             )
            )
            (i32.div_u
             (block $__inlined_func$_ma_rb_get_subbuffer_size (result i32)
              (drop
               (br_if $__inlined_func$_ma_rb_get_subbuffer_size
                (i32.const 0)
                (i32.eqz
                 (local.tee $6
                  (local.get $1)
                 )
                )
               )
              )
              (i32.load offset=4
               (local.get $6)
              )
             )
             (i32.mul
              (i32.load offset=32
               (local.get $1)
              )
              (call $_ma_get_bytes_per_sample
               (i32.load offset=28
                (local.get $1)
               )
              )
             )
            )
           )
          )
         )
        )
        (br_if $__rjti$0
         (call $_ma_pcm_rb_commit_write
          (local.get $2)
          (local.tee $1
           (i32.wrap_i64
            (call $_ma_pcm_converter_read
             (local.get $9)
             (i32.load
              (local.get $4)
             )
             (i64.extend_i32_u
              (local.get $7)
             )
            )
           )
          )
          (i32.load
           (local.get $4)
          )
         )
        )
        (br_if $__rjti$2
         (i32.gt_u
          (local.get $7)
          (local.get $1)
         )
        )
        (i32.store
         (local.get $3)
         (i32.const 256)
        )
        (br_if $while-in2
         (i32.eqz
          (call $_ma_pcm_rb_acquire_write
           (local.get $2)
           (local.get $3)
           (local.get $4)
          )
         )
        )
        (br $label$break$L30)
       )
      )
      (call $_ma_post_error
       (local.get $0)
       (i32.const 9474)
      )
      (br $folding-inner0)
     )
     (br $folding-inner0)
    )
   )
   (call $_ma_post_error
    (local.get $0)
    (i32.const 9419)
   )
   (global.set $STACKTOP
    (local.get $5)
   )
   (return)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_ma_device_process_pcm_frames_playback__webaudio (; 334 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 8208)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 8208)
   )
  )
  (if
   (i32.ne
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 3)
   )
   (block
    (if
     (i32.eqz
      (local.get $1)
     )
     (call $___assert_fail
      (i32.const 9136)
      (i32.const 9151)
      (i32.const 5389)
      (i32.const 9255)
     )
    )
    (if
     (i32.eqz
      (local.get $2)
     )
     (call $___assert_fail
      (i32.const 9290)
      (i32.const 9151)
      (i32.const 5390)
      (i32.const 9255)
     )
    )
    (if
     (i32.eqz
      (local.tee $3
       (i32.load offset=16
        (local.get $0)
       )
      )
     )
     (block
      (global.set $STACKTOP
       (local.get $4)
      )
      (return)
     )
    )
    (if
     (i32.and
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 47232)
       )
      )
      (i32.const 64)
     )
     (block
      (local.set $7
       (i32.load offset=652
        (local.get $0)
       )
      )
      (drop
       (call $_memset
        (local.get $2)
        (i32.const 0)
        (i32.mul
         (call $_ma_get_bytes_per_sample
          (i32.load offset=648
           (local.get $0)
          )
         )
         (i32.mul
          (local.get $1)
          (local.get $7)
         )
        )
       )
      )
      (call_indirect (type $FUNCSIG$viiii)
       (local.get $0)
       (local.get $2)
       (i32.const 0)
       (local.get $1)
       (i32.add
        (i32.and
         (local.get $3)
         (i32.const 31)
        )
        (i32.const 290)
       )
      )
     )
     (drop
      (call $_ma_pcm_converter_read
       (i32.add
        (local.get $0)
        (i32.const 768)
       )
       (local.get $2)
       (i64.extend_i32_u
        (local.get $1)
       )
      )
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (if
   (i32.eqz
    (local.get $1)
   )
   (call $___assert_fail
    (i32.const 9136)
    (i32.const 9151)
    (i32.const 5497)
    (i32.const 9174)
   )
  )
  (if
   (i32.eqz
    (local.get $2)
   )
   (call $___assert_fail
    (i32.const 9217)
    (i32.const 9151)
    (i32.const 5498)
    (i32.const 9174)
   )
  )
  (local.set $8
   (i32.add
    (local.get $4)
    (i32.const 4096)
   )
  )
  (local.set $5
   (i32.add
    (local.get $4)
    (i32.const 8196)
   )
  )
  (local.set $9
   (i32.sub
    (local.get $4)
    (i32.const -8192)
   )
  )
  (local.set $10
   (i32.add
    (local.get $0)
    (i32.const 94344)
   )
  )
  (drop
   (call $_memset
    (local.tee $7
     (local.get $4)
    )
    (i32.const 0)
    (i32.const 4096)
   )
  )
  (if
   (local.tee $11
    (i32.wrap_i64
     (call $_ma_calculate_frame_count_after_src
      (i32.load offset=8
       (local.get $0)
      )
      (i32.load offset=696
       (local.get $0)
      )
      (i64.extend_i32_u
       (local.get $1)
      )
     )
    )
   )
   (block $label$break$L24
    (local.set $12
     (i32.add
      (local.get $0)
      (i32.const 47296)
     )
    )
    (local.set $13
     (i32.add
      (local.get $0)
      (i32.const 47300)
     )
    )
    (local.set $14
     (i32.add
      (local.get $0)
      (i32.const 768)
     )
    )
    (local.set $15
     (i32.add
      (local.get $0)
      (i32.const 47624)
     )
    )
    (local.set $16
     (i32.add
      (local.get $0)
      (i32.const 47628)
     )
    )
    (local.set $1
     (i32.const 0)
    )
    (loop $while-in
     (block $while-out
      (br_if $label$break$L24
       (i32.eqz
        (call $_ma_device_is_started
         (local.get $0)
        )
       )
      )
      (i32.store
       (local.get $5)
       (select
        (local.tee $6
         (i32.sub
          (local.get $11)
          (local.get $1)
         )
        )
        (local.tee $3
         (i32.div_u
          (i32.const 4096)
          (i32.mul
           (i32.load offset=652
            (local.get $0)
           )
           (call $_ma_get_bytes_per_sample
            (i32.load offset=648
             (local.get $0)
            )
           )
          )
         )
        )
        (i32.gt_u
         (local.get $3)
         (local.get $6)
        )
       )
      )
      (if
       (call $_ma_pcm_rb_acquire_read
        (local.get $10)
        (local.get $5)
        (local.get $9)
       )
       (block
        (local.set $6
         (i32.div_u
          (i32.const 4096)
          (local.tee $3
           (i32.mul
            (i32.load offset=652
             (local.get $0)
            )
            (call $_ma_get_bytes_per_sample
             (i32.load offset=648
              (local.get $0)
             )
            )
           )
          )
         )
        )
        (i32.store
         (local.get $5)
         (local.tee $3
          (i32.div_u
           (i32.const 4096)
           (select
            (local.get $3)
            (local.tee $3
             (i32.mul
              (i32.load
               (local.get $16)
              )
              (call $_ma_get_bytes_per_sample
               (i32.load
                (local.get $15)
               )
              )
             )
            )
            (i32.lt_u
             (local.get $6)
             (i32.div_u
              (i32.const 4096)
              (local.get $3)
             )
            )
           )
          )
         )
        )
        (call_indirect (type $FUNCSIG$viiii)
         (local.get $0)
         (local.get $8)
         (local.get $7)
         (local.get $3)
         (i32.add
          (i32.and
           (i32.load offset=16
            (local.get $0)
           )
           (i32.const 31)
          )
          (i32.const 290)
         )
        )
       )
       (block
        (if
         (local.tee $3
          (i32.load
           (local.get $5)
          )
         )
         (call_indirect (type $FUNCSIG$viiii)
          (local.get $0)
          (local.get $8)
          (i32.load
           (local.get $9)
          )
          (local.get $3)
          (i32.add
           (i32.and
            (i32.load offset=16
             (local.get $0)
            )
            (i32.const 31)
           )
           (i32.const 290)
          )
         )
         (br_if $while-out
          (i32.eqz
           (call $_ma_pcm_rb_pointer_disance
            (local.get $10)
           )
          )
         )
        )
        (br_if $while-out
         (call $_ma_pcm_rb_commit_read
          (local.get $10)
          (i32.load
           (local.get $5)
          )
          (i32.load
           (local.get $9)
          )
         )
        )
       )
      )
      (i32.store
       (local.get $12)
       (local.tee $3
        (i32.load
         (local.get $5)
        )
       )
      )
      (i32.store
       (local.get $13)
       (local.get $8)
      )
      (drop
       (call $_ma_pcm_converter_read
        (local.get $14)
        (local.get $2)
        (i64.extend_i32_u
         (local.get $3)
        )
       )
      )
      (local.set $1
       (i32.add
        (local.tee $6
         (i32.load
          (local.get $5)
         )
        )
        (local.get $1)
       )
      )
      (local.set $3
       (i32.load offset=692
        (local.get $0)
       )
      )
      (local.set $2
       (i32.add
        (i32.mul
         (call $_ma_get_bytes_per_sample
          (i32.load offset=688
           (local.get $0)
          )
         )
         (i32.mul
          (local.get $3)
          (local.get $6)
         )
        )
        (local.get $2)
       )
      )
      (br_if $while-in
       (i32.lt_u
        (local.get $1)
        (local.get $11)
       )
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_ma_calculate_frame_count_after_src (; 335 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i64) (result i64)
  (local $3 f64)
  (local.set $2
   (i64.trunc_f64_u
    (local.tee $3
     (f64.mul
      (f64.div
       (f64.convert_i32_u
        (local.get $0)
       )
       (f64.convert_i32_u
        (local.get $1)
       )
      )
      (f64.convert_i64_s
       (local.get $2)
      )
     )
    )
   )
  )
  (i64.add
   (i64.extend_i32_u
    (f64.gt
     (f64.sub
      (local.get $3)
      (f64.convert_i64_s
       (local.get $2)
      )
     )
     (f64.const 0)
    )
   )
   (local.get $2)
  )
 )
 (func $_ma_device_is_started (; 336 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.eqz
    (local.get $0)
   )
   (block
    (global.set $STACKTOP
     (local.get $1)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (drop
   (i32.atomic.rmw.xchg
    (local.get $1)
    (i32.load offset=12
     (local.get $0)
    )
   )
  )
  (drop
   (i32.atomic.rmw.add
    (i32.const 0)
    (i32.const 0)
   )
  )
  (local.set $0
   (i32.eq
    (i32.load
     (local.get $1)
    )
    (i32.const 2)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
  (local.get $0)
 )
 (func $_ma_get_bytes_per_sample (; 337 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.load
   (i32.add
    (i32.shl
     (local.get $0)
     (i32.const 2)
    )
    (i32.const 1024)
   )
  )
 )
 (func $_ma_pcm_rb_acquire_read (; 338 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return
     (i32.const -2)
    )
   )
  )
  (local.set $4
   (i32.load
    (local.get $1)
   )
  )
  (local.set $5
   (i32.load offset=32
    (local.get $0)
   )
  )
  (i32.store
   (local.tee $6
    (local.get $3)
   )
   (i32.mul
    (call $_ma_get_bytes_per_sample
     (i32.load offset=28
      (local.get $0)
     )
    )
    (i32.mul
     (local.get $4)
     (local.get $5)
    )
   )
  )
  (if
   (local.tee $2
    (call $_ma_rb_acquire_read
     (local.get $0)
     (local.get $3)
     (local.get $2)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return
     (local.get $2)
    )
   )
  )
  (i32.store
   (local.get $1)
   (i32.div_u
    (i32.load
     (local.get $6)
    )
    (i32.mul
     (i32.load offset=32
      (local.get $0)
     )
     (call $_ma_get_bytes_per_sample
      (i32.load offset=28
       (local.get $0)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (i32.const 0)
 )
 (func $_ma_pcm_rb_pointer_disance (; 339 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return
    (i32.const -2)
   )
  )
  (i32.div_u
   (call $_ma_rb_pointer_distance
    (local.get $0)
   )
   (i32.mul
    (i32.load offset=32
     (local.get $0)
    )
    (call $_ma_get_bytes_per_sample
     (i32.load offset=28
      (local.get $0)
     )
    )
   )
  )
 )
 (func $_ma_pcm_rb_commit_read (; 340 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return
    (i32.const -2)
   )
  )
  (local.set $3
   (i32.load offset=32
    (local.get $0)
   )
  )
  (call $_ma_rb_commit_read
   (local.get $0)
   (i32.mul
    (call $_ma_get_bytes_per_sample
     (i32.load offset=28
      (local.get $0)
     )
    )
    (i32.mul
     (local.get $1)
     (local.get $3)
    )
   )
   (local.get $2)
  )
 )
 (func $_ma_pcm_converter_read (; 341 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i64) (result i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i64)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $1)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return
     (i64.const 0)
    )
   )
  )
  (local.set $4
   (local.get $3)
  )
  (if
   (i32.eqz
    (i32.and
     (local.tee $5
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 46464)
       )
      )
     )
     (i32.const 64)
    )
   )
   (block
    (if
     (i32.eqz
      (i32.and
       (local.get $5)
       (i32.const 4)
      )
     )
     (call $___assert_fail
      (i32.const 9313)
      (i32.const 9151)
      (i32.const 30469)
      (i32.const 9355)
     )
    )
    (i32.store
     (local.get $4)
     (local.get $0)
    )
    (i32.store offset=4
     (local.get $4)
     (i32.load offset=4
      (local.get $0)
     )
    )
    (local.set $2
     (call $_ma_format_converter_read
      (i32.sub
       (local.get $0)
       (i32.const -64)
      )
      (local.get $2)
      (local.get $1)
      (local.get $4)
     )
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return
     (local.get $2)
    )
   )
  )
  (if
   (i64.lt_u
    (local.get $2)
    (i64.const 4294967296)
   )
   (block
    (drop
     (i32.load
      (local.get $0)
     )
    )
    (local.set $2
     (i64.extend_i32_u
      (call_indirect (type $FUNCSIG$iiiii)
       (local.get $0)
       (local.get $1)
       (i32.wrap_i64
        (local.get $2)
       )
       (i32.load offset=4
        (local.get $0)
       )
       (i32.const 74)
      )
     )
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return
     (local.get $2)
    )
   )
  )
  (loop $while-in
   (block $__rjti$0
    (drop
     (i32.load
      (local.get $0)
     )
    )
    (br_if $__rjti$0
     (i32.eqz
      (local.tee $5
       (call_indirect (type $FUNCSIG$iiiii)
        (local.get $0)
        (local.get $1)
        (i32.wrap_i64
         (select
          (local.tee $7
           (i64.sub
            (local.get $2)
            (local.get $6)
           )
          )
          (i64.const 4294967295)
          (i64.lt_u
           (local.get $7)
           (i64.const 4294967295)
          )
         )
        )
        (i32.load offset=4
         (local.get $0)
        )
        (i32.const 74)
       )
      )
     )
    )
    (local.set $4
     (i32.mul
      (i32.load offset=124
       (local.get $0)
      )
      (local.get $5)
     )
    )
    (local.set $1
     (i32.add
      (i32.mul
       (call $_ma_get_bytes_per_sample
        (i32.load offset=68
         (local.get $0)
        )
       )
       (local.get $4)
      )
      (local.get $1)
     )
    )
    (br_if $while-in
     (i64.lt_u
      (local.tee $6
       (i64.add
        (i64.extend_i32_u
         (local.get $5)
        )
        (local.get $6)
       )
      )
      (local.get $2)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $6)
 )
 (func $_ma_format_converter_read (; 342 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (param $2 i32) (param $3 i32) (result i64)
  (local $4 i64)
  (local $5 i32)
  (local $6 i64)
  (local $7 i64)
  (local $8 i32)
  (local $9 i64)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 98448)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 98448)
   )
  )
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $2)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $10)
    )
    (return
     (i64.const 0)
    )
   )
  )
  (local.set $11
   (i32.add
    (local.get $8)
    (i32.const 65536)
   )
  )
  (local.set $16
   (i32.add
    (local.get $8)
    (i32.const 98436)
   )
  )
  (local.set $19
   (i32.add
    (local.get $8)
    (i32.const 32768)
   )
  )
  (local.set $13
   (i32.add
    (local.get $8)
    (i32.const 98304)
   )
  )
  (local.set $17
   (i32.add
    (local.get $8)
    (i32.const 98432)
   )
  )
  (local.set $14
   (call $_ma_get_bytes_per_sample
    (local.tee $20
     (i32.load
      (local.get $0)
     )
    )
   )
  )
  (local.set $5
   (call $_ma_get_bytes_per_sample
    (local.tee $12
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
  (local.set $15
   (i32.mul
    (local.tee $18
     (i32.load offset=8
      (local.get $0)
     )
    )
    (local.get $5)
   )
  )
  (if
   (i32.eqz
    (i32.load offset=28
     (local.get $0)
    )
   )
   (block
    (call $_ma_split_buffer
     (local.get $19)
     (local.get $18)
     (local.get $11)
     (local.get $16)
    )
    (local.set $1
     (if (result i64)
      (i64.eq
       (local.get $1)
       (i64.const 0)
      )
      (i64.const 0)
      (block $label$break$L6 (result i64)
       (local.set $9
        (i64.extend_i32_u
         (i32.div_u
          (i32.load
           (local.get $16)
          )
          (local.get $14)
         )
        )
       )
       (loop $while-in
        (block $while-out
         (local.set $6
          (select
           (local.get $9)
           (local.tee $6
            (i64.sub
             (local.get $1)
             (local.get $4)
            )
           )
           (i64.gt_u
            (local.get $6)
            (local.get $9)
           )
          )
         )
         (if
          (i32.eq
           (i32.load
            (local.get $0)
           )
           (i32.load offset=4
            (local.get $0)
           )
          )
          (block
           (drop
            (i32.load offset=32
             (local.get $0)
            )
           )
           (drop
            (br_if $label$break$L6
             (local.get $4)
             (i32.eqz
              (local.tee $5
               (call_indirect (type $FUNCSIG$iiiii)
                (local.get $0)
                (i32.wrap_i64
                 (local.get $6)
                )
                (local.get $11)
                (local.get $3)
                (i32.const 74)
               )
              )
             )
            )
           )
          )
          (block
           (call $_ma_split_buffer
            (local.get $8)
            (i32.load offset=8
             (local.get $0)
            )
            (local.get $13)
            (local.get $17)
           )
           (drop
            (i32.load offset=32
             (local.get $0)
            )
           )
           (br_if $while-out
            (i32.eqz
             (local.tee $12
              (call_indirect (type $FUNCSIG$iiiii)
               (local.get $0)
               (i32.wrap_i64
                (local.tee $6
                 (select
                  (local.tee $7
                   (i64.extend_i32_u
                    (i32.div_u
                     (i32.load
                      (local.get $17)
                     )
                     (local.get $14)
                    )
                   )
                  )
                  (local.get $6)
                  (i64.gt_u
                   (local.get $6)
                   (local.get $7)
                  )
                 )
                )
               )
               (local.get $13)
               (local.get $3)
               (i32.const 74)
              )
             )
            )
           )
           (if
            (i32.load offset=8
             (local.get $0)
            )
            (block
             (local.set $7
              (i64.extend_i32_u
               (local.get $12)
              )
             )
             (local.set $5
              (i32.const 0)
             )
             (loop $while-in1
              (drop
               (i32.load offset=44
                (local.get $0)
               )
              )
              (call_indirect (type $FUNCSIG$viiji)
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $5)
                  (i32.const 2)
                 )
                 (local.get $11)
                )
               )
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $5)
                  (i32.const 2)
                 )
                 (local.get $13)
                )
               )
               (local.get $7)
               (i32.load offset=20
                (local.get $0)
               )
               (i32.const 346)
              )
              (br_if $while-in1
               (i32.lt_u
                (local.tee $5
                 (i32.add
                  (local.get $5)
                  (i32.const 1)
                 )
                )
                (i32.load offset=8
                 (local.get $0)
                )
               )
              )
             )
            )
           )
           (local.set $5
            (local.get $12)
           )
          )
         )
         (drop
          (i32.load offset=48
           (local.get $0)
          )
         )
         (call_indirect (type $FUNCSIG$viiji)
          (local.get $2)
          (local.get $11)
          (local.tee $7
           (i64.extend_i32_u
            (local.get $5)
           )
          )
          (i32.load offset=8
           (local.get $0)
          )
          (i32.const 346)
         )
         (local.set $4
          (i64.add
           (local.get $4)
           (local.get $7)
          )
         )
         (drop
          (br_if $label$break$L6
           (local.get $4)
           (i64.gt_u
            (local.get $6)
            (local.get $7)
           )
          )
         )
         (local.set $2
          (i32.add
           (i32.mul
            (local.get $5)
            (local.get $15)
           )
           (local.get $2)
          )
         )
         (br_if $while-in
          (i64.lt_u
           (local.get $4)
           (local.get $1)
          )
         )
         (br $label$break$L6
          (local.get $4)
         )
        )
       )
       (local.get $4)
      )
     )
    )
    (global.set $STACKTOP
     (local.get $10)
    )
    (return
     (local.get $1)
    )
   )
  )
  (if
   (i32.ne
    (local.get $12)
    (local.get $20)
   )
   (block
    (if
     (i64.ne
      (local.get $1)
      (i64.const 0)
     )
     (block $label$break$L27
      (local.set $9
       (i64.extend_i32_u
        (i32.div_u
         (i32.div_u
          (i32.const 32768)
          (local.get $14)
         )
         (local.get $18)
        )
       )
      )
      (loop $while-in4
       (drop
        (i32.load offset=28
         (local.get $0)
        )
       )
       (br_if $label$break$L27
        (i32.eqz
         (local.tee $5
          (call_indirect (type $FUNCSIG$iiiii)
           (local.get $0)
           (i32.wrap_i64
            (local.tee $7
             (select
              (local.get $9)
              (local.tee $6
               (i64.sub
                (local.get $1)
                (local.get $4)
               )
              )
              (i64.gt_u
               (local.get $6)
               (local.get $9)
              )
             )
            )
           )
           (local.get $11)
           (local.get $3)
           (i32.const 74)
          )
         )
        )
       )
       (drop
        (i32.load offset=44
         (local.get $0)
        )
       )
       (call_indirect (type $FUNCSIG$viiji)
        (local.get $2)
        (local.get $11)
        (i64.extend_i32_u
         (i32.mul
          (i32.load offset=8
           (local.get $0)
          )
          (local.get $5)
         )
        )
        (i32.load offset=20
         (local.get $0)
        )
        (i32.const 346)
       )
       (local.set $4
        (i64.add
         (local.tee $6
          (i64.extend_i32_u
           (local.get $5)
          )
         )
         (local.get $4)
        )
       )
       (br_if $label$break$L27
        (i64.gt_u
         (local.get $7)
         (local.get $6)
        )
       )
       (local.set $2
        (i32.add
         (i32.mul
          (local.get $5)
          (local.get $15)
         )
         (local.get $2)
        )
       )
       (br_if $while-in4
        (i64.lt_u
         (local.get $4)
         (local.get $1)
        )
       )
      )
     )
    )
    (global.set $STACKTOP
     (local.get $10)
    )
    (return
     (local.get $4)
    )
   )
  )
  (if
   (i64.eq
    (local.get $1)
    (i64.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $10)
    )
    (return
     (i64.const 0)
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in6
     (block $while-out5
      (drop
       (i32.load offset=28
        (local.get $0)
       )
      )
      (local.set $5
       (i32.eqz
        (local.tee $8
         (call_indirect (type $FUNCSIG$iiiii)
          (local.get $0)
          (i32.wrap_i64
           (local.tee $9
            (select
             (local.tee $4
              (i64.sub
               (local.get $1)
               (local.get $6)
              )
             )
             (i64.const 4294967295)
             (i64.lt_u
              (local.get $4)
              (i64.const 4294967295)
             )
            )
           )
          )
          (local.get $2)
          (local.get $3)
          (i32.const 74)
         )
        )
       )
      )
      (local.set $4
       (i64.add
        (local.tee $7
         (i64.extend_i32_u
          (local.get $8)
         )
        )
        (local.get $6)
       )
      )
      (br_if $while-out5
       (i32.or
        (local.get $5)
        (i64.gt_u
         (local.get $9)
         (local.get $7)
        )
       )
      )
      (local.set $2
       (i32.add
        (i32.mul
         (local.get $8)
         (local.get $15)
        )
        (local.get $2)
       )
      )
      (br_if $__rjti$0
       (i64.ge_u
        (local.get $4)
        (local.get $1)
       )
      )
      (local.set $6
       (local.get $4)
      )
      (br $while-in6)
     )
    )
    (br $__rjto$0)
   )
   (global.set $STACKTOP
    (local.get $10)
   )
   (return
    (local.get $4)
   )
  )
  (global.set $STACKTOP
   (local.get $10)
  )
  (select
   (local.get $6)
   (local.get $4)
   (local.get $5)
  )
 )
 (func $_ma_split_buffer (; 343 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (local.tee $5
    (i32.ne
     (local.get $3)
     (i32.const 0)
    )
   )
   (i32.store
    (local.get $3)
    (i32.const 0)
   )
  )
  (if
   (i32.or
    (i32.eqz
     (local.get $1)
    )
    (i32.eqz
     (local.get $0)
    )
   )
   (return)
  )
  (local.set $4
   (if (result i32)
    (i32.gt_u
     (local.tee $0
      (i32.sub
       (local.tee $6
        (i32.and
         (i32.add
          (local.get $0)
          (i32.const 63)
         )
         (i32.const -64)
        )
       )
       (local.get $0)
      )
     )
     (i32.const 32768)
    )
    (i32.const 0)
    (i32.and
     (i32.div_u
      (i32.sub
       (i32.const 32768)
       (local.get $0)
      )
      (local.get $1)
     )
     (i32.const -64)
    )
   )
  )
  (if
   (local.get $2)
   (block
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in
     (i32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.add
       (local.get $6)
       (i32.mul
        (local.get $0)
        (local.get $4)
       )
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.get $1)
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.get $5)
   )
   (return)
  )
  (i32.store
   (local.get $3)
   (local.get $4)
  )
 )
 (func $_ma_rb_commit_read (; 344 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return
    (i32.const -2)
   )
  )
  (if
   (i32.ne
    (local.get $2)
    (i32.add
     (i32.load
      (local.get $0)
     )
     (i32.and
      (i32.atomic.load
       (local.tee $2
        (i32.add
         (local.get $0)
         (i32.const 16)
        )
       )
      )
      (i32.const 2147483647)
     )
    )
   )
   (return
    (i32.const -2)
   )
  )
  (if
   (i32.gt_u
    (local.tee $1
     (i32.add
      (local.get $1)
      (i32.and
       (local.tee $3
        (i32.atomic.load
         (local.get $2)
        )
       )
       (i32.const 2147483647)
      )
     )
    )
    (local.tee $0
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
   (return
    (i32.const -2)
   )
  )
  (drop
   (i32.atomic.rmw.xchg
    (local.get $2)
    (select
     (i32.xor
      (local.tee $2
       (i32.and
        (local.get $3)
        (i32.const -2147483648)
       )
      )
      (i32.const -2147483648)
     )
     (i32.or
      (local.get $1)
      (local.get $2)
     )
     (i32.eq
      (local.get $0)
      (local.get $1)
     )
    )
   )
  )
  (drop
   (i32.atomic.rmw.add
    (i32.const 0)
    (i32.const 0)
   )
  )
  (i32.const 0)
 )
 (func $_ma_rb_pointer_distance (; 345 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return
    (i32.const 0)
   )
  )
  (local.set $1
   (i32.and
    (local.tee $3
     (i32.atomic.load offset=16
      (local.get $0)
     )
    )
    (i32.const 2147483647)
   )
  )
  (local.set $2
   (i32.and
    (local.tee $4
     (i32.atomic.load offset=20
      (local.get $0)
     )
    )
    (i32.const 2147483647)
   )
  )
  (if (result i32)
   (i32.gt_s
    (i32.xor
     (local.get $3)
     (local.get $4)
    )
    (i32.const -1)
   )
   (i32.sub
    (local.get $2)
    (local.get $1)
   )
   (i32.add
    (i32.load offset=4
     (local.get $0)
    )
    (i32.sub
     (local.get $2)
     (local.get $1)
    )
   )
  )
 )
 (func $_ma_rb_acquire_read (; 346 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $2)
    )
    (i32.or
     (i32.eqz
      (local.get $0)
     )
     (i32.eqz
      (local.get $1)
     )
    )
   )
   (return
    (i32.const -2)
   )
  )
  (i32.store
   (local.get $1)
   (select
    (local.tee $3
     (i32.sub
      (if (result i32)
       (i32.gt_s
        (i32.xor
         (local.tee $3
          (i32.atomic.load offset=20
           (local.get $0)
          )
         )
         (local.tee $4
          (i32.atomic.load offset=16
           (local.get $0)
          )
         )
        )
        (i32.const -1)
       )
       (i32.and
        (local.get $3)
        (i32.const 2147483647)
       )
       (i32.load offset=4
        (local.get $0)
       )
      )
      (i32.and
       (local.get $4)
       (i32.const 2147483647)
      )
     )
    )
    (local.tee $1
     (i32.load
      (local.get $1)
     )
    )
    (i32.gt_u
     (local.get $1)
     (local.get $3)
    )
   )
  )
  (i32.store
   (local.get $2)
   (i32.add
    (i32.load
     (local.get $0)
    )
    (i32.and
     (i32.atomic.load offset=16
      (local.get $0)
     )
     (i32.const 2147483647)
    )
   )
  )
  (i32.const 0)
 )
 (func $_ma_pcm_rb_acquire_write (; 347 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.eqz
    (local.get $0)
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return
     (i32.const -2)
    )
   )
  )
  (local.set $5
   (i32.load
    (local.get $1)
   )
  )
  (local.set $6
   (i32.load offset=32
    (local.get $0)
   )
  )
  (i32.store
   (local.get $4)
   (i32.mul
    (call $_ma_get_bytes_per_sample
     (i32.load offset=28
      (local.get $0)
     )
    )
    (i32.mul
     (local.get $5)
     (local.get $6)
    )
   )
  )
  (if
   (local.tee $2
    (call $_ma_rb_acquire_write
     (local.get $0)
     (local.get $4)
     (local.get $2)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return
     (local.get $2)
    )
   )
  )
  (i32.store
   (local.get $1)
   (i32.div_u
    (i32.load
     (local.get $4)
    )
    (i32.mul
     (i32.load offset=32
      (local.get $0)
     )
     (call $_ma_get_bytes_per_sample
      (i32.load offset=28
       (local.get $0)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (i32.const 0)
 )
 (func $_ma_post_error (; 348 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $_ma_log
   (if (result i32)
    (local.get $0)
    (i32.load
     (local.get $0)
    )
    (i32.const 0)
   )
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_ma_pcm_rb_commit_write (; 349 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return
    (i32.const -2)
   )
  )
  (local.set $3
   (i32.load offset=32
    (local.get $0)
   )
  )
  (call $_ma_rb_commit_write
   (local.get $0)
   (i32.mul
    (call $_ma_get_bytes_per_sample
     (i32.load offset=28
      (local.get $0)
     )
    )
    (i32.mul
     (local.get $1)
     (local.get $3)
    )
   )
   (local.get $2)
  )
 )
 (func $_ma_rb_commit_write (; 350 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return
    (i32.const -2)
   )
  )
  (if
   (i32.ne
    (local.get $2)
    (i32.add
     (i32.load
      (local.get $0)
     )
     (i32.and
      (i32.atomic.load
       (local.tee $2
        (i32.add
         (local.get $0)
         (i32.const 20)
        )
       )
      )
      (i32.const 2147483647)
     )
    )
   )
   (return
    (i32.const -2)
   )
  )
  (if
   (i32.gt_u
    (local.tee $1
     (i32.add
      (local.get $1)
      (i32.and
       (local.tee $3
        (i32.atomic.load
         (local.get $2)
        )
       )
       (i32.const 2147483647)
      )
     )
    )
    (local.tee $0
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
   (return
    (i32.const -2)
   )
  )
  (drop
   (i32.atomic.rmw.xchg
    (local.get $2)
    (select
     (i32.xor
      (local.tee $2
       (i32.and
        (local.get $3)
        (i32.const -2147483648)
       )
      )
      (i32.const -2147483648)
     )
     (i32.or
      (local.get $1)
      (local.get $2)
     )
     (i32.eq
      (local.get $0)
      (local.get $1)
     )
    )
   )
  )
  (drop
   (i32.atomic.rmw.add
    (i32.const 0)
    (i32.const 0)
   )
  )
  (i32.const 0)
 )
 (func $_ma_log (; 351 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return)
  )
  (if
   (i32.eqz
    (local.tee $3
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
   (return)
  )
  (call_indirect (type $FUNCSIG$viiii)
   (local.get $0)
   (local.get $1)
   (i32.const 1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $3)
     (i32.const 31)
    )
    (i32.const 290)
   )
  )
 )
 (func $_ma_rb_acquire_write (; 352 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.or
    (i32.eqz
     (local.get $2)
    )
    (i32.or
     (i32.eqz
      (local.get $0)
     )
     (i32.eqz
      (local.get $1)
     )
    )
   )
   (return
    (i32.const -2)
   )
  )
  (i32.store
   (local.get $1)
   (select
    (local.tee $3
     (i32.sub
      (if (result i32)
       (i32.gt_s
        (i32.xor
         (local.tee $3
          (i32.atomic.load offset=16
           (local.get $0)
          )
         )
         (local.tee $4
          (i32.atomic.load offset=20
           (local.get $0)
          )
         )
        )
        (i32.const -1)
       )
       (i32.load offset=4
        (local.get $0)
       )
       (i32.and
        (local.get $3)
        (i32.const 2147483647)
       )
      )
      (i32.and
       (local.get $4)
       (i32.const 2147483647)
      )
     )
    )
    (local.tee $4
     (i32.load
      (local.get $1)
     )
    )
    (i32.gt_u
     (local.get $4)
     (local.get $3)
    )
   )
  )
  (i32.store
   (local.get $2)
   (local.tee $2
    (i32.add
     (i32.load
      (local.get $0)
     )
     (i32.and
      (i32.atomic.load offset=20
       (local.get $0)
      )
      (i32.const 2147483647)
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load8_s offset=24
      (local.get $0)
     )
     (i32.const 2)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $_memset
    (local.get $2)
    (i32.const 0)
    (i32.load
     (local.get $1)
    )
   )
  )
  (i32.const 0)
 )
 (func $_Vector2Distance (; 353 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result f32)
  (local $2 f32)
  (f32.sqrt
   (f32.add
    (f32.mul
     (local.tee $2
      (f32.sub
       (f32.load
        (local.get $0)
       )
       (f32.load
        (local.get $1)
       )
      )
     )
     (local.get $2)
    )
    (f32.mul
     (local.tee $2
      (f32.sub
       (f32.load offset=4
        (local.get $0)
       )
       (f32.load offset=4
        (local.get $1)
       )
      )
     )
     (local.get $2)
    )
   )
  )
 )
 (func $_Vector2Angle (; 354 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result f32)
  (local $2 f32)
  (select
   (f32.add
    (local.tee $2
     (f32.mul
      (call $_atan2f
       (f32.sub
        (f32.load offset=4
         (local.get $1)
        )
        (f32.load offset=4
         (local.get $0)
        )
       )
       (f32.sub
        (f32.load
         (local.get $1)
        )
        (f32.load
         (local.get $0)
        )
       )
      )
      (f32.const 57.2957763671875)
     )
    )
    (f32.const 360)
   )
   (local.get $2)
   (f32.lt
    (local.get $2)
    (f32.const 0)
   )
  )
 )
 (func $_Vector3Length (; 355 ;) (; has Stack IR ;) (param $0 i32) (result f32)
  (local $1 f32)
  (f32.sqrt
   (f32.add
    (f32.add
     (f32.mul
      (local.tee $1
       (f32.load
        (local.get $0)
       )
      )
      (local.get $1)
     )
     (f32.mul
      (local.tee $1
       (f32.load offset=4
        (local.get $0)
       )
      )
      (local.get $1)
     )
    )
    (f32.mul
     (local.tee $1
      (f32.load offset=8
       (local.get $0)
      )
     )
     (local.get $1)
    )
   )
  )
 )
 (func $_Vector3Normalize (; 356 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 f32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 f32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $2
   (f32.load
    (local.get $1)
   )
  )
  (local.set $5
   (f32.load offset=4
    (local.get $1)
   )
  )
  (local.set $6
   (f32.load offset=8
    (local.get $1)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.get $1)
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.load offset=8
    (local.get $1)
   )
  )
  (f32.store
   (local.get $0)
   (f32.mul
    (local.get $2)
    (local.tee $2
     (select
      (f32.const 1)
      (f32.div
       (f32.const 1)
       (local.tee $2
        (call $_Vector3Length
         (local.get $3)
        )
       )
      )
      (f32.eq
       (local.get $2)
       (f32.const 0)
      )
     )
    )
   )
  )
  (f32.store offset=4
   (local.get $0)
   (f32.mul
    (local.get $5)
    (local.get $2)
   )
  )
  (f32.store offset=8
   (local.get $0)
   (f32.mul
    (local.get $6)
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_Vector3Transform (; 357 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 f32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local.set $6
   (f32.add
    (f32.load offset=28
     (local.get $2)
    )
    (f32.add
     (f32.add
      (f32.mul
       (local.tee $3
        (f32.load
         (local.get $1)
        )
       )
       (f32.load offset=16
        (local.get $2)
       )
      )
      (f32.mul
       (local.tee $4
        (f32.load offset=4
         (local.get $1)
        )
       )
       (f32.load offset=20
        (local.get $2)
       )
      )
     )
     (f32.mul
      (local.tee $5
       (f32.load offset=8
        (local.get $1)
       )
      )
      (f32.load offset=24
       (local.get $2)
      )
     )
    )
   )
  )
  (local.set $7
   (f32.add
    (f32.load offset=44
     (local.get $2)
    )
    (f32.add
     (f32.add
      (f32.mul
       (local.get $3)
       (f32.load offset=32
        (local.get $2)
       )
      )
      (f32.mul
       (local.get $4)
       (f32.load offset=36
        (local.get $2)
       )
      )
     )
     (f32.mul
      (local.get $5)
      (f32.load offset=40
       (local.get $2)
      )
     )
    )
   )
  )
  (f32.store
   (local.get $0)
   (f32.add
    (f32.load offset=12
     (local.get $2)
    )
    (f32.add
     (f32.add
      (f32.mul
       (local.get $3)
       (f32.load
        (local.get $2)
       )
      )
      (f32.mul
       (local.get $4)
       (f32.load offset=4
        (local.get $2)
       )
      )
     )
     (f32.mul
      (local.get $5)
      (f32.load offset=8
       (local.get $2)
      )
     )
    )
   )
  )
  (f32.store offset=4
   (local.get $0)
   (local.get $6)
  )
  (f32.store offset=8
   (local.get $0)
   (local.get $7)
  )
 )
 (func $_MatrixIdentity (; 358 ;) (; has Stack IR ;) (param $0 i32)
  (f32.store
   (local.get $0)
   (f32.const 1)
  )
  (i64.store offset=4 align=4
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=12 align=4
   (local.get $0)
   (i64.const 0)
  )
  (f32.store offset=20
   (local.get $0)
   (f32.const 1)
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.const 0)
  )
  (f32.store offset=40
   (local.get $0)
   (f32.const 1)
  )
  (i64.store offset=44 align=4
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=52 align=4
   (local.get $0)
   (i64.const 0)
  )
  (f32.store offset=60
   (local.get $0)
   (f32.const 1)
  )
 )
 (func $_MatrixTranslate (; 359 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32)
  (f32.store
   (local.get $0)
   (f32.const 1)
  )
  (f32.store offset=4
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=8
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=12
   (local.get $0)
   (local.get $1)
  )
  (f32.store offset=16
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=20
   (local.get $0)
   (f32.const 1)
  )
  (f32.store offset=24
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=28
   (local.get $0)
   (local.get $2)
  )
  (f32.store offset=32
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=36
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=40
   (local.get $0)
   (f32.const 1)
  )
  (f32.store offset=44
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=48
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=52
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=56
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=60
   (local.get $0)
   (f32.const 1)
  )
 )
 (func $_MatrixRotate (; 360 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 f32)
  (local $3 f32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f32)
  (local.set $1
   (i32.and
    (f32.ne
     (local.tee $4
      (f32.sqrt
       (f32.add
        (f32.add
         (f32.mul
          (local.tee $2
           (f32.load
            (local.get $1)
           )
          )
          (local.get $2)
         )
         (f32.mul
          (local.tee $3
           (f32.load offset=4
            (local.get $1)
           )
          )
          (local.get $3)
         )
        )
        (f32.mul
         (local.tee $5
          (f32.load offset=8
           (local.get $1)
          )
         )
         (local.get $5)
        )
       )
      )
     )
     (f32.const 1)
    )
    (f32.ne
     (local.get $4)
     (f32.const 0)
    )
   )
  )
  (local.set $2
   (select
    (f32.mul
     (local.get $2)
     (local.tee $4
      (f32.div
       (f32.const 1)
       (local.get $4)
      )
     )
    )
    (local.get $2)
    (local.get $1)
   )
  )
  (local.set $3
   (select
    (f32.mul
     (local.get $3)
     (local.get $4)
    )
    (local.get $3)
    (local.get $1)
   )
  )
  (local.set $5
   (select
    (f32.mul
     (local.get $5)
     (local.get $4)
    )
    (local.get $5)
    (local.get $1)
   )
  )
  (local.set $6
   (call $_sinf
    (f32.const 0)
   )
  )
  (local.set $8
   (f32.mul
    (local.tee $4
     (f32.sub
      (f32.const 1)
      (local.tee $7
       (call $_cosf
        (f32.const 0)
       )
      )
     )
    )
    (f32.mul
     (local.get $3)
     (local.get $2)
    )
   )
  )
  (f32.store
   (local.get $0)
   (f32.add
    (local.get $7)
    (f32.mul
     (local.get $4)
     (f32.mul
      (local.get $2)
      (local.get $2)
     )
    )
   )
  )
  (f32.store offset=4
   (local.get $0)
   (f32.sub
    (local.get $8)
    (local.tee $9
     (f32.mul
      (local.get $6)
      (local.get $5)
     )
    )
   )
  )
  (f32.store offset=8
   (local.get $0)
   (f32.add
    (local.tee $10
     (f32.mul
      (local.get $6)
      (local.get $3)
     )
    )
    (local.tee $11
     (f32.mul
      (local.get $4)
      (f32.mul
       (local.get $5)
       (local.get $2)
      )
     )
    )
   )
  )
  (f32.store offset=12
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=16
   (local.get $0)
   (f32.add
    (local.get $9)
    (local.get $8)
   )
  )
  (f32.store offset=20
   (local.get $0)
   (f32.add
    (local.get $7)
    (f32.mul
     (local.get $4)
     (f32.mul
      (local.get $3)
      (local.get $3)
     )
    )
   )
  )
  (f32.store offset=24
   (local.get $0)
   (f32.sub
    (local.tee $3
     (f32.mul
      (local.get $4)
      (f32.mul
       (local.get $5)
       (local.get $3)
      )
     )
    )
    (local.tee $2
     (f32.mul
      (local.get $6)
      (local.get $2)
     )
    )
   )
  )
  (f32.store offset=28
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=32
   (local.get $0)
   (f32.sub
    (local.get $11)
    (local.get $10)
   )
  )
  (f32.store offset=36
   (local.get $0)
   (f32.add
    (local.get $2)
    (local.get $3)
   )
  )
  (f32.store offset=40
   (local.get $0)
   (f32.add
    (local.get $7)
    (f32.mul
     (local.get $4)
     (f32.mul
      (local.get $5)
      (local.get $5)
     )
    )
   )
  )
  (i64.store offset=44 align=4
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=52 align=4
   (local.get $0)
   (i64.const 0)
  )
  (f32.store offset=60
   (local.get $0)
   (f32.const 1)
  )
 )
 (func $_MatrixMultiply (; 361 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 f32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 f32)
  (local $18 f32)
  (local $19 f32)
  (local $20 f32)
  (local $21 f32)
  (local $22 f32)
  (local $23 f32)
  (local $24 f32)
  (local $25 f32)
  (local $26 f32)
  (local $27 f32)
  (local $28 f32)
  (local $29 f32)
  (local $30 f32)
  (local $31 f32)
  (local $32 f32)
  (local $33 f32)
  (local $34 f32)
  (local.set $3
   (f32.load offset=16
    (local.get $2)
   )
  )
  (local.set $4
   (f32.load offset=20
    (local.get $2)
   )
  )
  (local.set $5
   (f32.load offset=24
    (local.get $2)
   )
  )
  (local.set $6
   (f32.load offset=28
    (local.get $2)
   )
  )
  (local.set $7
   (f32.load offset=32
    (local.get $2)
   )
  )
  (local.set $8
   (f32.load offset=36
    (local.get $2)
   )
  )
  (local.set $9
   (f32.load offset=40
    (local.get $2)
   )
  )
  (local.set $10
   (f32.load offset=44
    (local.get $2)
   )
  )
  (local.set $11
   (f32.load offset=48
    (local.get $2)
   )
  )
  (local.set $12
   (f32.load offset=52
    (local.get $2)
   )
  )
  (local.set $13
   (f32.load offset=56
    (local.get $2)
   )
  )
  (local.set $14
   (f32.load offset=60
    (local.get $2)
   )
  )
  (local.set $15
   (f32.load offset=4
    (local.get $1)
   )
  )
  (local.set $16
   (f32.load offset=20
    (local.get $1)
   )
  )
  (local.set $17
   (f32.load offset=36
    (local.get $1)
   )
  )
  (local.set $18
   (f32.load offset=52
    (local.get $1)
   )
  )
  (local.set $19
   (f32.load offset=8
    (local.get $1)
   )
  )
  (local.set $20
   (f32.load offset=24
    (local.get $1)
   )
  )
  (local.set $21
   (f32.load offset=40
    (local.get $1)
   )
  )
  (local.set $22
   (f32.load offset=56
    (local.get $1)
   )
  )
  (local.set $23
   (f32.load offset=12
    (local.get $1)
   )
  )
  (local.set $24
   (f32.load offset=28
    (local.get $1)
   )
  )
  (local.set $25
   (f32.load offset=44
    (local.get $1)
   )
  )
  (local.set $26
   (f32.load offset=60
    (local.get $1)
   )
  )
  (f32.store
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.tee $27
        (f32.load
         (local.get $1)
        )
       )
       (local.tee $28
        (f32.load
         (local.get $2)
        )
       )
      )
      (f32.mul
       (local.tee $29
        (f32.load offset=16
         (local.get $1)
        )
       )
       (local.tee $30
        (f32.load offset=4
         (local.get $2)
        )
       )
      )
     )
     (f32.mul
      (local.tee $31
       (f32.load offset=32
        (local.get $1)
       )
      )
      (local.tee $32
       (f32.load offset=8
        (local.get $2)
       )
      )
     )
    )
    (f32.mul
     (local.tee $33
      (f32.load offset=48
       (local.get $1)
      )
     )
     (local.tee $34
      (f32.load offset=12
       (local.get $2)
      )
     )
    )
   )
  )
  (f32.store offset=4
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $28)
       (local.get $15)
      )
      (f32.mul
       (local.get $30)
       (local.get $16)
      )
     )
     (f32.mul
      (local.get $32)
      (local.get $17)
     )
    )
    (f32.mul
     (local.get $34)
     (local.get $18)
    )
   )
  )
  (f32.store offset=8
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $28)
       (local.get $19)
      )
      (f32.mul
       (local.get $30)
       (local.get $20)
      )
     )
     (f32.mul
      (local.get $32)
      (local.get $21)
     )
    )
    (f32.mul
     (local.get $34)
     (local.get $22)
    )
   )
  )
  (f32.store offset=12
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $28)
       (local.get $23)
      )
      (f32.mul
       (local.get $30)
       (local.get $24)
      )
     )
     (f32.mul
      (local.get $32)
      (local.get $25)
     )
    )
    (f32.mul
     (local.get $34)
     (local.get $26)
    )
   )
  )
  (f32.store offset=16
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $27)
       (local.get $3)
      )
      (f32.mul
       (local.get $29)
       (local.get $4)
      )
     )
     (f32.mul
      (local.get $31)
      (local.get $5)
     )
    )
    (f32.mul
     (local.get $33)
     (local.get $6)
    )
   )
  )
  (f32.store offset=20
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $3)
       (local.get $15)
      )
      (f32.mul
       (local.get $4)
       (local.get $16)
      )
     )
     (f32.mul
      (local.get $5)
      (local.get $17)
     )
    )
    (f32.mul
     (local.get $6)
     (local.get $18)
    )
   )
  )
  (f32.store offset=24
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $3)
       (local.get $19)
      )
      (f32.mul
       (local.get $4)
       (local.get $20)
      )
     )
     (f32.mul
      (local.get $5)
      (local.get $21)
     )
    )
    (f32.mul
     (local.get $6)
     (local.get $22)
    )
   )
  )
  (f32.store offset=28
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $3)
       (local.get $23)
      )
      (f32.mul
       (local.get $4)
       (local.get $24)
      )
     )
     (f32.mul
      (local.get $5)
      (local.get $25)
     )
    )
    (f32.mul
     (local.get $6)
     (local.get $26)
    )
   )
  )
  (f32.store offset=32
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $27)
       (local.get $7)
      )
      (f32.mul
       (local.get $29)
       (local.get $8)
      )
     )
     (f32.mul
      (local.get $31)
      (local.get $9)
     )
    )
    (f32.mul
     (local.get $33)
     (local.get $10)
    )
   )
  )
  (f32.store offset=36
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $7)
       (local.get $15)
      )
      (f32.mul
       (local.get $8)
       (local.get $16)
      )
     )
     (f32.mul
      (local.get $9)
      (local.get $17)
     )
    )
    (f32.mul
     (local.get $10)
     (local.get $18)
    )
   )
  )
  (f32.store offset=40
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $7)
       (local.get $19)
      )
      (f32.mul
       (local.get $8)
       (local.get $20)
      )
     )
     (f32.mul
      (local.get $9)
      (local.get $21)
     )
    )
    (f32.mul
     (local.get $10)
     (local.get $22)
    )
   )
  )
  (f32.store offset=44
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $7)
       (local.get $23)
      )
      (f32.mul
       (local.get $8)
       (local.get $24)
      )
     )
     (f32.mul
      (local.get $9)
      (local.get $25)
     )
    )
    (f32.mul
     (local.get $10)
     (local.get $26)
    )
   )
  )
  (f32.store offset=48
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $27)
       (local.get $11)
      )
      (f32.mul
       (local.get $29)
       (local.get $12)
      )
     )
     (f32.mul
      (local.get $31)
      (local.get $13)
     )
    )
    (f32.mul
     (local.get $33)
     (local.get $14)
    )
   )
  )
  (f32.store offset=52
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $11)
       (local.get $15)
      )
      (f32.mul
       (local.get $12)
       (local.get $16)
      )
     )
     (f32.mul
      (local.get $13)
      (local.get $17)
     )
    )
    (f32.mul
     (local.get $14)
     (local.get $18)
    )
   )
  )
  (f32.store offset=56
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $11)
       (local.get $19)
      )
      (f32.mul
       (local.get $12)
       (local.get $20)
      )
     )
     (f32.mul
      (local.get $13)
      (local.get $21)
     )
    )
    (f32.mul
     (local.get $14)
     (local.get $22)
    )
   )
  )
  (f32.store offset=60
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $11)
       (local.get $23)
      )
      (f32.mul
       (local.get $12)
       (local.get $24)
      )
     )
     (f32.mul
      (local.get $13)
      (local.get $25)
     )
    )
    (f32.mul
     (local.get $14)
     (local.get $26)
    )
   )
  )
 )
 (func $_MatrixOrtho (; 362 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 f64)
  (local $3 f32)
  (f32.store
   (local.get $0)
   (f32.div
    (f32.const 2)
    (local.tee $3
     (f32.demote_f64
      (f64.sub
       (local.get $1)
       (f64.const 0)
      )
     )
    )
   )
  )
  (f32.store offset=4
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=8
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=12
   (local.get $0)
   (f32.div
    (f32.neg
     (f32.add
      (f32.const 0)
      (f32.demote_f64
       (local.get $1)
      )
     )
    )
    (local.get $3)
   )
  )
  (f32.store offset=16
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=20
   (local.get $0)
   (f32.div
    (f32.const 2)
    (local.tee $3
     (f32.demote_f64
      (f64.sub
       (f64.const 0)
       (local.get $2)
      )
     )
    )
   )
  )
  (f32.store offset=24
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=28
   (local.get $0)
   (f32.div
    (f32.neg
     (f32.add
      (f32.demote_f64
       (local.get $2)
      )
      (f32.const 0)
     )
    )
    (local.get $3)
   )
  )
  (f32.store offset=32
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=36
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=40
   (local.get $0)
   (f32.const -2)
  )
  (f32.store offset=44
   (local.get $0)
   (f32.const -1)
  )
  (f32.store offset=48
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=52
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=56
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=60
   (local.get $0)
   (f32.const 1)
  )
 )
 (func $_MatrixToFloatV (; 363 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local.set $2
   (i32.load offset=16
    (local.get $1)
   )
  )
  (local.set $3
   (i32.load offset=32
    (local.get $1)
   )
  )
  (local.set $4
   (i32.load offset=48
    (local.get $1)
   )
  )
  (local.set $5
   (i32.load offset=4
    (local.get $1)
   )
  )
  (local.set $6
   (i32.load offset=20
    (local.get $1)
   )
  )
  (local.set $7
   (i32.load offset=36
    (local.get $1)
   )
  )
  (local.set $8
   (i32.load offset=52
    (local.get $1)
   )
  )
  (local.set $9
   (i32.load offset=8
    (local.get $1)
   )
  )
  (local.set $10
   (i32.load offset=24
    (local.get $1)
   )
  )
  (local.set $11
   (i32.load offset=40
    (local.get $1)
   )
  )
  (local.set $12
   (i32.load offset=56
    (local.get $1)
   )
  )
  (local.set $13
   (i32.load offset=12
    (local.get $1)
   )
  )
  (local.set $14
   (i32.load offset=28
    (local.get $1)
   )
  )
  (local.set $15
   (i32.load offset=44
    (local.get $1)
   )
  )
  (local.set $16
   (i32.load offset=60
    (local.get $1)
   )
  )
  (i32.store
   (local.get $0)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store offset=4
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=8
   (local.get $0)
   (local.get $3)
  )
  (i32.store offset=12
   (local.get $0)
   (local.get $4)
  )
  (i32.store offset=16
   (local.get $0)
   (local.get $5)
  )
  (i32.store offset=20
   (local.get $0)
   (local.get $6)
  )
  (i32.store offset=24
   (local.get $0)
   (local.get $7)
  )
  (i32.store offset=28
   (local.get $0)
   (local.get $8)
  )
  (i32.store offset=32
   (local.get $0)
   (local.get $9)
  )
  (i32.store offset=36
   (local.get $0)
   (local.get $10)
  )
  (i32.store offset=40
   (local.get $0)
   (local.get $11)
  )
  (i32.store offset=44
   (local.get $0)
   (local.get $12)
  )
  (i32.store offset=48
   (local.get $0)
   (local.get $13)
  )
  (i32.store offset=52
   (local.get $0)
   (local.get $14)
  )
  (i32.store offset=56
   (local.get $0)
   (local.get $15)
  )
  (i32.store offset=60
   (local.get $0)
   (local.get $16)
  )
 )
 (func $_rlMatrixMode (; 364 ;) (; has Stack IR ;) (param $0 i32)
  (block $__rjto$0
   (i32.store
    (i32.const 27800)
    (block $__rjti$0 (result i32)
     (block $switch-case0
      (block $switch-case
       (br_table $switch-case0 $switch-case $__rjto$0
        (i32.sub
         (local.get $0)
         (i32.const 5888)
        )
       )
      )
      (br $__rjti$0
       (i32.const 27736)
      )
     )
     (i32.const 27672)
    )
   )
  )
  (i32.store
   (i32.const 8944)
   (local.get $0)
  )
 )
 (func $_rlPushMatrix (; 365 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.gt_s
    (i32.load
     (i32.const 27804)
    )
    (i32.const 31)
   )
   (call $_TraceLog
    (i32.const 5)
    (i32.const 9559)
    (local.get $0)
   )
  )
  (if
   (i32.eq
    (i32.load
     (i32.const 8944)
    )
    (i32.const 5888)
   )
   (block
    (i32.store8
     (i32.const 28825)
     (i32.const 1)
    )
    (i32.store
     (i32.const 27800)
     (i32.const 27808)
    )
   )
  )
  (i64.store align=4
   (local.tee $0
    (i32.add
     (i32.shl
      (local.tee $3
       (i32.load
        (i32.const 27804)
       )
      )
      (i32.const 6)
     )
     (i32.const 20544)
    )
   )
   (i64.load align=4
    (local.tee $1
     (i32.load
      (i32.const 27800)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load offset=8 align=4
    (local.get $1)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load offset=16 align=4
    (local.get $1)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load offset=24 align=4
    (local.get $1)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load offset=32 align=4
    (local.get $1)
   )
  )
  (i64.store offset=40 align=4
   (local.get $0)
   (i64.load offset=40 align=4
    (local.get $1)
   )
  )
  (i64.store offset=48 align=4
   (local.get $0)
   (i64.load offset=48 align=4
    (local.get $1)
   )
  )
  (i64.store offset=56 align=4
   (local.get $0)
   (i64.load offset=56 align=4
    (local.get $1)
   )
  )
  (i32.store
   (i32.const 27804)
   (i32.add
    (local.get $3)
    (i32.const 1)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_TraceLog (; 366 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 144)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 144)
   )
  )
  (if
   (i32.gt_s
    (i32.const 3)
    (local.get $0)
   )
   (block
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $3)
     (i32.const 128)
    )
   )
   (local.get $2)
  )
  (i64.store
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=8
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=16
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=24
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=32
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=40
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=48
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=56
   (local.get $3)
   (i64.const 0)
  )
  (i64.store
   (i32.sub
    (local.get $3)
    (i32.const -64)
   )
   (i64.const 0)
  )
  (i64.store offset=72
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=80
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=88
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=96
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=104
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=112
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=120
   (local.get $3)
   (i64.const 0)
  )
  (block $switch
   (block $switch-case4
    (block $switch-case3
     (block $switch-case2
      (block $switch-case1
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-case0 $switch-case1 $switch-case2 $switch-case3 $switch-case4 $switch
          (i32.sub
           (local.get $0)
           (i32.const 1)
          )
         )
        )
        (i64.store
         (local.get $3)
         (i64.const 9071268410249812)
        )
        (br $switch)
       )
       (i64.store
        (local.get $3)
        (i64.const 9071277302236484)
       )
       (br $switch)
      )
      (i32.store align=1
       (local.get $3)
       (i32.load align=1
        (i32.const 9581)
       )
      )
      (i32.store16 offset=4 align=1
       (local.get $3)
       (i32.load16_s align=1
        (i32.const 9585)
       )
      )
      (i32.store8 offset=6
       (local.get $3)
       (i32.load8_s
        (i32.const 9587)
       )
      )
      (br $switch)
     )
     (i64.store align=1
      (local.get $3)
      (i64.load align=1
       (i32.const 9588)
      )
     )
     (i32.store16 offset=8 align=1
      (local.get $3)
      (i32.load16_s align=1
       (i32.const 9596)
      )
     )
     (br $switch)
    )
    (i64.store
     (local.get $3)
     (i64.const 9071324447265349)
    )
    (br $switch)
   )
   (i64.store
    (local.get $3)
    (i64.const 9071298442707270)
   )
  )
  (call $_strcpy
   (i32.add
    (call $_strlen
     (local.get $3)
    )
    (local.get $3)
   )
   (local.get $1)
  )
  (i32.store16 align=1
   (i32.add
    (call $_strlen
     (local.get $3)
    )
    (local.get $3)
   )
   (i32.const 10)
  )
  (drop
   (call $_vfprintf
    (i32.load
     (i32.const 8956)
    )
    (local.get $3)
    (local.get $5)
   )
  )
  (if
   (i32.le_s
    (i32.const 5)
    (local.get $0)
   )
   (call $_exit
    (i32.const 1)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_rlPopMatrix (; 367 ;) (; has Stack IR ;)
  (local $0 i32)
  (if
   (i32.gt_s
    (local.tee $0
     (i32.load
      (i32.const 27804)
     )
    )
    (i32.const 0)
   )
   (block
    (drop
     (call $_memmove
      (i32.load
       (i32.const 27800)
      )
      (i32.add
       (i32.shl
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const -1)
         )
        )
        (i32.const 6)
       )
       (i32.const 20544)
      )
      (i32.const 64)
     )
    )
    (i32.store
     (i32.const 27804)
     (local.get $0)
    )
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.eqz
      (i32.load
       (i32.const 27804)
      )
     )
     (i32.eq
      (i32.load
       (i32.const 8944)
      )
      (i32.const 5888)
     )
    )
   )
   (return)
  )
  (i32.store
   (i32.const 27800)
   (i32.const 27672)
  )
  (i32.store8
   (i32.const 28825)
   (i32.const 0)
  )
 )
 (func $_rlLoadIdentity (; 368 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 64)
   )
  )
  (local.set $1
   (i32.load
    (i32.const 27800)
   )
  )
  (call $_MatrixIdentity
   (local.get $0)
  )
  (i64.store align=4
   (local.get $1)
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $1)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store offset=16 align=4
   (local.get $1)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store offset=24 align=4
   (local.get $1)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store offset=32 align=4
   (local.get $1)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store offset=40 align=4
   (local.get $1)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store offset=48 align=4
   (local.get $1)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (i64.store offset=56 align=4
   (local.get $1)
   (i64.load offset=56 align=4
    (local.get $0)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_rlTranslatef (; 369 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 256)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 256)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 192)
   )
  )
  (local.set $5
   (i32.add
    (local.get $3)
    (i32.const 128)
   )
  )
  (call $_MatrixTranslate
   (local.tee $6
    (i32.sub
     (local.get $3)
     (i32.const -64)
    )
   )
   (local.get $0)
   (local.get $1)
  )
  (local.set $2
   (i32.load
    (i32.const 27800)
   )
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $6)
   )
  )
  (i64.store offset=8 align=4
   (local.get $5)
   (i64.load offset=8 align=4
    (local.get $6)
   )
  )
  (i64.store offset=16 align=4
   (local.get $5)
   (i64.load offset=16 align=4
    (local.get $6)
   )
  )
  (i64.store offset=24 align=4
   (local.get $5)
   (i64.load offset=24 align=4
    (local.get $6)
   )
  )
  (i64.store offset=32 align=4
   (local.get $5)
   (i64.load offset=32 align=4
    (local.get $6)
   )
  )
  (i64.store offset=40 align=4
   (local.get $5)
   (i64.load offset=40 align=4
    (local.get $6)
   )
  )
  (i64.store offset=48 align=4
   (local.get $5)
   (i64.load offset=48 align=4
    (local.get $6)
   )
  )
  (i64.store offset=56 align=4
   (local.get $5)
   (i64.load offset=56 align=4
    (local.get $6)
   )
  )
  (i64.store align=4
   (local.get $4)
   (i64.load align=4
    (local.get $2)
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i64.store offset=16 align=4
   (local.get $4)
   (i64.load offset=16 align=4
    (local.get $2)
   )
  )
  (i64.store offset=24 align=4
   (local.get $4)
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i64.store offset=32 align=4
   (local.get $4)
   (i64.load offset=32 align=4
    (local.get $2)
   )
  )
  (i64.store offset=40 align=4
   (local.get $4)
   (i64.load offset=40 align=4
    (local.get $2)
   )
  )
  (i64.store offset=48 align=4
   (local.get $4)
   (i64.load offset=48 align=4
    (local.get $2)
   )
  )
  (i64.store offset=56 align=4
   (local.get $4)
   (i64.load offset=56 align=4
    (local.get $2)
   )
  )
  (call $_MatrixMultiply
   (local.get $3)
   (local.get $5)
   (local.get $4)
  )
  (i64.store align=4
   (local.get $2)
   (i64.load align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load offset=8 align=4
    (local.get $3)
   )
  )
  (i64.store offset=16 align=4
   (local.get $2)
   (i64.load offset=16 align=4
    (local.get $3)
   )
  )
  (i64.store offset=24 align=4
   (local.get $2)
   (i64.load offset=24 align=4
    (local.get $3)
   )
  )
  (i64.store offset=32 align=4
   (local.get $2)
   (i64.load offset=32 align=4
    (local.get $3)
   )
  )
  (i64.store offset=40 align=4
   (local.get $2)
   (i64.load offset=40 align=4
    (local.get $3)
   )
  )
  (i64.store offset=48 align=4
   (local.get $2)
   (i64.load offset=48 align=4
    (local.get $3)
   )
  )
  (i64.store offset=56 align=4
   (local.get $2)
   (i64.load offset=56 align=4
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_rlRotatef (; 370 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 288)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 288)
   )
  )
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 224)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 160)
   )
  )
  (local.set $5
   (i32.add
    (local.get $0)
    (i32.const 144)
   )
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.const 16)
   )
  )
  (call $_MatrixIdentity
   (local.tee $4
    (i32.add
     (local.get $0)
     (i32.const 80)
    )
   )
  )
  (f32.store
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=4
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=8
   (local.get $0)
   (f32.const 1)
  )
  (i64.store align=4
   (local.get $1)
   (i64.load align=4
    (local.get $0)
   )
  )
  (i32.store offset=8
   (local.get $1)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (call $_Vector3Normalize
   (local.get $5)
   (local.get $1)
  )
  (i64.store align=4
   (local.get $1)
   (i64.load align=4
    (local.get $5)
   )
  )
  (i32.store offset=8
   (local.get $1)
   (i32.load offset=8
    (local.get $5)
   )
  )
  (call $_MatrixRotate
   (local.get $4)
   (local.get $1)
  )
  (local.set $0
   (i32.load
    (i32.const 27800)
   )
  )
  (i64.store align=4
   (local.get $2)
   (i64.load align=4
    (local.get $4)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load offset=8 align=4
    (local.get $4)
   )
  )
  (i64.store offset=16 align=4
   (local.get $2)
   (i64.load offset=16 align=4
    (local.get $4)
   )
  )
  (i64.store offset=24 align=4
   (local.get $2)
   (i64.load offset=24 align=4
    (local.get $4)
   )
  )
  (i64.store offset=32 align=4
   (local.get $2)
   (i64.load offset=32 align=4
    (local.get $4)
   )
  )
  (i64.store offset=40 align=4
   (local.get $2)
   (i64.load offset=40 align=4
    (local.get $4)
   )
  )
  (i64.store offset=48 align=4
   (local.get $2)
   (i64.load offset=48 align=4
    (local.get $4)
   )
  )
  (i64.store offset=56 align=4
   (local.get $2)
   (i64.load offset=56 align=4
    (local.get $4)
   )
  )
  (i64.store align=4
   (local.get $1)
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $1)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store offset=16 align=4
   (local.get $1)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store offset=24 align=4
   (local.get $1)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store offset=32 align=4
   (local.get $1)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store offset=40 align=4
   (local.get $1)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store offset=48 align=4
   (local.get $1)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (i64.store offset=56 align=4
   (local.get $1)
   (i64.load offset=56 align=4
    (local.get $0)
   )
  )
  (call $_MatrixMultiply
   (local.get $3)
   (local.get $2)
   (local.get $1)
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load offset=8 align=4
    (local.get $3)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load offset=16 align=4
    (local.get $3)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load offset=24 align=4
    (local.get $3)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load offset=32 align=4
    (local.get $3)
   )
  )
  (i64.store offset=40 align=4
   (local.get $0)
   (i64.load offset=40 align=4
    (local.get $3)
   )
  )
  (i64.store offset=48 align=4
   (local.get $0)
   (i64.load offset=48 align=4
    (local.get $3)
   )
  )
  (i64.store offset=56 align=4
   (local.get $0)
   (i64.load offset=56 align=4
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $_rlMultMatrixf (; 371 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 256)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 256)
   )
  )
  (i32.store
   (local.tee $1
    (i32.sub
     (local.get $3)
     (i32.const -64)
    )
   )
   (i32.load
    (local.get $0)
   )
  )
  (i32.store offset=4
   (local.get $1)
   (i32.load offset=16
    (local.get $0)
   )
  )
  (i32.store offset=8
   (local.get $1)
   (i32.load offset=32
    (local.get $0)
   )
  )
  (i32.store offset=12
   (local.get $1)
   (i32.load offset=48
    (local.get $0)
   )
  )
  (i32.store offset=16
   (local.get $1)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (i32.store offset=20
   (local.get $1)
   (i32.load offset=20
    (local.get $0)
   )
  )
  (i32.store offset=24
   (local.get $1)
   (i32.load offset=36
    (local.get $0)
   )
  )
  (i32.store offset=28
   (local.get $1)
   (i32.load offset=52
    (local.get $0)
   )
  )
  (i32.store offset=32
   (local.get $1)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (i32.store offset=36
   (local.get $1)
   (i32.load offset=24
    (local.get $0)
   )
  )
  (i32.store offset=40
   (local.get $1)
   (i32.load offset=40
    (local.get $0)
   )
  )
  (i32.store offset=44
   (local.get $1)
   (i32.load offset=56
    (local.get $0)
   )
  )
  (i32.store offset=48
   (local.get $1)
   (i32.load offset=12
    (local.get $0)
   )
  )
  (i32.store offset=52
   (local.get $1)
   (i32.load offset=28
    (local.get $0)
   )
  )
  (i32.store offset=56
   (local.get $1)
   (i32.load offset=44
    (local.get $0)
   )
  )
  (i32.store offset=60
   (local.get $1)
   (i32.load offset=60
    (local.get $0)
   )
  )
  (i64.store align=4
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 128)
    )
   )
   (i64.load align=4
    (local.tee $2
     (i32.load
      (i32.const 27800)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i64.store offset=16 align=4
   (local.get $4)
   (i64.load offset=16 align=4
    (local.get $2)
   )
  )
  (i64.store offset=24 align=4
   (local.get $4)
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i64.store offset=32 align=4
   (local.get $4)
   (i64.load offset=32 align=4
    (local.get $2)
   )
  )
  (i64.store offset=40 align=4
   (local.get $4)
   (i64.load offset=40 align=4
    (local.get $2)
   )
  )
  (i64.store offset=48 align=4
   (local.get $4)
   (i64.load offset=48 align=4
    (local.get $2)
   )
  )
  (i64.store offset=56 align=4
   (local.get $4)
   (i64.load offset=56 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (local.tee $0
    (i32.add
     (local.get $3)
     (i32.const 192)
    )
   )
   (i64.load align=4
    (local.get $1)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load offset=8 align=4
    (local.get $1)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load offset=16 align=4
    (local.get $1)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load offset=24 align=4
    (local.get $1)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load offset=32 align=4
    (local.get $1)
   )
  )
  (i64.store offset=40 align=4
   (local.get $0)
   (i64.load offset=40 align=4
    (local.get $1)
   )
  )
  (i64.store offset=48 align=4
   (local.get $0)
   (i64.load offset=48 align=4
    (local.get $1)
   )
  )
  (i64.store offset=56 align=4
   (local.get $0)
   (i64.load offset=56 align=4
    (local.get $1)
   )
  )
  (call $_MatrixMultiply
   (local.get $3)
   (local.get $4)
   (local.get $0)
  )
  (i64.store align=4
   (local.get $2)
   (i64.load align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load offset=8 align=4
    (local.get $3)
   )
  )
  (i64.store offset=16 align=4
   (local.get $2)
   (i64.load offset=16 align=4
    (local.get $3)
   )
  )
  (i64.store offset=24 align=4
   (local.get $2)
   (i64.load offset=24 align=4
    (local.get $3)
   )
  )
  (i64.store offset=32 align=4
   (local.get $2)
   (i64.load offset=32 align=4
    (local.get $3)
   )
  )
  (i64.store offset=40 align=4
   (local.get $2)
   (i64.load offset=40 align=4
    (local.get $3)
   )
  )
  (i64.store offset=48 align=4
   (local.get $2)
   (i64.load offset=48 align=4
    (local.get $3)
   )
  )
  (i64.store offset=56 align=4
   (local.get $2)
   (i64.load offset=56 align=4
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_rlOrtho (; 372 ;) (; has Stack IR ;) (param $0 f64) (param $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 256)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 256)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 192)
   )
  )
  (local.set $5
   (i32.add
    (local.get $3)
    (i32.const 128)
   )
  )
  (call $_MatrixOrtho
   (local.tee $6
    (i32.sub
     (local.get $3)
     (i32.const -64)
    )
   )
   (local.get $0)
   (local.get $1)
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.tee $2
     (i32.load
      (i32.const 27800)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $5)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i64.store offset=16 align=4
   (local.get $5)
   (i64.load offset=16 align=4
    (local.get $2)
   )
  )
  (i64.store offset=24 align=4
   (local.get $5)
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i64.store offset=32 align=4
   (local.get $5)
   (i64.load offset=32 align=4
    (local.get $2)
   )
  )
  (i64.store offset=40 align=4
   (local.get $5)
   (i64.load offset=40 align=4
    (local.get $2)
   )
  )
  (i64.store offset=48 align=4
   (local.get $5)
   (i64.load offset=48 align=4
    (local.get $2)
   )
  )
  (i64.store offset=56 align=4
   (local.get $5)
   (i64.load offset=56 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (local.get $4)
   (i64.load align=4
    (local.get $6)
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $6)
   )
  )
  (i64.store offset=16 align=4
   (local.get $4)
   (i64.load offset=16 align=4
    (local.get $6)
   )
  )
  (i64.store offset=24 align=4
   (local.get $4)
   (i64.load offset=24 align=4
    (local.get $6)
   )
  )
  (i64.store offset=32 align=4
   (local.get $4)
   (i64.load offset=32 align=4
    (local.get $6)
   )
  )
  (i64.store offset=40 align=4
   (local.get $4)
   (i64.load offset=40 align=4
    (local.get $6)
   )
  )
  (i64.store offset=48 align=4
   (local.get $4)
   (i64.load offset=48 align=4
    (local.get $6)
   )
  )
  (i64.store offset=56 align=4
   (local.get $4)
   (i64.load offset=56 align=4
    (local.get $6)
   )
  )
  (call $_MatrixMultiply
   (local.get $3)
   (local.get $5)
   (local.get $4)
  )
  (i64.store align=4
   (local.get $2)
   (i64.load align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load offset=8 align=4
    (local.get $3)
   )
  )
  (i64.store offset=16 align=4
   (local.get $2)
   (i64.load offset=16 align=4
    (local.get $3)
   )
  )
  (i64.store offset=24 align=4
   (local.get $2)
   (i64.load offset=24 align=4
    (local.get $3)
   )
  )
  (i64.store offset=32 align=4
   (local.get $2)
   (i64.load offset=32 align=4
    (local.get $3)
   )
  )
  (i64.store offset=40 align=4
   (local.get $2)
   (i64.load offset=40 align=4
    (local.get $3)
   )
  )
  (i64.store offset=48 align=4
   (local.get $2)
   (i64.load offset=48 align=4
    (local.get $3)
   )
  )
  (i64.store offset=56 align=4
   (local.get $2)
   (i64.load offset=56 align=4
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_rlViewport (; 373 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (call $_glViewport
   (local.get $0)
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
 )
 (func $_rlBegin (; 374 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.eq
    (local.tee $4
     (i32.load
      (i32.add
       (local.tee $1
        (i32.load
         (i32.const 27872)
        )
       )
       (i32.shl
        (local.tee $2
         (i32.add
          (local.tee $3
           (i32.load
            (i32.const 27876)
           )
          )
          (i32.const -1)
         )
        )
        (i32.const 4)
       )
      )
     )
    )
    (i32.const 7)
   )
   (return)
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.le_s
      (local.tee $0
       (i32.load offset=4
        (i32.add
         (i32.shl
          (local.get $2)
          (i32.const 4)
         )
         (local.get $1)
        )
       )
      )
      (i32.const 0)
     )
    )
    (i32.store offset=8
     (i32.add
      (i32.shl
       (local.get $2)
       (i32.const 4)
      )
      (local.get $1)
     )
     (local.tee $0
      (block $switch (result i32)
       (block $switch-default
        (block $switch-case0
         (block $switch-case
          (br_table $switch-case $switch-default $switch-default $switch-case0 $switch-default
           (i32.sub
            (local.get $4)
            (i32.const 1)
           )
          )
         )
         (br $switch
          (select
           (local.get $0)
           (i32.and
            (local.get $0)
            (i32.const 3)
           )
           (i32.lt_s
            (local.get $0)
            (i32.const 4)
           )
          )
         )
        )
        (br $switch
         (select
          (i32.const 1)
          (i32.sub
           (i32.const 4)
           (i32.and
            (local.get $0)
            (i32.const 3)
           )
          )
          (i32.lt_s
           (local.get $0)
           (i32.const 4)
          )
         )
        )
       )
       (i32.const 0)
      )
     )
    )
    (if
     (call $_rlCheckBufferLimit
      (local.get $0)
     )
     (block
      (call $_rlglDraw)
      (br $__rjti$0)
     )
     (block
      (i32.store
       (i32.const 22592)
       (i32.add
        (i32.load
         (i32.const 22592)
        )
        (local.get $0)
       )
      )
      (i32.store
       (i32.const 22600)
       (i32.add
        (i32.load
         (i32.const 22600)
        )
        (local.get $0)
       )
      )
      (i32.store
       (i32.const 22596)
       (i32.add
        (i32.load offset=8
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 4)
          )
          (local.get $1)
         )
        )
        (i32.load
         (i32.const 22596)
        )
       )
      )
      (i32.store
       (i32.const 27876)
       (local.tee $0
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
      )
     )
    )
    (br $__rjto$0)
   )
   (local.set $0
    (i32.load
     (i32.const 27876)
    )
   )
  )
  (if
   (i32.gt_s
    (local.get $0)
    (i32.const 255)
   )
   (call $_rlglDraw)
  )
  (i32.store
   (i32.add
    (local.tee $0
     (i32.load
      (i32.const 27872)
     )
    )
    (i32.shl
     (local.tee $1
      (i32.add
       (i32.load
        (i32.const 27876)
       )
       (i32.const -1)
      )
     )
     (i32.const 4)
    )
   )
   (i32.const 7)
  )
  (i32.store offset=4
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 4)
    )
    (local.get $0)
   )
   (i32.const 0)
  )
  (i32.store offset=12
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 4)
    )
    (local.get $0)
   )
   (i32.load
    (i32.const 27880)
   )
  )
 )
 (func $_rlCheckBufferLimit (; 375 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.gt_s
   (i32.add
    (local.get $0)
    (i32.load
     (i32.const 22592)
    )
   )
   (i32.const 8191)
  )
 )
 (func $_rlglDraw (; 376 ;) (; has Stack IR ;)
  (if
   (i32.le_s
    (i32.load
     (i32.const 22592)
    )
    (i32.const 0)
   )
   (return)
  )
  (call $_UpdateBuffersDefault)
  (call $_DrawBuffersDefault)
 )
 (func $_UpdateBuffersDefault (; 377 ;) (; has Stack IR ;)
  (local $0 i32)
  (if
   (i32.le_s
    (i32.load
     (i32.const 22592)
    )
    (i32.const 0)
   )
   (return)
  )
  (if
   (i32.load8_s
    (i32.const 28826)
   )
   (block
    (local.set $0
     (i32.load
      (i32.const 27884)
     )
    )
    (call_indirect (type $FUNCSIG$vi)
     (i32.load
      (i32.const 22620)
     )
     (i32.add
      (i32.and
       (local.get $0)
       (i32.const 31)
      )
      (i32.const 107)
     )
    )
   )
  )
  (call $_glBindBuffer
   (i32.const 34962)
   (i32.load
    (i32.const 22624)
   )
  )
  (call $_glBufferSubData
   (i32.const 34962)
   (i32.const 0)
   (i32.mul
    (i32.load
     (i32.const 22592)
    )
    (i32.const 12)
   )
   (i32.load
    (i32.const 22604)
   )
  )
  (call $_glBindBuffer
   (i32.const 34962)
   (i32.load
    (i32.const 22628)
   )
  )
  (call $_glBufferSubData
   (i32.const 34962)
   (i32.const 0)
   (i32.shl
    (i32.load
     (i32.const 22592)
    )
    (i32.const 3)
   )
   (i32.load
    (i32.const 22608)
   )
  )
  (call $_glBindBuffer
   (i32.const 34962)
   (i32.load
    (i32.const 22632)
   )
  )
  (call $_glBufferSubData
   (i32.const 34962)
   (i32.const 0)
   (i32.shl
    (i32.load
     (i32.const 22592)
    )
    (i32.const 2)
   )
   (i32.load
    (i32.const 22612)
   )
  )
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 28826)
    )
   )
   (return)
  )
  (local.set $0
   (i32.load
    (i32.const 27884)
   )
  )
  (call_indirect (type $FUNCSIG$vi)
   (i32.const 0)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 31)
    )
    (i32.const 107)
   )
  )
 )
 (func $_DrawBuffersDefault (; 378 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 384)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 384)
   )
  )
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 320)
   )
  )
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.const 256)
   )
  )
  (local.set $5
   (local.get $0)
  )
  (local.set $9
   (i32.add
    (local.get $0)
    (i32.const 192)
   )
  )
  (i64.store offset=128 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 27736)
   )
  )
  (i64.store offset=136 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 27744)
   )
  )
  (i64.store offset=144 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 27752)
   )
  )
  (i64.store offset=152 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 27760)
   )
  )
  (i64.store offset=160 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 27768)
   )
  )
  (i64.store offset=168 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 27776)
   )
  )
  (i64.store offset=176 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 27784)
   )
  )
  (i64.store offset=184 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 27792)
   )
  )
  (i64.store align=4
   (local.tee $2
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
   (i64.load align=4
    (i32.const 27672)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load align=4
    (i32.const 27680)
   )
  )
  (i64.store offset=16 align=4
   (local.get $2)
   (i64.load align=4
    (i32.const 27688)
   )
  )
  (i64.store offset=24 align=4
   (local.get $2)
   (i64.load align=4
    (i32.const 27696)
   )
  )
  (i64.store offset=32 align=4
   (local.get $2)
   (i64.load align=4
    (i32.const 27704)
   )
  )
  (i64.store offset=40 align=4
   (local.get $2)
   (i64.load align=4
    (i32.const 27712)
   )
  )
  (i64.store offset=48 align=4
   (local.get $2)
   (i64.load align=4
    (i32.const 27720)
   )
  )
  (i64.store offset=56 align=4
   (local.get $2)
   (i64.load align=4
    (i32.const 27728)
   )
  )
  (local.set $12
   (i32.const 1)
  )
  (loop $while-in
   (if
    (local.get $11)
    (block
     (i64.store align=4
      (local.get $4)
      (i64.load offset=128 align=4
       (local.get $0)
      )
     )
     (i64.store offset=8 align=4
      (local.get $4)
      (i64.load offset=136 align=4
       (local.get $0)
      )
     )
     (i64.store offset=16 align=4
      (local.get $4)
      (i64.load offset=144 align=4
       (local.get $0)
      )
     )
     (i64.store offset=24 align=4
      (local.get $4)
      (i64.load offset=152 align=4
       (local.get $0)
      )
     )
     (i64.store offset=32 align=4
      (local.get $4)
      (i64.load offset=160 align=4
       (local.get $0)
      )
     )
     (i64.store offset=40 align=4
      (local.get $4)
      (i64.load offset=168 align=4
       (local.get $0)
      )
     )
     (i64.store offset=48 align=4
      (local.get $4)
      (i64.load offset=176 align=4
       (local.get $0)
      )
     )
     (i64.store offset=56 align=4
      (local.get $4)
      (i64.load offset=184 align=4
       (local.get $0)
      )
     )
     (i64.store align=4
      (local.get $1)
      (i64.load align=4
       (local.get $2)
      )
     )
     (i64.store offset=8 align=4
      (local.get $1)
      (i64.load offset=8 align=4
       (local.get $2)
      )
     )
     (i64.store offset=16 align=4
      (local.get $1)
      (i64.load offset=16 align=4
       (local.get $2)
      )
     )
     (i64.store offset=24 align=4
      (local.get $1)
      (i64.load offset=24 align=4
       (local.get $2)
      )
     )
     (i64.store offset=32 align=4
      (local.get $1)
      (i64.load offset=32 align=4
       (local.get $2)
      )
     )
     (i64.store offset=40 align=4
      (local.get $1)
      (i64.load offset=40 align=4
       (local.get $2)
      )
     )
     (i64.store offset=48 align=4
      (local.get $1)
      (i64.load offset=48 align=4
       (local.get $2)
      )
     )
     (i64.store offset=56 align=4
      (local.get $1)
      (i64.load offset=56 align=4
       (local.get $2)
      )
     )
     (call $_SetStereoView
      (local.get $8)
      (local.get $4)
      (local.get $1)
     )
    )
   )
   (if
    (i32.gt_s
     (i32.load
      (i32.const 22592)
     )
     (i32.const 0)
    )
    (block
     (call $_glUseProgram
      (i32.load
       (i32.const 27264)
      )
     )
     (i64.store align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 27672)
      )
     )
     (i64.store offset=8 align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 27680)
      )
     )
     (i64.store offset=16 align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 27688)
      )
     )
     (i64.store offset=24 align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 27696)
      )
     )
     (i64.store offset=32 align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 27704)
      )
     )
     (i64.store offset=40 align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 27712)
      )
     )
     (i64.store offset=48 align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 27720)
      )
     )
     (i64.store offset=56 align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 27728)
      )
     )
     (i64.store align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 27736)
      )
     )
     (i64.store offset=8 align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 27744)
      )
     )
     (i64.store offset=16 align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 27752)
      )
     )
     (i64.store offset=24 align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 27760)
      )
     )
     (i64.store offset=32 align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 27768)
      )
     )
     (i64.store offset=40 align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 27776)
      )
     )
     (i64.store offset=48 align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 27784)
      )
     )
     (i64.store offset=56 align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 27792)
      )
     )
     (call $_MatrixMultiply
      (local.get $5)
      (local.get $4)
      (local.get $1)
     )
     (local.set $3
      (i32.load offset=24
       (i32.load
        (i32.const 27268)
       )
      )
     )
     (i64.store align=4
      (local.get $1)
      (i64.load align=4
       (local.get $5)
      )
     )
     (i64.store offset=8 align=4
      (local.get $1)
      (i64.load offset=8 align=4
       (local.get $5)
      )
     )
     (i64.store offset=16 align=4
      (local.get $1)
      (i64.load offset=16 align=4
       (local.get $5)
      )
     )
     (i64.store offset=24 align=4
      (local.get $1)
      (i64.load offset=24 align=4
       (local.get $5)
      )
     )
     (i64.store offset=32 align=4
      (local.get $1)
      (i64.load offset=32 align=4
       (local.get $5)
      )
     )
     (i64.store offset=40 align=4
      (local.get $1)
      (i64.load offset=40 align=4
       (local.get $5)
      )
     )
     (i64.store offset=48 align=4
      (local.get $1)
      (i64.load offset=48 align=4
       (local.get $5)
      )
     )
     (i64.store offset=56 align=4
      (local.get $1)
      (i64.load offset=56 align=4
       (local.get $5)
      )
     )
     (call $_MatrixToFloatV
      (local.get $9)
      (local.get $1)
     )
     (call $_glUniformMatrix4fv
      (local.get $3)
      (i32.const 1)
      (i32.const 0)
      (local.get $9)
     )
     (call $_glUniform4f
      (i32.load offset=44
       (i32.load
        (i32.const 27268)
       )
      )
      (f64.const 1)
      (f64.const 1)
      (f64.const 1)
      (f64.const 1)
     )
     (call $_glUniform1i
      (i32.load offset=56
       (i32.load
        (i32.const 27268)
       )
      )
      (i32.const 0)
     )
     (if
      (i32.load8_s
       (i32.const 28826)
      )
      (block
       (local.set $3
        (i32.load
         (i32.const 27884)
        )
       )
       (call_indirect (type $FUNCSIG$vi)
        (i32.load
         (i32.const 22620)
        )
        (i32.add
         (i32.and
          (local.get $3)
          (i32.const 31)
         )
         (i32.const 107)
        )
       )
      )
      (block
       (call $_glBindBuffer
        (i32.const 34962)
        (i32.load
         (i32.const 22624)
        )
       )
       (call $_glVertexAttribPointer
        (i32.load
         (i32.load
          (i32.const 27268)
         )
        )
        (i32.const 3)
        (i32.const 5126)
        (i32.const 0)
        (i32.const 0)
        (i32.const 0)
       )
       (call $_glEnableVertexAttribArray
        (i32.load
         (i32.load
          (i32.const 27268)
         )
        )
       )
       (call $_glBindBuffer
        (i32.const 34962)
        (i32.load
         (i32.const 22628)
        )
       )
       (call $_glVertexAttribPointer
        (i32.load offset=4
         (i32.load
          (i32.const 27268)
         )
        )
        (i32.const 2)
        (i32.const 5126)
        (i32.const 0)
        (i32.const 0)
        (i32.const 0)
       )
       (call $_glEnableVertexAttribArray
        (i32.load offset=4
         (i32.load
          (i32.const 27268)
         )
        )
       )
       (call $_glBindBuffer
        (i32.const 34962)
        (i32.load
         (i32.const 22632)
        )
       )
       (call $_glVertexAttribPointer
        (i32.load offset=20
         (i32.load
          (i32.const 27268)
         )
        )
        (i32.const 4)
        (i32.const 5121)
        (i32.const 1)
        (i32.const 0)
        (i32.const 0)
       )
       (call $_glEnableVertexAttribArray
        (i32.load offset=20
         (i32.load
          (i32.const 27268)
         )
        )
       )
       (call $_glBindBuffer
        (i32.const 34963)
        (i32.load
         (i32.const 22636)
        )
       )
      )
     )
     (call $_glActiveTexture
      (i32.const 33984)
     )
     (if
      (i32.gt_s
       (i32.load
        (i32.const 27876)
       )
       (i32.const 0)
      )
      (block
       (local.set $3
        (i32.const 0)
       )
       (local.set $6
        (i32.const 0)
       )
       (loop $while-in1
        (call $_glBindTexture
         (i32.const 3553)
         (i32.load offset=12
          (i32.add
           (i32.load
            (i32.const 27872)
           )
           (i32.shl
            (local.get $3)
            (i32.const 4)
           )
          )
         )
        )
        (block $switch
         (block $switch-default
          (block $switch-case2
           (br_table $switch-case2 $switch-default $switch-default $switch-case2 $switch-default
            (i32.sub
             (local.tee $13
              (i32.load
               (i32.add
                (local.tee $7
                 (i32.load
                  (i32.const 27872)
                 )
                )
                (i32.shl
                 (local.get $3)
                 (i32.const 4)
                )
               )
              )
             )
             (i32.const 1)
            )
           )
          )
          (call $_glDrawArrays
           (local.get $13)
           (local.get $6)
           (i32.load offset=4
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 4)
             )
             (local.get $7)
            )
           )
          )
          (br $switch)
         )
         (call $_glDrawElements
          (i32.const 4)
          (i32.mul
           (i32.div_s
            (i32.load offset=4
             (i32.add
              (i32.shl
               (local.get $3)
               (i32.const 4)
              )
              (local.get $7)
             )
            )
            (i32.const 4)
           )
           (i32.const 6)
          )
          (i32.const 5123)
          (i32.mul
           (i32.and
            (i32.shr_u
             (local.get $6)
             (i32.const 1)
            )
            (i32.const 1073741823)
           )
           (i32.const 6)
          )
         )
        )
        (local.set $6
         (i32.add
          (i32.load offset=8
           (i32.add
            (local.tee $7
             (i32.load
              (i32.const 27872)
             )
            )
            (i32.shl
             (local.get $3)
             (i32.const 4)
            )
           )
          )
          (i32.add
           (i32.load offset=4
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 4)
             )
             (local.get $7)
            )
           )
           (local.get $6)
          )
         )
        )
        (br_if $while-in1
         (i32.lt_s
          (local.tee $3
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (i32.load
           (i32.const 27876)
          )
         )
        )
       )
      )
     )
     (if
      (i32.eqz
       (i32.load8_s
        (i32.const 28826)
       )
      )
      (block
       (call $_glBindBuffer
        (i32.const 34962)
        (i32.const 0)
       )
       (call $_glBindBuffer
        (i32.const 34963)
        (i32.const 0)
       )
      )
     )
     (call $_glBindTexture
      (i32.const 3553)
      (i32.const 0)
     )
    )
   )
   (if
    (i32.load8_s
     (i32.const 28826)
    )
    (block
     (local.set $3
      (i32.load
       (i32.const 27884)
      )
     )
     (call_indirect (type $FUNCSIG$vi)
      (i32.const 0)
      (i32.add
       (i32.and
        (local.get $3)
        (i32.const 31)
       )
       (i32.const 107)
      )
     )
    )
   )
   (call $_glUseProgram
    (i32.const 0)
   )
   (br_if $while-in
    (i32.lt_u
     (local.tee $8
      (i32.add
       (local.get $8)
       (i32.const 1)
      )
     )
     (local.get $12)
    )
   )
  )
  (i32.store
   (i32.const 22592)
   (i32.const 0)
  )
  (i32.store
   (i32.const 22596)
   (i32.const 0)
  )
  (i32.store
   (i32.const 22600)
   (i32.const 0)
  )
  (f32.store
   (i32.const 8948)
   (f32.const -1)
  )
  (i64.store align=4
   (i32.const 27736)
   (i64.load offset=128 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27744)
   (i64.load offset=136 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27752)
   (i64.load offset=144 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27760)
   (i64.load offset=152 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27768)
   (i64.load offset=160 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27776)
   (i64.load offset=168 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27784)
   (i64.load offset=176 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27792)
   (i64.load offset=184 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27672)
   (i64.load align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 27680)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 27688)
   (i64.load offset=16 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 27696)
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 27704)
   (i64.load offset=32 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 27712)
   (i64.load offset=40 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 27720)
   (i64.load offset=48 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 27728)
   (i64.load offset=56 align=4
    (local.get $2)
   )
  )
  (local.set $6
   (i32.load
    (i32.const 27872)
   )
  )
  (local.set $3
   (i32.const 0)
  )
  (loop $while-in4
   (i32.store
    (i32.add
     (i32.shl
      (local.get $3)
      (i32.const 4)
     )
     (local.get $6)
    )
    (i32.const 7)
   )
   (i32.store offset=4
    (i32.add
     (i32.shl
      (local.get $3)
      (i32.const 4)
     )
     (local.get $6)
    )
    (i32.const 0)
   )
   (i32.store offset=12
    (i32.add
     (i32.shl
      (local.get $3)
      (i32.const 4)
     )
     (local.get $6)
    )
    (i32.load
     (i32.const 27880)
    )
   )
   (br_if $while-in4
    (i32.ne
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (i32.const 256)
    )
   )
  )
  (i32.store
   (i32.const 27876)
   (i32.const 1)
  )
  (global.set $STACKTOP
   (local.get $10)
  )
 )
 (func $_SetStereoView (; 379 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 256)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 256)
   )
  )
  (local.set $3
   (i32.add
    (local.get $5)
    (i32.const 192)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 128)
   )
  )
  (i64.store align=4
   (local.tee $4
    (i32.sub
     (local.get $5)
     (i32.const -64)
    )
   )
   (i64.load align=4
    (local.get $1)
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $1)
   )
  )
  (i64.store offset=16 align=4
   (local.get $4)
   (i64.load offset=16 align=4
    (local.get $1)
   )
  )
  (i64.store offset=24 align=4
   (local.get $4)
   (i64.load offset=24 align=4
    (local.get $1)
   )
  )
  (i64.store offset=32 align=4
   (local.get $4)
   (i64.load offset=32 align=4
    (local.get $1)
   )
  )
  (i64.store offset=40 align=4
   (local.get $4)
   (i64.load offset=40 align=4
    (local.get $1)
   )
  )
  (i64.store offset=48 align=4
   (local.get $4)
   (i64.load offset=48 align=4
    (local.get $1)
   )
  )
  (i64.store offset=56 align=4
   (local.get $4)
   (i64.load offset=56 align=4
    (local.get $1)
   )
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $2)
   )
  )
  (i64.store offset=8 align=4
   (local.get $5)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i64.store offset=16 align=4
   (local.get $5)
   (i64.load offset=16 align=4
    (local.get $2)
   )
  )
  (i64.store offset=24 align=4
   (local.get $5)
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i64.store offset=32 align=4
   (local.get $5)
   (i64.load offset=32 align=4
    (local.get $2)
   )
  )
  (i64.store offset=40 align=4
   (local.get $5)
   (i64.load offset=40 align=4
    (local.get $2)
   )
  )
  (i64.store offset=48 align=4
   (local.get $5)
   (i64.load offset=48 align=4
    (local.get $2)
   )
  )
  (i64.store offset=56 align=4
   (local.get $5)
   (i64.load offset=56 align=4
    (local.get $2)
   )
  )
  (call $_rlViewport
   (i32.div_s
    (i32.mul
     (local.get $0)
     (local.tee $1
      (i32.load
       (i32.const 27888)
      )
     )
    )
    (i32.const 2)
   )
   (i32.const 0)
   (i32.div_s
    (local.get $1)
    (i32.const 2)
   )
   (i32.load
    (i32.const 27892)
   )
  )
  (i64.store align=4
   (local.get $6)
   (i64.load align=4
    (local.get $2)
   )
  )
  (i64.store offset=8 align=4
   (local.get $6)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i64.store offset=16 align=4
   (local.get $6)
   (i64.load offset=16 align=4
    (local.get $2)
   )
  )
  (i64.store offset=24 align=4
   (local.get $6)
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i64.store offset=32 align=4
   (local.get $6)
   (i64.load offset=32 align=4
    (local.get $2)
   )
  )
  (i64.store offset=40 align=4
   (local.get $6)
   (i64.load offset=40 align=4
    (local.get $2)
   )
  )
  (i64.store offset=48 align=4
   (local.get $6)
   (i64.load offset=48 align=4
    (local.get $2)
   )
  )
  (i64.store offset=56 align=4
   (local.get $6)
   (i64.load offset=56 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.tee $1
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 6)
      )
      (i32.const 27408)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $1)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $1)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $1)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $1)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $1)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $1)
   )
  )
  (i64.store offset=56 align=4
   (local.get $3)
   (i64.load offset=56 align=4
    (local.get $1)
   )
  )
  (call $_MatrixMultiply
   (local.get $5)
   (local.get $6)
   (local.get $3)
  )
  (i64.store align=4
   (local.get $4)
   (i64.load align=4
    (local.tee $0
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 6)
      )
      (i32.const 27280)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store offset=16 align=4
   (local.get $4)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store offset=24 align=4
   (local.get $4)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store offset=32 align=4
   (local.get $4)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store offset=40 align=4
   (local.get $4)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store offset=48 align=4
   (local.get $4)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (i64.store offset=56 align=4
   (local.get $4)
   (i64.load offset=56 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.get $5)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $5)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $5)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $5)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $5)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $5)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $5)
   )
  )
  (i64.store offset=56 align=4
   (local.get $3)
   (i64.load offset=56 align=4
    (local.get $5)
   )
  )
  (call $_SetMatrixModelview
   (local.get $3)
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.get $4)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $4)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $4)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $4)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $4)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $4)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $4)
   )
  )
  (i64.store offset=56 align=4
   (local.get $3)
   (i64.load offset=56 align=4
    (local.get $4)
   )
  )
  (call $_SetMatrixProjection
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_SetMatrixModelview (; 380 ;) (; has Stack IR ;) (param $0 i32)
  (i64.store align=4
   (i32.const 27672)
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27680)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27688)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27696)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27704)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27712)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27720)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27728)
   (i64.load offset=56 align=4
    (local.get $0)
   )
  )
 )
 (func $_SetMatrixProjection (; 381 ;) (; has Stack IR ;) (param $0 i32)
  (i64.store align=4
   (i32.const 27736)
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27744)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27752)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27760)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27768)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27776)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27784)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 27792)
   (i64.load offset=56 align=4
    (local.get $0)
   )
  )
 )
 (func $_rlEnd (; 382 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.ne
    (local.tee $0
     (i32.load
      (i32.const 22592)
     )
    )
    (local.tee $1
     (i32.load
      (i32.const 22600)
     )
    )
   )
   (if
    (i32.gt_s
     (local.tee $1
      (i32.sub
       (local.get $0)
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (block
     (local.set $0
      (i32.const 0)
     )
     (loop $while-in
      (i32.store8
       (i32.add
        (local.tee $2
         (i32.load
          (i32.const 22612)
         )
        )
        (local.tee $3
         (i32.shl
          (i32.load
           (i32.const 22600)
          )
          (i32.const 2)
         )
        )
       )
       (i32.load8_s
        (i32.add
         (local.get $2)
         (i32.add
          (local.get $3)
          (i32.const -4)
         )
        )
       )
      )
      (i32.store8
       (i32.add
        (local.tee $2
         (i32.load
          (i32.const 22612)
         )
        )
        (i32.or
         (local.tee $3
          (i32.shl
           (i32.load
            (i32.const 22600)
           )
           (i32.const 2)
          )
         )
         (i32.const 1)
        )
       )
       (i32.load8_s
        (i32.add
         (local.get $2)
         (i32.add
          (local.get $3)
          (i32.const -3)
         )
        )
       )
      )
      (i32.store8
       (i32.add
        (local.tee $2
         (i32.load
          (i32.const 22612)
         )
        )
        (i32.or
         (local.tee $3
          (i32.shl
           (i32.load
            (i32.const 22600)
           )
           (i32.const 2)
          )
         )
         (i32.const 2)
        )
       )
       (i32.load8_s
        (i32.add
         (local.get $2)
         (i32.add
          (local.get $3)
          (i32.const -2)
         )
        )
       )
      )
      (i32.store8
       (i32.add
        (local.tee $2
         (i32.load
          (i32.const 22612)
         )
        )
        (i32.or
         (local.tee $3
          (i32.shl
           (i32.load
            (i32.const 22600)
           )
           (i32.const 2)
          )
         )
         (i32.const 3)
        )
       )
       (i32.load8_s
        (i32.add
         (local.get $2)
         (i32.add
          (local.get $3)
          (i32.const -1)
         )
        )
       )
      )
      (i32.store
       (i32.const 22600)
       (i32.add
        (i32.load
         (i32.const 22600)
        )
        (i32.const 1)
       )
      )
      (br_if $while-in
       (i32.ne
        (local.get $1)
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
       )
      )
     )
    )
   )
  )
  (if
   (i32.ne
    (local.tee $0
     (i32.load
      (i32.const 22592)
     )
    )
    (local.tee $1
     (i32.load
      (i32.const 22596)
     )
    )
   )
   (block
    (if
     (i32.gt_s
      (local.tee $1
       (i32.sub
        (local.get $0)
        (local.get $1)
       )
      )
      (i32.const 0)
     )
     (block
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in1
       (f32.store
        (i32.add
         (i32.load
          (i32.const 22608)
         )
         (i32.shl
          (i32.load
           (i32.const 22596)
          )
          (i32.const 3)
         )
        )
        (f32.const 0)
       )
       (f32.store
        (i32.add
         (i32.load
          (i32.const 22608)
         )
         (i32.shl
          (i32.or
           (i32.shl
            (i32.load
             (i32.const 22596)
            )
            (i32.const 1)
           )
           (i32.const 1)
          )
          (i32.const 2)
         )
        )
        (f32.const 0)
       )
       (i32.store
        (i32.const 22596)
        (i32.add
         (i32.load
          (i32.const 22596)
         )
         (i32.const 1)
        )
       )
       (br_if $while-in1
        (i32.ne
         (local.get $1)
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
    (local.set $0
     (i32.load
      (i32.const 22592)
     )
    )
   )
  )
  (f32.store
   (i32.const 8948)
   (f32.add
    (f32.load
     (i32.const 8948)
    )
    (f32.const 4.999999873689376e-05)
   )
  )
  (if
   (i32.le_s
    (local.get $0)
    (i32.const 8187)
   )
   (return)
  )
  (if
   (i32.gt_s
    (local.tee $0
     (i32.load
      (i32.const 27804)
     )
    )
    (i32.const -1)
   )
   (loop $while-in3
    (call $_rlPopMatrix)
    (local.set $1
     (i32.add
      (local.get $0)
      (i32.const -1)
     )
    )
    (if
     (i32.gt_s
      (local.get $0)
      (i32.const 0)
     )
     (block
      (local.set $0
       (local.get $1)
      )
      (br $while-in3)
     )
    )
   )
  )
  (call $_rlglDraw)
 )
 (func $_rlVertex3f (; 383 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (param $2 f32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 112)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 112)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 40)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 28)
   )
  )
  (local.set $5
   (i32.add
    (local.get $3)
    (i32.const 4)
   )
  )
  (f32.store offset=16
   (local.get $3)
   (local.get $0)
  )
  (f32.store offset=20
   (local.get $3)
   (local.get $1)
  )
  (f32.store offset=24
   (local.get $3)
   (local.get $2)
  )
  (if
   (i32.load8_s
    (i32.const 28825)
   )
   (block
    (i64.store align=4
     (local.get $6)
     (i64.load offset=16 align=4
      (local.get $3)
     )
    )
    (i32.store offset=8
     (local.get $6)
     (i32.load offset=24
      (local.get $3)
     )
    )
    (i64.store align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 27808)
     )
    )
    (i64.store offset=8 align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 27816)
     )
    )
    (i64.store offset=16 align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 27824)
     )
    )
    (i64.store offset=24 align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 27832)
     )
    )
    (i64.store offset=32 align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 27840)
     )
    )
    (i64.store offset=40 align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 27848)
     )
    )
    (i64.store offset=48 align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 27856)
     )
    )
    (i64.store offset=56 align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 27864)
     )
    )
    (call $_Vector3Transform
     (local.get $5)
     (local.get $6)
     (local.get $4)
    )
    (i64.store offset=16 align=4
     (local.get $3)
     (i64.load align=4
      (local.get $5)
     )
    )
    (i32.store offset=24
     (local.get $3)
     (i32.load offset=8
      (local.get $5)
     )
    )
   )
  )
  (local.set $5
   (local.get $3)
  )
  (if
   (i32.lt_s
    (local.tee $6
     (i32.load
      (i32.const 22592)
     )
    )
    (i32.const 8192)
   )
   (block
    (i32.store
     (i32.add
      (i32.load
       (i32.const 22604)
      )
      (i32.shl
       (i32.mul
        (local.get $6)
        (i32.const 3)
       )
       (i32.const 2)
      )
     )
     (i32.load offset=16
      (local.get $3)
     )
    )
    (i32.store
     (i32.add
      (i32.load
       (i32.const 22604)
      )
      (i32.shl
       (i32.add
        (i32.mul
         (i32.load
          (i32.const 22592)
         )
         (i32.const 3)
        )
        (i32.const 1)
       )
       (i32.const 2)
      )
     )
     (i32.load offset=20
      (local.get $3)
     )
    )
    (i32.store
     (i32.add
      (i32.load
       (i32.const 22604)
      )
      (i32.shl
       (i32.add
        (i32.mul
         (i32.load
          (i32.const 22592)
         )
         (i32.const 3)
        )
        (i32.const 2)
       )
       (i32.const 2)
      )
     )
     (i32.load offset=24
      (local.get $3)
     )
    )
    (i32.store
     (i32.const 22592)
     (i32.add
      (i32.load
       (i32.const 22592)
      )
      (i32.const 1)
     )
    )
    (i32.store offset=4
     (local.tee $5
      (i32.add
       (i32.load
        (i32.const 27872)
       )
       (i32.shl
        (i32.add
         (i32.load
          (i32.const 27876)
         )
         (i32.const -1)
        )
        (i32.const 4)
       )
      )
     )
     (i32.add
      (i32.load offset=4
       (local.get $5)
      )
      (i32.const 1)
     )
    )
   )
   (call $_TraceLog
    (i32.const 5)
    (i32.const 9598)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_rlVertex2f (; 384 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32)
  (call $_rlVertex3f
   (local.get $0)
   (local.get $1)
   (f32.load
    (i32.const 8948)
   )
  )
 )
 (func $_rlTexCoord2f (; 385 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32)
  (f32.store
   (i32.add
    (i32.load
     (i32.const 22608)
    )
    (i32.shl
     (i32.load
      (i32.const 22596)
     )
     (i32.const 3)
    )
   )
   (local.get $0)
  )
  (f32.store
   (i32.add
    (i32.load
     (i32.const 22608)
    )
    (i32.shl
     (i32.or
      (i32.shl
       (i32.load
        (i32.const 22596)
       )
       (i32.const 1)
      )
      (i32.const 1)
     )
     (i32.const 2)
    )
   )
   (local.get $1)
  )
  (i32.store
   (i32.const 22596)
   (i32.add
    (i32.load
     (i32.const 22596)
    )
    (i32.const 1)
   )
  )
 )
 (func $_rlColor4ub (; 386 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (i32.store8
   (i32.add
    (i32.load
     (i32.const 22612)
    )
    (i32.shl
     (i32.load
      (i32.const 22600)
     )
     (i32.const 2)
    )
   )
   (local.get $0)
  )
  (i32.store8
   (i32.add
    (i32.load
     (i32.const 22612)
    )
    (i32.or
     (i32.shl
      (i32.load
       (i32.const 22600)
      )
      (i32.const 2)
     )
     (i32.const 1)
    )
   )
   (local.get $1)
  )
  (i32.store8
   (i32.add
    (i32.load
     (i32.const 22612)
    )
    (i32.or
     (i32.shl
      (i32.load
       (i32.const 22600)
      )
      (i32.const 2)
     )
     (i32.const 2)
    )
   )
   (local.get $2)
  )
  (i32.store8
   (i32.add
    (i32.load
     (i32.const 22612)
    )
    (i32.or
     (i32.shl
      (i32.load
       (i32.const 22600)
      )
      (i32.const 2)
     )
     (i32.const 3)
    )
   )
   (local.get $3)
  )
  (i32.store
   (i32.const 22600)
   (i32.add
    (i32.load
     (i32.const 22600)
    )
    (i32.const 1)
   )
  )
 )
 (func $_rlEnableTexture (; 387 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.eq
    (local.get $0)
    (i32.load offset=12
     (i32.add
      (local.tee $3
       (i32.load
        (i32.const 27872)
       )
      )
      (i32.shl
       (local.tee $2
        (i32.add
         (local.tee $4
          (i32.load
           (i32.const 27876)
          )
         )
         (i32.const -1)
        )
       )
       (i32.const 4)
      )
     )
    )
   )
   (return)
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.le_s
      (local.tee $1
       (i32.load offset=4
        (i32.add
         (i32.shl
          (local.get $2)
          (i32.const 4)
         )
         (local.get $3)
        )
       )
      )
      (i32.const 0)
     )
    )
    (i32.store offset=8
     (i32.add
      (i32.shl
       (local.get $2)
       (i32.const 4)
      )
      (local.get $3)
     )
     (local.tee $1
      (block $switch (result i32)
       (block $switch-default
        (block $switch-case0
         (block $switch-case
          (br_table $switch-case $switch-default $switch-default $switch-case0 $switch-default
           (i32.sub
            (i32.load
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 4)
              )
              (local.get $3)
             )
            )
            (i32.const 1)
           )
          )
         )
         (br $switch
          (select
           (local.get $1)
           (i32.and
            (local.get $1)
            (i32.const 3)
           )
           (i32.lt_s
            (local.get $1)
            (i32.const 4)
           )
          )
         )
        )
        (br $switch
         (select
          (i32.const 1)
          (i32.sub
           (i32.const 4)
           (i32.and
            (local.get $1)
            (i32.const 3)
           )
          )
          (i32.lt_s
           (local.get $1)
           (i32.const 4)
          )
         )
        )
       )
       (i32.const 0)
      )
     )
    )
    (if
     (call $_rlCheckBufferLimit
      (local.get $1)
     )
     (block
      (call $_rlglDraw)
      (br $__rjti$0)
     )
     (block
      (i32.store
       (i32.const 22592)
       (i32.add
        (i32.load
         (i32.const 22592)
        )
        (local.get $1)
       )
      )
      (i32.store
       (i32.const 22600)
       (i32.add
        (i32.load
         (i32.const 22600)
        )
        (local.get $1)
       )
      )
      (i32.store
       (i32.const 22596)
       (i32.add
        (i32.load offset=8
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 4)
          )
          (local.get $3)
         )
        )
        (i32.load
         (i32.const 22596)
        )
       )
      )
      (i32.store
       (i32.const 27876)
       (local.tee $1
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
      )
     )
    )
    (br $__rjto$0)
   )
   (local.set $1
    (i32.load
     (i32.const 27876)
    )
   )
  )
  (if
   (i32.gt_s
    (local.get $1)
    (i32.const 255)
   )
   (call $_rlglDraw)
  )
  (i32.store offset=12
   (i32.add
    (local.tee $2
     (i32.load
      (i32.const 27872)
     )
    )
    (i32.shl
     (local.tee $1
      (i32.add
       (i32.load
        (i32.const 27876)
       )
       (i32.const -1)
      )
     )
     (i32.const 4)
    )
   )
   (local.get $0)
  )
  (i32.store offset=4
   (i32.add
    (i32.shl
     (local.get $1)
     (i32.const 4)
    )
    (local.get $2)
   )
   (i32.const 0)
  )
 )
 (func $_rlDisableTexture (; 388 ;) (; has Stack IR ;)
  (if
   (i32.le_s
    (i32.load
     (i32.const 22592)
    )
    (i32.const 8191)
   )
   (return)
  )
  (call $_rlglDraw)
 )
 (func $_rlDeleteTextures (; 389 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $0)
  )
  (if
   (i32.eqz
    (local.get $0)
   )
   (block
    (global.set $STACKTOP
     (local.get $1)
    )
    (return)
   )
  )
  (call $_glDeleteTextures
   (i32.const 1)
   (local.get $2)
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $_rlClearColor (; 390 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (call $_glClearColor
   (f64.promote_f32
    (f32.div
     (f32.convert_i32_s
      (i32.and
       (local.get $0)
       (i32.const 255)
      )
     )
     (f32.const 255)
    )
   )
   (f64.promote_f32
    (f32.div
     (f32.convert_i32_s
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
     )
     (f32.const 255)
    )
   )
   (f64.promote_f32
    (f32.div
     (f32.convert_i32_s
      (i32.and
       (local.get $2)
       (i32.const 255)
      )
     )
     (f32.const 255)
    )
   )
   (f64.promote_f32
    (f32.div
     (f32.convert_i32_s
      (i32.and
       (local.get $3)
       (i32.const 255)
      )
     )
     (f32.const 255)
    )
   )
  )
 )
 (func $_rlglInit (; 391 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i64)
  (local.set $17
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 432)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 432)
   )
  )
  (local.set $18
   (i32.add
    (local.get $2)
    (i32.const 168)
   )
  )
  (local.set $19
   (i32.add
    (local.get $2)
    (i32.const 160)
   )
  )
  (local.set $14
   (i32.add
    (local.get $2)
    (i32.const 152)
   )
  )
  (local.set $20
   (i32.add
    (local.get $2)
    (i32.const 144)
   )
  )
  (local.set $21
   (i32.add
    (local.get $2)
    (i32.const 136)
   )
  )
  (local.set $15
   (i32.add
    (local.get $2)
    (i32.const 128)
   )
  )
  (local.set $22
   (i32.add
    (local.get $2)
    (i32.const 120)
   )
  )
  (local.set $23
   (i32.add
    (local.get $2)
    (i32.const 112)
   )
  )
  (local.set $24
   (i32.add
    (local.get $2)
    (i32.const 104)
   )
  )
  (local.set $25
   (i32.add
    (local.get $2)
    (i32.const 96)
   )
  )
  (local.set $26
   (i32.add
    (local.get $2)
    (i32.const 88)
   )
  )
  (local.set $27
   (i32.add
    (local.get $2)
    (i32.const 80)
   )
  )
  (local.set $28
   (i32.add
    (local.get $2)
    (i32.const 72)
   )
  )
  (local.set $29
   (i32.sub
    (local.get $2)
    (i32.const -64)
   )
  )
  (local.set $30
   (i32.add
    (local.get $2)
    (i32.const 56)
   )
  )
  (local.set $10
   (i32.add
    (local.get $2)
    (i32.const 48)
   )
  )
  (local.set $3
   (i32.add
    (local.get $2)
    (i32.const 40)
   )
  )
  (local.set $11
   (i32.add
    (local.get $2)
    (i32.const 32)
   )
  )
  (local.set $4
   (i32.add
    (local.get $2)
    (i32.const 24)
   )
  )
  (local.set $9
   (i32.add
    (local.get $2)
    (i32.const 16)
   )
  )
  (local.set $12
   (local.get $2)
  )
  (local.set $5
   (i32.add
    (local.get $2)
    (i32.const 368)
   )
  )
  (local.set $6
   (i32.add
    (local.get $2)
    (i32.const 304)
   )
  )
  (local.set $7
   (i32.add
    (local.get $2)
    (i32.const 240)
   )
  )
  (local.set $8
   (i32.add
    (local.get $2)
    (i32.const 176)
   )
  )
  (i32.store
   (local.tee $2
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
   (call $_glGetString
    (i32.const 7936)
   )
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 9626)
   (local.get $2)
  )
  (i32.store
   (local.get $9)
   (call $_glGetString
    (i32.const 7937)
   )
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 9644)
   (local.get $9)
  )
  (i32.store
   (local.get $4)
   (call $_glGetString
    (i32.const 7938)
   )
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 9662)
   (local.get $4)
  )
  (i32.store
   (local.get $11)
   (call $_glGetString
    (i32.const 35724)
   )
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 9680)
   (local.get $11)
  )
  (local.set $9
   (call $_malloc
    (i32.const 2048)
   )
  )
  (call $_strcpy
   (local.tee $13
    (call $_calloc
     (local.tee $16
      (i32.add
       (call $_strlen
        (local.tee $2
         (call $_glGetString
          (i32.const 7939)
         )
        )
       )
       (i32.const 1)
      )
     )
     (i32.const 1)
    )
   )
   (local.get $2)
  )
  (i32.store
   (local.get $9)
   (local.get $13)
  )
  (if
   (i32.gt_s
    (local.get $16)
    (i32.const 0)
   )
   (block
    (local.set $3
     (i32.const 0)
    )
    (local.set $2
     (i32.const 0)
    )
    (loop $while-in
     (local.set $4
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (if
      (i32.eq
       (i32.load8_s
        (local.tee $31
         (i32.add
          (local.get $3)
          (local.get $13)
         )
        )
       )
       (i32.const 32)
      )
      (block
       (i32.store8
        (local.get $31)
        (i32.const 0)
       )
       (i32.store
        (i32.add
         (i32.shl
          (local.get $4)
          (i32.const 2)
         )
         (local.get $9)
        )
        (i32.add
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
         (local.get $13)
        )
       )
       (local.set $2
        (local.get $4)
       )
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.get $16)
      )
     )
    )
    (i32.store
     (local.get $10)
     (local.get $2)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 9698)
     (local.get $10)
    )
    (if
     (i32.gt_s
      (local.get $2)
      (i32.const 0)
     )
     (block
      (local.set $3
       (i32.const 0)
      )
      (loop $while-in1
       (if
        (i32.eqz
         (call $_strcmp
          (local.tee $4
           (i32.load
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 2)
             )
             (local.get $9)
            )
           )
          )
          (i32.const 9733)
         )
        )
        (block
         (i32.store
          (i32.const 27904)
          (call $_eglGetProcAddress
           (i32.const 19598)
          )
         )
         (i32.store
          (i32.const 27884)
          (call $_eglGetProcAddress
           (i32.const 19553)
          )
         )
         (i32.store
          (i32.const 27900)
          (local.tee $10
           (call $_eglGetProcAddress
            (i32.const 19574)
           )
          )
         )
         (if
          (i32.and
           (i32.and
            (i32.ne
             (i32.load
              (i32.const 27904)
             )
             (i32.const 0)
            )
            (i32.ne
             (i32.load
              (i32.const 27884)
             )
             (i32.const 0)
            )
           )
           (i32.ne
            (local.get $10)
            (i32.const 0)
           )
          )
          (i32.store8
           (i32.const 28826)
           (i32.const 1)
          )
         )
        )
       )
       (if
        (i32.eqz
         (call $_strcmp
          (local.get $4)
          (i32.const 9760)
         )
        )
        (i32.store8
         (i32.const 28828)
         (i32.const 1)
        )
       )
       (if
        (i32.eqz
         (call $_strcmp
          (local.get $4)
          (i32.const 9780)
         )
        )
        (i32.store8
         (i32.const 28829)
         (i32.const 1)
        )
       )
       (block $__rjto$0
        (block $__rjti$0
         (br_if $__rjti$0
          (i32.eqz
           (call $_strcmp
            (local.get $4)
            (i32.const 9852)
           )
          )
         )
         (br_if $__rjti$0
          (i32.eqz
           (call $_strcmp
            (local.get $4)
            (i32.const 9884)
           )
          )
         )
         (br_if $__rjti$0
          (i32.eqz
           (call $_strcmp
            (local.get $4)
            (i32.const 9917)
           )
          )
         )
         (br $__rjto$0)
        )
        (i32.store8
         (i32.const 28830)
         (i32.const 1)
        )
       )
       (block $__rjto$1
        (block $__rjti$1
         (br_if $__rjti$1
          (i32.eqz
           (call $_strcmp
            (local.get $4)
            (i32.const 9957)
           )
          )
         )
         (br_if $__rjti$1
          (i32.eqz
           (call $_strcmp
            (local.get $4)
            (i32.const 9993)
           )
          )
         )
         (br $__rjto$1)
        )
        (i32.store8
         (i32.const 28831)
         (i32.const 1)
        )
       )
       (if
        (i32.eqz
         (call $_strcmp
          (local.get $4)
          (i32.const 10026)
         )
        )
        (i32.store8
         (i32.const 28832)
         (i32.const 1)
        )
       )
       (if
        (i32.eqz
         (call $_strcmp
          (local.get $4)
          (i32.const 10051)
         )
        )
        (i32.store8
         (i32.const 28833)
         (i32.const 1)
        )
       )
       (if
        (i32.eqz
         (call $_strcmp
          (local.get $4)
          (i32.const 10084)
         )
        )
        (i32.store8
         (i32.const 28834)
         (i32.const 1)
        )
       )
       (if
        (i32.eqz
         (call $_strcmp
          (local.get $4)
          (i32.const 10120)
         )
        )
        (block
         (i32.store8
          (i32.const 28835)
          (i32.const 1)
         )
         (call $_glGetFloatv
          (i32.const 34047)
          (i32.const 27896)
         )
        )
       )
       (if
        (i32.eqz
         (call $_strcmp
          (local.get $4)
          (i32.const 10154)
         )
        )
        (i32.store8
         (i32.const 28827)
         (i32.const 1)
        )
       )
       (if
        (i32.eqz
         (call $_strcmp
          (local.get $4)
          (i32.const 10182)
         )
        )
        (i32.store8
         (i32.const 28836)
         (i32.const 1)
        )
       )
       (br_if $while-in1
        (i32.ne
         (local.get $2)
         (local.tee $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
   )
   (block
    (i32.store
     (local.get $3)
     (i32.const 0)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 9698)
     (local.get $3)
    )
   )
  )
  (call $_free
   (local.get $9)
  )
  (call $_free
   (local.get $13)
  )
  (if
   (i32.load8_s
    (i32.const 28826)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 10202)
    (local.get $30)
   )
   (call $_TraceLog
    (i32.const 4)
    (i32.const 10277)
    (local.get $29)
   )
  )
  (if
   (i32.load8_s
    (i32.const 28828)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 10338)
    (local.get $28)
   )
   (call $_TraceLog
    (i32.const 4)
    (i32.const 10413)
    (local.get $27)
   )
  )
  (if
   (i32.load8_s
    (i32.const 28830)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 10505)
    (local.get $26)
   )
  )
  (if
   (i32.load8_s
    (i32.const 28831)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 10551)
    (local.get $25)
   )
  )
  (if
   (i32.load8_s
    (i32.const 28832)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 10598)
    (local.get $24)
   )
  )
  (if
   (i32.load8_s
    (i32.const 28833)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 10649)
    (local.get $23)
   )
  )
  (if
   (i32.load8_s
    (i32.const 28834)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 10696)
    (local.get $22)
   )
  )
  (if
   (i32.load8_s
    (i32.const 28835)
   )
   (block
    (f64.store
     (local.get $15)
     (f64.promote_f32
      (f32.load
       (i32.const 27896)
      )
     )
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 10743)
     (local.get $15)
    )
   )
  )
  (if
   (i32.load8_s
    (i32.const 28827)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 10809)
    (local.get $21)
   )
  )
  (if
   (i32.load8_s
    (i32.const 28836)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 10862)
    (local.get $20)
   )
  )
  (i32.store
   (local.get $11)
   (i32.const -1)
  )
  (i32.store
   (i32.const 27880)
   (local.tee $2
    (call $_rlLoadTexture
     (local.get $11)
     (i32.const 1)
     (i32.const 1)
     (i32.const 7)
     (i32.const 1)
    )
   )
  )
  (if
   (local.get $2)
   (block
    (i32.store
     (local.get $14)
     (local.get $2)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 10897)
     (local.get $14)
    )
   )
   (call $_TraceLog
    (i32.const 4)
    (i32.const 10948)
    (local.get $19)
   )
  )
  (call $_LoadShaderDefault
   (local.get $12)
  )
  (i64.store
   (i32.const 27568)
   (local.tee $32
    (i64.load
     (local.get $12)
    )
   )
  )
  (i64.store
   (i32.const 27264)
   (local.get $32)
  )
  (call $_LoadBuffersDefault)
  (call $_MatrixIdentity
   (local.get $5)
  )
  (i64.store align=4
   (i32.const 27808)
   (i64.load align=4
    (local.get $5)
   )
  )
  (i64.store align=4
   (i32.const 27816)
   (i64.load offset=8 align=4
    (local.get $5)
   )
  )
  (i64.store align=4
   (i32.const 27824)
   (i64.load offset=16 align=4
    (local.get $5)
   )
  )
  (i64.store align=4
   (i32.const 27832)
   (i64.load offset=24 align=4
    (local.get $5)
   )
  )
  (i64.store align=4
   (i32.const 27840)
   (i64.load offset=32 align=4
    (local.get $5)
   )
  )
  (i64.store align=4
   (i32.const 27848)
   (i64.load offset=40 align=4
    (local.get $5)
   )
  )
  (i64.store align=4
   (i32.const 27856)
   (i64.load offset=48 align=4
    (local.get $5)
   )
  )
  (i64.store align=4
   (i32.const 27864)
   (i64.load offset=56 align=4
    (local.get $5)
   )
  )
  (i32.store
   (i32.const 27872)
   (local.tee $3
    (call $_malloc
     (i32.const 4096)
    )
   )
  )
  (local.set $12
   (i32.load
    (i32.const 27880)
   )
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in3
   (i32.store
    (i32.add
     (i32.shl
      (local.get $2)
      (i32.const 4)
     )
     (local.get $3)
    )
    (i32.const 7)
   )
   (i32.store offset=4
    (i32.add
     (i32.shl
      (local.get $2)
      (i32.const 4)
     )
     (local.get $3)
    )
    (i32.const 0)
   )
   (i32.store offset=8
    (i32.add
     (i32.shl
      (local.get $2)
      (i32.const 4)
     )
     (local.get $3)
    )
    (i32.const 0)
   )
   (i32.store offset=12
    (i32.add
     (i32.shl
      (local.get $2)
      (i32.const 4)
     )
     (local.get $3)
    )
    (local.get $12)
   )
   (br_if $while-in3
    (i32.ne
     (local.tee $2
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (i32.const 256)
    )
   )
  )
  (i32.store
   (i32.const 27876)
   (i32.const 1)
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in5
   (local.set $3
    (i32.add
     (i32.shl
      (local.get $2)
      (i32.const 6)
     )
     (i32.const 20544)
    )
   )
   (call $_MatrixIdentity
    (local.get $6)
   )
   (i64.store align=4
    (local.get $3)
    (i64.load align=4
     (local.get $6)
    )
   )
   (i64.store offset=8 align=4
    (local.get $3)
    (i64.load offset=8 align=4
     (local.get $6)
    )
   )
   (i64.store offset=16 align=4
    (local.get $3)
    (i64.load offset=16 align=4
     (local.get $6)
    )
   )
   (i64.store offset=24 align=4
    (local.get $3)
    (i64.load offset=24 align=4
     (local.get $6)
    )
   )
   (i64.store offset=32 align=4
    (local.get $3)
    (i64.load offset=32 align=4
     (local.get $6)
    )
   )
   (i64.store offset=40 align=4
    (local.get $3)
    (i64.load offset=40 align=4
     (local.get $6)
    )
   )
   (i64.store offset=48 align=4
    (local.get $3)
    (i64.load offset=48 align=4
     (local.get $6)
    )
   )
   (i64.store offset=56 align=4
    (local.get $3)
    (i64.load offset=56 align=4
     (local.get $6)
    )
   )
   (br_if $while-in5
    (i32.ne
     (local.tee $2
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (i32.const 32)
    )
   )
  )
  (call $_MatrixIdentity
   (local.get $7)
  )
  (i64.store align=4
   (i32.const 27736)
   (i64.load align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (i32.const 27744)
   (i64.load offset=8 align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (i32.const 27752)
   (i64.load offset=16 align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (i32.const 27760)
   (i64.load offset=24 align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (i32.const 27768)
   (i64.load offset=32 align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (i32.const 27776)
   (i64.load offset=40 align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (i32.const 27784)
   (i64.load offset=48 align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (i32.const 27792)
   (i64.load offset=56 align=4
    (local.get $7)
   )
  )
  (call $_MatrixIdentity
   (local.get $8)
  )
  (i64.store align=4
   (i32.const 27672)
   (i64.load align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (i32.const 27680)
   (i64.load offset=8 align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (i32.const 27688)
   (i64.load offset=16 align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (i32.const 27696)
   (i64.load offset=24 align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (i32.const 27704)
   (i64.load offset=32 align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (i32.const 27712)
   (i64.load offset=40 align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (i32.const 27720)
   (i64.load offset=48 align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (i32.const 27728)
   (i64.load offset=56 align=4
    (local.get $8)
   )
  )
  (i32.store
   (i32.const 27800)
   (i32.const 27672)
  )
  (call $_glDepthFunc
   (i32.const 515)
  )
  (call $_glDisable
   (i32.const 2929)
  )
  (call $_glBlendFunc
   (i32.const 770)
   (i32.const 771)
  )
  (call $_glEnable
   (i32.const 3042)
  )
  (call $_glCullFace
   (i32.const 1029)
  )
  (call $_glFrontFace
   (i32.const 2305)
  )
  (call $_glEnable
   (i32.const 2884)
  )
  (call $_glClearColor
   (f64.const 0)
   (f64.const 0)
   (f64.const 0)
   (f64.const 1)
  )
  (call $_glClearDepthf
   (f64.const 1)
  )
  (call $_glClear
   (i32.const 16640)
  )
  (i32.store
   (i32.const 27888)
   (local.get $0)
  )
  (i32.store
   (i32.const 27892)
   (local.get $1)
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 10987)
   (local.get $18)
  )
  (global.set $STACKTOP
   (local.get $17)
  )
 )
 (func $_rlLoadTexture (; 392 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 112)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 112)
   )
  )
  (local.set $18
   (i32.add
    (local.get $5)
    (i32.const 88)
   )
  )
  (local.set $12
   (i32.add
    (local.get $5)
    (i32.const 72)
   )
  )
  (local.set $11
   (i32.add
    (local.get $5)
    (i32.const 48)
   )
  )
  (local.set $14
   (i32.add
    (local.get $5)
    (i32.const 40)
   )
  )
  (local.set $9
   (i32.add
    (local.get $5)
    (i32.const 32)
   )
  )
  (local.set $10
   (i32.add
    (local.get $5)
    (i32.const 24)
   )
  )
  (local.set $13
   (i32.add
    (local.get $5)
    (i32.const 16)
   )
  )
  (local.set $15
   (i32.add
    (local.get $5)
    (i32.const 8)
   )
  )
  (local.set $7
   (local.get $5)
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 100)
   )
  )
  (local.set $16
   (i32.add
    (local.get $5)
    (i32.const 96)
   )
  )
  (local.set $17
   (i32.add
    (local.get $5)
    (i32.const 92)
   )
  )
  (call $_glBindTexture
   (i32.const 3553)
   (i32.const 0)
  )
  (i32.store
   (local.get $6)
   (i32.const 0)
  )
  (block $folding-inner0
   (if
    (i32.and
     (i32.eqz
      (i32.load8_s
       (i32.const 28830)
      )
     )
     (i32.lt_u
      (i32.add
       (local.get $3)
       (i32.const -11)
      )
      (i32.const 4)
     )
    )
    (block
     (call $_TraceLog
      (i32.const 4)
      (i32.const 11512)
      (local.get $7)
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.and
     (i32.eqz
      (i32.load8_s
       (i32.const 28831)
      )
     )
     (i32.eq
      (local.get $3)
      (i32.const 15)
     )
    )
    (block
     (call $_TraceLog
      (i32.const 4)
      (i32.const 11556)
      (local.get $15)
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.and
     (i32.eqz
      (i32.load8_s
       (i32.const 28832)
      )
     )
     (i32.eq
      (local.tee $5
       (i32.or
        (local.get $3)
        (i32.const 1)
       )
      )
      (i32.const 17)
     )
    )
    (block
     (call $_TraceLog
      (i32.const 4)
      (i32.const 11601)
      (local.get $13)
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.and
     (i32.eqz
      (i32.load8_s
       (i32.const 28833)
      )
     )
     (i32.eq
      (local.get $5)
      (i32.const 19)
     )
    )
    (block
     (call $_TraceLog
      (i32.const 4)
      (i32.const 11646)
      (local.get $10)
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.and
     (i32.eqz
      (i32.load8_s
       (i32.const 28834)
      )
     )
     (i32.eq
      (local.get $5)
      (i32.const 21)
     )
    )
    (block
     (call $_TraceLog
      (i32.const 4)
      (i32.const 11691)
      (local.get $9)
     )
     (br $folding-inner0)
    )
   )
   (call $_glPixelStorei
    (i32.const 3317)
    (i32.const 1)
   )
   (call $_glGenTextures
    (i32.const 1)
    (local.get $6)
   )
   (call $_glBindTexture
    (i32.const 3553)
    (i32.load
     (local.get $6)
    )
   )
   (i32.store
    (local.get $14)
    (local.get $0)
   )
   (call $_TraceLog
    (i32.const 2)
    (i32.const 11736)
    (local.get $14)
   )
   (if
    (i32.gt_s
     (local.get $4)
     (i32.const 0)
    )
    (block
     (local.set $19
      (i32.lt_s
       (local.get $3)
       (i32.const 11)
      )
     )
     (local.set $9
      (i32.const 0)
     )
     (local.set $5
      (local.get $2)
     )
     (local.set $10
      (i32.const 0)
     )
     (local.set $7
      (local.get $1)
     )
     (loop $while-in
      (local.set $13
       (call $_GetPixelDataSize
        (local.get $7)
        (local.get $5)
        (local.get $3)
       )
      )
      (call $_rlGetGlTextureFormats
       (local.get $3)
       (local.get $14)
       (local.get $16)
       (local.get $17)
      )
      (i32.store
       (local.get $11)
       (local.get $9)
      )
      (i32.store offset=4
       (local.get $11)
       (local.get $7)
      )
      (i32.store offset=8
       (local.get $11)
       (local.get $5)
      )
      (i32.store offset=12
       (local.get $11)
       (local.get $13)
      )
      (i32.store offset=16
       (local.get $11)
       (local.get $10)
      )
      (call $_TraceLog
       (i32.const 2)
       (i32.const 11780)
       (local.get $11)
      )
      (if
       (i32.ne
        (local.tee $15
         (i32.load
          (local.get $14)
         )
        )
        (i32.const -1)
       )
       (if
        (local.get $19)
        (call $_glTexImage2D
         (i32.const 3553)
         (local.get $9)
         (local.get $15)
         (local.get $7)
         (local.get $5)
         (i32.const 0)
         (i32.load
          (local.get $16)
         )
         (i32.load
          (local.get $17)
         )
         (i32.add
          (local.get $0)
          (local.get $10)
         )
        )
        (call $_glCompressedTexImage2D
         (i32.const 3553)
         (local.get $9)
         (local.get $15)
         (local.get $7)
         (local.get $5)
         (i32.const 0)
         (local.get $13)
         (i32.add
          (local.get $0)
          (local.get $10)
         )
        )
       )
      )
      (local.set $10
       (i32.add
        (local.get $10)
        (local.get $13)
       )
      )
      (local.set $7
       (select
        (i32.const 1)
        (i32.div_s
         (local.get $7)
         (i32.const 2)
        )
        (i32.lt_s
         (local.get $7)
         (i32.const 2)
        )
       )
      )
      (local.set $5
       (select
        (i32.const 1)
        (i32.div_s
         (local.get $5)
         (i32.const 2)
        )
        (i32.lt_s
         (local.get $5)
         (i32.const 2)
        )
       )
      )
      (br_if $while-in
       (i32.ne
        (local.tee $9
         (i32.add
          (local.get $9)
          (i32.const 1)
         )
        )
        (local.get $4)
       )
      )
     )
    )
   )
   (if
    (i32.load8_s
     (i32.const 28828)
    )
    (block
     (call $_glTexParameteri
      (i32.const 3553)
      (i32.const 10242)
      (i32.const 10497)
     )
     (call $_glTexParameteri
      (i32.const 3553)
      (i32.const 10243)
      (i32.const 10497)
     )
    )
    (block
     (call $_glTexParameteri
      (i32.const 3553)
      (i32.const 10242)
      (i32.const 33071)
     )
     (call $_glTexParameteri
      (i32.const 3553)
      (i32.const 10243)
      (i32.const 33071)
     )
    )
   )
   (call $_glTexParameteri
    (i32.const 3553)
    (i32.const 10240)
    (i32.const 9728)
   )
   (call $_glTexParameteri
    (i32.const 3553)
    (i32.const 10241)
    (i32.const 9728)
   )
   (call $_glBindTexture
    (i32.const 3553)
    (i32.const 0)
   )
   (if
    (local.tee $0
     (i32.load
      (local.get $6)
     )
    )
    (block
     (i32.store
      (local.get $12)
      (local.get $0)
     )
     (i32.store offset=4
      (local.get $12)
      (local.get $1)
     )
     (i32.store offset=8
      (local.get $12)
      (local.get $2)
     )
     (i32.store offset=12
      (local.get $12)
      (local.get $4)
     )
     (call $_TraceLog
      (i32.const 3)
      (i32.const 11833)
      (local.get $12)
     )
    )
    (call $_TraceLog
     (i32.const 4)
     (i32.const 11895)
     (local.get $18)
    )
   )
   (local.set $0
    (i32.load
     (local.get $6)
    )
   )
   (global.set $STACKTOP
    (local.get $8)
   )
   (return
    (local.get $0)
   )
  )
  (local.set $0
   (i32.load
    (local.get $6)
   )
  )
  (global.set $STACKTOP
   (local.get $8)
  )
  (local.get $0)
 )
 (func $_LoadShaderDefault (; 393 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 960)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 960)
   )
  )
  (local.set $4
   (i32.add
    (local.get $2)
    (i32.const 944)
   )
  )
  (local.set $5
   (i32.add
    (local.get $2)
    (i32.const 936)
   )
  )
  (local.set $6
   (i32.add
    (local.get $2)
    (i32.const 448)
   )
  )
  (i64.store align=4
   (local.tee $1
    (call $_calloc
     (i32.const 32)
     (i32.const 4)
    )
   )
   (i64.const -1)
  )
  (i64.store offset=8 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=16 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=24 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=32 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=40 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=48 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=56 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store align=4
   (i32.sub
    (local.get $1)
    (i32.const -64)
   )
   (i64.const -1)
  )
  (i64.store offset=72 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=80 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=88 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=96 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=104 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=112 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=120 align=4
   (local.get $1)
   (i64.const -1)
  )
  (drop
   (call $_memcpy
    (local.get $6)
    (i32.const 1056)
    (i32.const 483)
   )
  )
  (drop
   (call $_memcpy
    (local.get $2)
    (i32.const 1552)
    (i32.const 441)
   )
  )
  (i32.store
   (i32.const 27908)
   (call $_CompileShader
    (local.get $6)
    (i32.const 35633)
   )
  )
  (i32.store
   (i32.const 27912)
   (local.tee $2
    (call $_CompileShader
     (local.get $2)
     (i32.const 35632)
    )
   )
  )
  (if
   (local.tee $2
    (call $_LoadShaderProgram
     (i32.load
      (i32.const 27908)
     )
     (local.get $2)
    )
   )
   (block
    (i32.store
     (local.get $5)
     (local.get $2)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 11127)
     (local.get $5)
    )
    (i32.store
     (local.get $1)
     (call $_glGetAttribLocation
      (local.get $2)
      (i32.const 11175)
     )
    )
    (i32.store offset=4
     (local.get $1)
     (call $_glGetAttribLocation
      (local.get $2)
      (i32.const 11190)
     )
    )
    (i32.store offset=20
     (local.get $1)
     (call $_glGetAttribLocation
      (local.get $2)
      (i32.const 11205)
     )
    )
    (i32.store offset=24
     (local.get $1)
     (call $_glGetUniformLocation
      (local.get $2)
      (i32.const 11217)
     )
    )
    (i32.store offset=44
     (local.get $1)
     (call $_glGetUniformLocation
      (local.get $2)
      (i32.const 11221)
     )
    )
    (i32.store offset=56
     (local.get $1)
     (call $_glGetUniformLocation
      (local.get $2)
      (i32.const 11232)
     )
    )
   )
   (block
    (i32.store
     (local.get $4)
     (local.get $2)
    )
    (call $_TraceLog
     (i32.const 4)
     (i32.const 11241)
     (local.get $4)
    )
   )
  )
  (i32.store
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=4
   (local.get $0)
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_LoadBuffersDefault (; 394 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.get $4)
    (i32.const 8)
   )
  )
  (i32.store
   (i32.const 22604)
   (call $_malloc
    (i32.const 98304)
   )
  )
  (i32.store
   (i32.const 22608)
   (call $_malloc
    (i32.const 65536)
   )
  )
  (i32.store
   (i32.const 22612)
   (call $_malloc
    (i32.const 32768)
   )
  )
  (i32.store
   (i32.const 22616)
   (call $_malloc
    (i32.const 24576)
   )
  )
  (loop $while-in
   (f32.store
    (i32.add
     (i32.load
      (i32.const 22604)
     )
     (i32.shl
      (local.get $0)
      (i32.const 2)
     )
    )
    (f32.const 0)
   )
   (br_if $while-in
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 24576)
    )
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in1
   (f32.store
    (i32.add
     (i32.load
      (i32.const 22608)
     )
     (i32.shl
      (local.get $0)
      (i32.const 2)
     )
    )
    (f32.const 0)
   )
   (br_if $while-in1
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 16384)
    )
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in3
   (i32.store8
    (i32.add
     (i32.load
      (i32.const 22612)
     )
     (local.get $0)
    )
    (i32.const 0)
   )
   (br_if $while-in3
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 32768)
    )
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in5
   (i32.store16
    (i32.add
     (i32.load
      (i32.const 22616)
     )
     (i32.shl
      (local.get $1)
      (i32.const 1)
     )
    )
    (local.tee $6
     (i32.and
      (local.tee $2
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
      )
      (i32.const 65535)
     )
    )
   )
   (i32.store16
    (i32.add
     (i32.load
      (i32.const 22616)
     )
     (i32.shl
      (i32.or
       (local.get $1)
       (i32.const 1)
      )
      (i32.const 1)
     )
    )
    (i32.or
     (local.get $2)
     (i32.const 1)
    )
   )
   (i32.store16
    (i32.add
     (i32.load
      (i32.const 22616)
     )
     (i32.shl
      (i32.add
       (local.get $1)
       (i32.const 2)
      )
      (i32.const 1)
     )
    )
    (local.tee $7
     (i32.and
      (i32.or
       (local.get $2)
       (i32.const 2)
      )
      (i32.const 65535)
     )
    )
   )
   (i32.store16
    (i32.add
     (i32.load
      (i32.const 22616)
     )
     (i32.shl
      (i32.add
       (local.get $1)
       (i32.const 3)
      )
      (i32.const 1)
     )
    )
    (local.get $6)
   )
   (i32.store16
    (i32.add
     (i32.load
      (i32.const 22616)
     )
     (i32.shl
      (i32.add
       (local.get $1)
       (i32.const 4)
      )
      (i32.const 1)
     )
    )
    (local.get $7)
   )
   (i32.store16
    (i32.add
     (i32.load
      (i32.const 22616)
     )
     (i32.shl
      (i32.add
       (local.get $1)
       (i32.const 5)
      )
      (i32.const 1)
     )
    )
    (i32.or
     (local.get $2)
     (i32.const 3)
    )
   )
   (local.set $1
    (i32.add
     (local.get $1)
     (i32.const 6)
    )
   )
   (br_if $while-in5
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 2048)
    )
   )
  )
  (i32.store
   (i32.const 22592)
   (i32.const 0)
  )
  (i32.store
   (i32.const 22596)
   (i32.const 0)
  )
  (i32.store
   (i32.const 22600)
   (i32.const 0)
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 11034)
   (local.get $4)
  )
  (if
   (i32.load8_s
    (i32.const 28826)
   )
   (block
    (local.set $0
     (i32.load
      (i32.const 27904)
     )
    )
    (call_indirect (type $FUNCSIG$vii)
     (i32.const 1)
     (i32.const 22620)
     (i32.add
      (i32.and
       (local.get $0)
       (i32.const 63)
      )
      (i32.const 159)
     )
    )
    (local.set $0
     (i32.load
      (i32.const 27884)
     )
    )
    (call_indirect (type $FUNCSIG$vi)
     (i32.load
      (i32.const 22620)
     )
     (i32.add
      (i32.and
       (local.get $0)
       (i32.const 31)
      )
      (i32.const 107)
     )
    )
   )
  )
  (call $_glGenBuffers
   (i32.const 1)
   (i32.const 22624)
  )
  (call $_glBindBuffer
   (i32.const 34962)
   (i32.load
    (i32.const 22624)
   )
  )
  (call $_glBufferData
   (i32.const 34962)
   (i32.const 98304)
   (i32.load
    (i32.const 22604)
   )
   (i32.const 35048)
  )
  (call $_glEnableVertexAttribArray
   (i32.load
    (i32.load
     (i32.const 27268)
    )
   )
  )
  (call $_glVertexAttribPointer
   (i32.load
    (i32.load
     (i32.const 27268)
    )
   )
   (i32.const 3)
   (i32.const 5126)
   (i32.const 0)
   (i32.const 0)
   (i32.const 0)
  )
  (call $_glGenBuffers
   (i32.const 1)
   (i32.const 22628)
  )
  (call $_glBindBuffer
   (i32.const 34962)
   (i32.load
    (i32.const 22628)
   )
  )
  (call $_glBufferData
   (i32.const 34962)
   (i32.const 65536)
   (i32.load
    (i32.const 22608)
   )
   (i32.const 35048)
  )
  (call $_glEnableVertexAttribArray
   (i32.load offset=4
    (i32.load
     (i32.const 27268)
    )
   )
  )
  (call $_glVertexAttribPointer
   (i32.load offset=4
    (i32.load
     (i32.const 27268)
    )
   )
   (i32.const 2)
   (i32.const 5126)
   (i32.const 0)
   (i32.const 0)
   (i32.const 0)
  )
  (call $_glGenBuffers
   (i32.const 1)
   (i32.const 22632)
  )
  (call $_glBindBuffer
   (i32.const 34962)
   (i32.load
    (i32.const 22632)
   )
  )
  (call $_glBufferData
   (i32.const 34962)
   (i32.const 32768)
   (i32.load
    (i32.const 22612)
   )
   (i32.const 35048)
  )
  (call $_glEnableVertexAttribArray
   (i32.load offset=20
    (i32.load
     (i32.const 27268)
    )
   )
  )
  (call $_glVertexAttribPointer
   (i32.load offset=20
    (i32.load
     (i32.const 27268)
    )
   )
   (i32.const 4)
   (i32.const 5121)
   (i32.const 1)
   (i32.const 0)
   (i32.const 0)
  )
  (call $_glGenBuffers
   (i32.const 1)
   (i32.const 22636)
  )
  (call $_glBindBuffer
   (i32.const 34963)
   (i32.load
    (i32.const 22636)
   )
  )
  (call $_glBufferData
   (i32.const 34963)
   (i32.const 24576)
   (i32.load
    (i32.const 22616)
   )
   (i32.const 35044)
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 11082)
   (local.get $5)
  )
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 28826)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (local.set $0
   (i32.load
    (i32.const 27884)
   )
  )
  (call_indirect (type $FUNCSIG$vi)
   (i32.const 0)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 31)
    )
    (i32.const 107)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_CompileShader (; 395 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (local.set $7
   (i32.add
    (local.get $2)
    (i32.const 16)
   )
  )
  (local.set $8
   (i32.add
    (local.get $2)
    (i32.const 8)
   )
  )
  (local.set $5
   (i32.add
    (local.get $2)
    (i32.const 24)
   )
  )
  (local.set $9
   (i32.add
    (local.get $2)
    (i32.const 20)
   )
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $2)
     (i32.const 28)
    )
   )
   (local.get $0)
  )
  (call $_glShaderSource
   (local.tee $3
    (call $_glCreateShader
     (local.get $1)
    )
   )
   (i32.const 1)
   (local.get $4)
   (i32.const 0)
  )
  (i32.store
   (local.get $5)
   (i32.const 0)
  )
  (call $_glCompileShader
   (local.get $3)
  )
  (call $_glGetShaderiv
   (local.get $3)
   (i32.const 35713)
   (local.get $5)
  )
  (if
   (i32.eq
    (i32.load
     (local.get $5)
    )
    (i32.const 1)
   )
   (block
    (i32.store
     (local.get $7)
     (local.get $3)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 11470)
     (local.get $7)
    )
   )
   (block
    (i32.store
     (local.get $2)
     (local.get $3)
    )
    (call $_TraceLog
     (i32.const 4)
     (i32.const 11429)
     (local.get $2)
    )
    (i32.store
     (local.get $2)
     (i32.const 0)
    )
    (call $_glGetShaderiv
     (local.get $3)
     (i32.const 35716)
     (local.get $2)
    )
    (local.set $0
     (i32.load
      (local.get $2)
     )
    )
    (local.set $1
     (call $_llvm_stacksave)
    )
    (local.set $4
     (global.get $STACKTOP)
    )
    (global.set $STACKTOP
     (i32.add
      (global.get $STACKTOP)
      (i32.and
       (i32.add
        (local.get $0)
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (if
     (i32.ge_s
      (global.get $STACKTOP)
      (global.get $STACK_MAX)
     )
     (call $abortStackOverflow
      (i32.and
       (i32.add
        (local.get $0)
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (call $_glGetShaderInfoLog
     (local.get $3)
     (i32.load
      (local.get $2)
     )
     (local.get $9)
     (local.get $4)
    )
    (i32.store
     (local.get $8)
     (local.get $4)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 11378)
     (local.get $8)
    )
    (call $_llvm_stackrestore
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $3)
 )
 (func $_LoadShaderProgram (; 396 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
  )
  (local.set $8
   (i32.add
    (local.get $3)
    (i32.const 20)
   )
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $3)
     (i32.const 24)
    )
   )
   (i32.const 0)
  )
  (call $_glAttachShader
   (local.tee $2
    (call $_glCreateProgram)
   )
   (local.get $0)
  )
  (call $_glAttachShader
   (local.get $2)
   (local.get $1)
  )
  (call $_glBindAttribLocation
   (local.get $2)
   (i32.const 0)
   (i32.const 11175)
  )
  (call $_glBindAttribLocation
   (local.get $2)
   (i32.const 1)
   (i32.const 11190)
  )
  (call $_glBindAttribLocation
   (local.get $2)
   (i32.const 2)
   (i32.const 11289)
  )
  (call $_glBindAttribLocation
   (local.get $2)
   (i32.const 3)
   (i32.const 11205)
  )
  (call $_glBindAttribLocation
   (local.get $2)
   (i32.const 4)
   (i32.const 11302)
  )
  (call $_glBindAttribLocation
   (local.get $2)
   (i32.const 5)
   (i32.const 11316)
  )
  (call $_glLinkProgram
   (local.get $2)
  )
  (call $_glGetProgramiv
   (local.get $2)
   (i32.const 35714)
   (local.get $7)
  )
  (if (result i32)
   (i32.load
    (local.get $7)
   )
   (block (result i32)
    (i32.store
     (local.get $4)
     (local.get $2)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 11381)
     (local.get $4)
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (local.get $2)
   )
   (block (result i32)
    (i32.store
     (local.get $3)
     (local.get $2)
    )
    (call $_TraceLog
     (i32.const 4)
     (i32.const 11332)
     (local.get $3)
    )
    (i32.store
     (local.get $3)
     (i32.const 0)
    )
    (call $_glGetProgramiv
     (local.get $2)
     (i32.const 35716)
     (local.get $3)
    )
    (local.set $0
     (i32.load
      (local.get $3)
     )
    )
    (local.set $4
     (call $_llvm_stacksave)
    )
    (local.set $1
     (global.get $STACKTOP)
    )
    (global.set $STACKTOP
     (i32.add
      (global.get $STACKTOP)
      (i32.and
       (i32.add
        (local.get $0)
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (if
     (i32.ge_s
      (global.get $STACKTOP)
      (global.get $STACK_MAX)
     )
     (call $abortStackOverflow
      (i32.and
       (i32.add
        (local.get $0)
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (call $_glGetProgramInfoLog
     (local.get $2)
     (i32.load
      (local.get $3)
     )
     (local.get $8)
     (local.get $1)
    )
    (i32.store
     (local.get $6)
     (local.get $1)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 11378)
     (local.get $6)
    )
    (call $_glDeleteProgram
     (local.get $2)
    )
    (call $_llvm_stackrestore
     (local.get $4)
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (i32.const 0)
   )
  )
 )
 (func $_GetPixelDataSize (; 397 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (i32.div_s
   (i32.mul
    (block $do-once (result i32)
     (block $switch-default
      (block $switch-case19
       (block $switch-case18
        (block $switch-case14
         (block $switch-case8
          (block $switch-case7
           (block $switch-case6
            (block $switch-case5
             (block $switch-case4
              (block $switch-case3
               (block $switch-case
                (br_table $switch-case $switch-case3 $switch-case3 $switch-case5 $switch-case3 $switch-case3 $switch-case4 $switch-case6 $switch-case7 $switch-case8 $switch-case14 $switch-case14 $switch-case18 $switch-case18 $switch-case14 $switch-case14 $switch-case18 $switch-case14 $switch-case14 $switch-case18 $switch-case19 $switch-default
                 (i32.sub
                  (local.get $2)
                  (i32.const 1)
                 )
                )
               )
               (br $do-once
                (i32.const 8)
               )
              )
              (br $do-once
               (i32.const 16)
              )
             )
             (br $do-once
              (i32.const 32)
             )
            )
            (br $do-once
             (i32.const 24)
            )
           )
           (br $do-once
            (i32.const 32)
           )
          )
          (br $do-once
           (i32.const 96)
          )
         )
         (br $do-once
          (i32.const 128)
         )
        )
        (br $do-once
         (i32.const 4)
        )
       )
       (br $do-once
        (i32.const 8)
       )
      )
      (br $do-once
       (i32.const 2)
      )
     )
     (i32.const 0)
    )
    (i32.mul
     (local.get $0)
     (local.get $1)
    )
   )
   (i32.const 8)
  )
 )
 (func $_rlGetGlTextureFormats (; 398 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (i32.const -1)
  )
  (i32.store
   (local.get $2)
   (i32.const -1)
  )
  (i32.store
   (local.get $3)
   (i32.const -1)
  )
  (block $do-once
   (block $switch-default
    (block $switch-case19
     (block $switch-case18
      (block $switch-case17
       (block $switch-case16
        (block $switch-case15
         (block $switch-case14
          (block $switch-case13
           (block $switch-case12
            (block $switch-case11
             (block $switch-case10
              (block $switch-case9
               (block $switch-case8
                (block $switch-case7
                 (block $switch-case6
                  (block $switch-case5
                   (block $switch-case4
                    (block $switch-case3
                     (block $switch-case2
                      (block $switch-case1
                       (block $switch-case0
                        (block $switch-case
                         (br_table $switch-case $switch-case0 $switch-case1 $switch-case2 $switch-case3 $switch-case4 $switch-case5 $switch-case6 $switch-case7 $switch-case8 $switch-case9 $switch-case10 $switch-case11 $switch-case12 $switch-case13 $switch-case14 $switch-case15 $switch-case16 $switch-case17 $switch-case18 $switch-case19 $switch-default
                          (i32.sub
                           (local.get $0)
                           (i32.const 1)
                          )
                         )
                        )
                        (i32.store
                         (local.get $1)
                         (i32.const 6409)
                        )
                        (i32.store
                         (local.get $2)
                         (i32.const 6409)
                        )
                        (i32.store
                         (local.get $3)
                         (i32.const 5121)
                        )
                        (br $do-once)
                       )
                       (i32.store
                        (local.get $1)
                        (i32.const 6410)
                       )
                       (i32.store
                        (local.get $2)
                        (i32.const 6410)
                       )
                       (i32.store
                        (local.get $3)
                        (i32.const 5121)
                       )
                       (br $do-once)
                      )
                      (i32.store
                       (local.get $1)
                       (i32.const 6407)
                      )
                      (i32.store
                       (local.get $2)
                       (i32.const 6407)
                      )
                      (i32.store
                       (local.get $3)
                       (i32.const 33635)
                      )
                      (br $do-once)
                     )
                     (i32.store
                      (local.get $1)
                      (i32.const 6407)
                     )
                     (i32.store
                      (local.get $2)
                      (i32.const 6407)
                     )
                     (i32.store
                      (local.get $3)
                      (i32.const 5121)
                     )
                     (br $do-once)
                    )
                    (i32.store
                     (local.get $1)
                     (i32.const 6408)
                    )
                    (i32.store
                     (local.get $2)
                     (i32.const 6408)
                    )
                    (i32.store
                     (local.get $3)
                     (i32.const 32820)
                    )
                    (br $do-once)
                   )
                   (i32.store
                    (local.get $1)
                    (i32.const 6408)
                   )
                   (i32.store
                    (local.get $2)
                    (i32.const 6408)
                   )
                   (i32.store
                    (local.get $3)
                    (i32.const 32819)
                   )
                   (br $do-once)
                  )
                  (i32.store
                   (local.get $1)
                   (i32.const 6408)
                  )
                  (i32.store
                   (local.get $2)
                   (i32.const 6408)
                  )
                  (i32.store
                   (local.get $3)
                   (i32.const 5121)
                  )
                  (br $do-once)
                 )
                 (if
                  (i32.load8_s
                   (i32.const 28829)
                  )
                  (i32.store
                   (local.get $1)
                   (i32.const 6409)
                  )
                 )
                 (i32.store
                  (local.get $2)
                  (i32.const 6409)
                 )
                 (i32.store
                  (local.get $3)
                  (i32.const 5126)
                 )
                 (br $do-once)
                )
                (if
                 (i32.load8_s
                  (i32.const 28829)
                 )
                 (i32.store
                  (local.get $1)
                  (i32.const 6407)
                 )
                )
                (i32.store
                 (local.get $2)
                 (i32.const 6407)
                )
                (i32.store
                 (local.get $3)
                 (i32.const 5126)
                )
                (br $do-once)
               )
               (if
                (i32.load8_s
                 (i32.const 28829)
                )
                (i32.store
                 (local.get $1)
                 (i32.const 6408)
                )
               )
               (i32.store
                (local.get $2)
                (i32.const 6408)
               )
               (i32.store
                (local.get $3)
                (i32.const 5126)
               )
               (br $do-once)
              )
              (if
               (i32.load8_s
                (i32.const 28830)
               )
               (i32.store
                (local.get $1)
                (i32.const 33776)
               )
              )
              (br $do-once)
             )
             (if
              (i32.load8_s
               (i32.const 28830)
              )
              (i32.store
               (local.get $1)
               (i32.const 33777)
              )
             )
             (br $do-once)
            )
            (if
             (i32.load8_s
              (i32.const 28830)
             )
             (i32.store
              (local.get $1)
              (i32.const 33778)
             )
            )
            (br $do-once)
           )
           (if
            (i32.load8_s
             (i32.const 28830)
            )
            (i32.store
             (local.get $1)
             (i32.const 33779)
            )
           )
           (br $do-once)
          )
          (if
           (i32.load8_s
            (i32.const 28831)
           )
           (i32.store
            (local.get $1)
            (i32.const 36196)
           )
          )
          (br $do-once)
         )
         (if
          (i32.load8_s
           (i32.const 28832)
          )
          (i32.store
           (local.get $1)
           (i32.const 37492)
          )
         )
         (br $do-once)
        )
        (if
         (i32.load8_s
          (i32.const 28832)
         )
         (i32.store
          (local.get $1)
          (i32.const 37496)
         )
        )
        (br $do-once)
       )
       (if
        (i32.load8_s
         (i32.const 28833)
        )
        (i32.store
         (local.get $1)
         (i32.const 35840)
        )
       )
       (br $do-once)
      )
      (if
       (i32.load8_s
        (i32.const 28833)
       )
       (i32.store
        (local.get $1)
        (i32.const 35842)
       )
      )
      (br $do-once)
     )
     (if
      (i32.load8_s
       (i32.const 28834)
      )
      (i32.store
       (local.get $1)
       (i32.const 37808)
      )
     )
     (br $do-once)
    )
    (if
     (i32.load8_s
      (i32.const 28834)
     )
     (i32.store
      (local.get $1)
      (i32.const 37815)
     )
    )
    (br $do-once)
   )
   (call $_TraceLog
    (i32.const 4)
    (i32.const 11924)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_rlglClose (; 399 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (call $_UnloadShaderDefault)
  (call $_UnloadBuffersDefault)
  (call $_glDeleteTextures
   (i32.const 1)
   (i32.const 27880)
  )
  (i32.store
   (local.get $0)
   (i32.load
    (i32.const 27880)
   )
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 11953)
   (local.get $0)
  )
  (call $_free
   (i32.load
    (i32.const 27872)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $_UnloadShaderDefault (; 400 ;) (; has Stack IR ;)
  (call $_glUseProgram
   (i32.const 0)
  )
  (call $_glDetachShader
   (i32.load
    (i32.const 27568)
   )
   (i32.load
    (i32.const 27908)
   )
  )
  (call $_glDetachShader
   (i32.load
    (i32.const 27568)
   )
   (i32.load
    (i32.const 27912)
   )
  )
  (call $_glDeleteShader
   (i32.load
    (i32.const 27908)
   )
  )
  (call $_glDeleteShader
   (i32.load
    (i32.const 27912)
   )
  )
  (call $_glDeleteProgram
   (i32.load
    (i32.const 27568)
   )
  )
 )
 (func $_UnloadBuffersDefault (; 401 ;) (; has Stack IR ;)
  (local $0 i32)
  (if
   (i32.load8_s
    (i32.const 28826)
   )
   (block
    (local.set $0
     (i32.load
      (i32.const 27884)
     )
    )
    (call_indirect (type $FUNCSIG$vi)
     (i32.const 0)
     (i32.add
      (i32.and
       (local.get $0)
       (i32.const 31)
      )
      (i32.const 107)
     )
    )
   )
  )
  (call $_glDisableVertexAttribArray
   (i32.const 0)
  )
  (call $_glDisableVertexAttribArray
   (i32.const 1)
  )
  (call $_glDisableVertexAttribArray
   (i32.const 2)
  )
  (call $_glDisableVertexAttribArray
   (i32.const 3)
  )
  (call $_glBindBuffer
   (i32.const 34962)
   (i32.const 0)
  )
  (call $_glBindBuffer
   (i32.const 34963)
   (i32.const 0)
  )
  (call $_glDeleteBuffers
   (i32.const 1)
   (i32.const 22624)
  )
  (call $_glDeleteBuffers
   (i32.const 1)
   (i32.const 22628)
  )
  (call $_glDeleteBuffers
   (i32.const 1)
   (i32.const 22632)
  )
  (call $_glDeleteBuffers
   (i32.const 1)
   (i32.const 22636)
  )
  (if
   (i32.load8_s
    (i32.const 28826)
   )
   (block
    (local.set $0
     (i32.load
      (i32.const 27900)
     )
    )
    (call_indirect (type $FUNCSIG$vii)
     (i32.const 1)
     (i32.const 22620)
     (i32.add
      (i32.and
       (local.get $0)
       (i32.const 63)
      )
      (i32.const 159)
     )
    )
   )
  )
  (call $_free
   (i32.load
    (i32.const 22604)
   )
  )
  (call $_free
   (i32.load
    (i32.const 22608)
   )
  )
  (call $_free
   (i32.load
    (i32.const 22612)
   )
  )
  (call $_free
   (i32.load
    (i32.const 22616)
   )
  )
 )
 (func $_rlReadScreenPixels (; 402 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (call $_glReadPixels
   (i32.const 0)
   (i32.const 0)
   (local.get $0)
   (local.get $1)
   (i32.const 6408)
   (i32.const 5121)
   (local.tee $3
    (call $_calloc
     (local.tee $2
      (i32.mul
       (local.get $1)
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
      )
     )
     (i32.const 1)
    )
   )
  )
  (local.set $2
   (call $_malloc
    (local.get $2)
   )
  )
  (if
   (i32.le_s
    (local.get $1)
    (i32.const 0)
   )
   (block
    (call $_free
     (local.get $3)
    )
    (return
     (local.get $2)
    )
   )
  )
  (local.set $4
   (i32.shl
    (local.get $0)
    (i32.const 2)
   )
  )
  (local.set $5
   (i32.gt_s
    (local.get $0)
    (i32.const 0)
   )
  )
  (local.set $6
   (i32.shl
    (local.get $0)
    (i32.const 2)
   )
  )
  (local.set $7
   (i32.shl
    (local.get $0)
    (i32.const 2)
   )
  )
  (local.set $0
   (local.tee $8
    (i32.add
     (local.get $1)
     (i32.const -1)
    )
   )
  )
  (loop $while-in
   (if
    (local.get $5)
    (block
     (local.set $9
      (i32.mul
       (local.get $0)
       (local.get $6)
      )
     )
     (local.set $10
      (i32.mul
       (local.get $7)
       (i32.sub
        (local.get $8)
        (local.get $0)
       )
      )
     )
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in1
      (i32.store8
       (i32.add
        (i32.add
         (local.get $1)
         (local.get $10)
        )
        (local.get $2)
       )
       (select
        (i32.load8_s
         (i32.add
          (i32.add
           (local.get $1)
           (local.get $9)
          )
          (local.get $3)
         )
        )
        (i32.const -1)
        (i32.and
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.const 3)
        )
       )
      )
      (br_if $while-in1
       (i32.lt_s
        (local.get $1)
        (local.get $4)
       )
      )
     )
    )
   )
   (local.set $1
    (i32.add
     (local.get $0)
     (i32.const -1)
    )
   )
   (if
    (i32.gt_s
     (local.get $0)
     (i32.const 0)
    )
    (block
     (local.set $0
      (local.get $1)
     )
     (br $while-in)
    )
   )
  )
  (call $_free
   (local.get $3)
  )
  (local.get $2)
 )
 (func $_ProcessGestureEvent (; 403 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $2
   (i32.add
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store
   (i32.const 27920)
   (local.tee $8
    (i32.load offset=4
     (local.get $0)
    )
   )
  )
  (local.set $6
   (i32.eq
    (local.tee $5
     (i32.load
      (local.get $0)
     )
    )
    (i32.const 1)
   )
  )
  (block $folding-inner0
   (if
    (i32.ge_s
     (local.get $8)
     (i32.const 2)
    )
    (block
     (if
      (local.get $6)
      (block
       (i64.store
        (i32.const 27576)
        (i64.load offset=24 align=4
         (local.get $0)
        )
       )
       (i64.store
        (i32.const 27608)
        (i64.load offset=32 align=4
         (local.get $0)
        )
       )
       (i32.store
        (i32.const 27916)
        (i32.const 4)
       )
       (br $folding-inner0)
      )
     )
     (block $switch-default
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case0 $switch-default $switch-case $switch-default
         (local.get $5)
        )
       )
       (i64.store align=4
        (local.get $1)
        (i64.load align=4
         (i32.const 27600)
        )
       )
       (i64.store align=4
        (local.get $2)
        (i64.load align=4
         (i32.const 27616)
        )
       )
       (local.set $3
        (call $_Vector2Distance
         (local.get $1)
         (local.get $2)
        )
       )
       (i64.store
        (i32.const 27576)
        (i64.load
         (i32.const 27600)
        )
       )
       (i64.store
        (i32.const 27608)
        (i64.load
         (i32.const 27616)
        )
       )
       (i64.store
        (i32.const 27600)
        (i64.load offset=24 align=4
         (local.get $0)
        )
       )
       (i64.store
        (i32.const 27616)
        (i64.load offset=32 align=4
         (local.get $0)
        )
       )
       (i64.store align=4
        (local.get $1)
        (i64.load align=4
         (i32.const 27576)
        )
       )
       (i64.store align=4
        (local.get $2)
        (i64.load align=4
         (i32.const 27600)
        )
       )
       (i32.store
        (i32.const 27916)
        (block $__rjto$0 (result i32)
         (block $__rjti$0
          (br_if $__rjti$0
           (f32.ge
            (call $_Vector2Distance
             (local.get $1)
             (local.get $2)
            )
            (f32.const 0.004999999888241291)
           )
          )
          (i64.store align=4
           (local.get $1)
           (i64.load align=4
            (i32.const 27608)
           )
          )
          (i64.store align=4
           (local.get $2)
           (i64.load align=4
            (i32.const 27616)
           )
          )
          (br_if $__rjti$0
           (f32.ge
            (call $_Vector2Distance
             (local.get $1)
             (local.get $2)
            )
            (f32.const 0.004999999888241291)
           )
          )
          (br $__rjto$0
           (i32.const 4)
          )
         )
         (i64.store align=4
          (local.get $1)
          (i64.load align=4
           (i32.const 27600)
          )
         )
         (i64.store align=4
          (local.get $2)
          (i64.load align=4
           (i32.const 27616)
          )
         )
         (select
          (i32.const 256)
          (i32.const 512)
          (f32.lt
           (f32.sub
            (call $_Vector2Distance
             (local.get $1)
             (local.get $2)
            )
            (local.get $3)
           )
           (f32.const 0)
          )
         )
        )
       )
       (i64.store align=4
        (local.get $1)
        (i64.load align=4
         (i32.const 27600)
        )
       )
       (i64.store align=4
        (local.get $2)
        (i64.load align=4
         (i32.const 27616)
        )
       )
       (br $folding-inner0)
      )
      (i32.store
       (i32.const 27920)
       (i32.const 0)
      )
      (i32.store
       (i32.const 27916)
       (i32.const 0)
      )
      (br $folding-inner0)
     )
     (br $folding-inner0)
    )
   )
   (if
    (local.get $6)
    (block
     (i32.store
      (i32.const 27924)
      (i32.add
       (local.tee $5
        (i32.load
         (i32.const 27924)
        )
       )
       (i32.const 1)
      )
     )
     (block $__rjto$1
      (block $__rjti$1
       (br_if $__rjti$1
        (i32.eqz
         (i32.and
          (i32.eqz
           (i32.load
            (i32.const 27916)
           )
          )
          (i32.gt_s
           (local.get $5)
           (i32.const 0)
          )
         )
        )
       )
       (i64.store align=4
        (local.get $1)
        (i64.load align=4
         (i32.const 27576)
        )
       )
       (i64.store align=4
        (local.get $2)
        (i64.load offset=24 align=4
         (local.get $0)
        )
       )
       (br_if $__rjti$1
        (i32.eqz
         (f32.lt
          (call $_Vector2Distance
           (local.get $1)
           (local.get $2)
          )
          (f32.const 0.029999999329447746)
         )
        )
       )
       (i32.store
        (i32.const 27916)
        (i32.const 2)
       )
       (i32.store
        (i32.const 27924)
        (i32.const 0)
       )
       (br $__rjto$1)
      )
      (i32.store
       (i32.const 27924)
       (i32.const 1)
      )
      (i32.store
       (i32.const 27916)
       (i32.const 1)
      )
     )
     (i64.store
      (i32.const 27576)
      (local.tee $7
       (i64.load offset=24 align=4
        (local.get $0)
       )
      )
     )
     (i64.store
      (i32.const 27584)
      (local.get $7)
     )
     (i64.store
      (i32.const 27592)
      (local.get $7)
     )
     (i32.store
      (i32.const 8952)
      (i32.load offset=8
       (local.get $0)
      )
     )
     (br $folding-inner0)
    )
   )
   (block $switch-default4
    (block $switch-case3
     (block $switch-case2
      (br_table $switch-case2 $switch-default4 $switch-case3 $switch-default4
       (local.get $5)
      )
     )
     (if
      (i32.eq
       (i32.load
        (i32.const 27916)
       )
       (i32.const 8)
      )
      (i64.store
       (i32.const 27592)
       (i64.load offset=24 align=4
        (local.get $0)
       )
      )
     )
     (i64.store align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 27576)
      )
     )
     (i64.store align=4
      (local.get $2)
      (i64.load align=4
       (i32.const 27592)
      )
     )
     (local.set $3
      (f32.div
       (call $_Vector2Distance
        (local.get $1)
        (local.get $2)
       )
       (f32.const 0)
      )
     )
     (i32.store8
      (i32.const 28837)
      (i32.const 0)
     )
     (i32.store
      (i32.const 27916)
      (if (result i32)
       (f32.gt
        (local.get $3)
        (f32.const 5.000000237487257e-04)
       )
       (if (result i32)
        (i32.eq
         (i32.load
          (i32.const 8952)
         )
         (i32.load offset=8
          (local.get $0)
         )
        )
        (block (result i32)
         (i64.store align=4
          (local.get $1)
          (i64.load align=4
           (i32.const 27576)
          )
         )
         (i64.store align=4
          (local.get $2)
          (i64.load align=4
           (i32.const 27592)
          )
         )
         (if (result i32)
          (i32.or
           (f32.lt
            (local.tee $3
             (f32.sub
              (f32.const 360)
              (call $_Vector2Angle
               (local.get $1)
               (local.get $2)
              )
             )
            )
            (f32.const 30)
           )
           (f32.gt
            (local.get $3)
            (f32.const 330)
           )
          )
          (i32.const 16)
          (select
           (i32.const 64)
           (select
            (i32.const 32)
            (select
             (i32.const 128)
             (i32.const 0)
             (i32.and
              (f32.lt
               (local.get $3)
               (f32.const 300)
              )
              (f32.gt
               (local.get $3)
               (f32.const 210)
              )
             )
            )
            (i32.and
             (f32.lt
              (local.get $3)
              (f32.const 210)
             )
             (f32.gt
              (local.get $3)
              (f32.const 120)
             )
            )
           )
           (i32.and
            (f32.lt
             (local.get $3)
             (f32.const 120)
            )
            (f32.gt
             (local.get $3)
             (f32.const 30)
            )
           )
          )
         )
        )
        (i32.const 0)
       )
       (i32.const 0)
      )
     )
     (f32.store
      (i32.const 27584)
      (f32.const 0)
     )
     (f32.store
      (i32.const 27588)
      (f32.const 0)
     )
     (i32.store
      (i32.const 27920)
      (i32.const 0)
     )
     (br $folding-inner0)
    )
    (local.set $5
     (i32.load
      (i32.const 27916)
     )
    )
    (if
     (i32.eqz
      (i32.load8_s
       (i32.const 28837)
      )
     )
     (i32.store8
      (i32.const 28837)
      (i32.const 1)
     )
    )
    (i64.store
     (i32.const 27600)
     (i64.load offset=24 align=4
      (local.get $0)
     )
    )
    (if
     (i32.eq
      (local.get $5)
      (i32.const 4)
     )
     (block
      (i64.store align=4
       (local.get $1)
       (i64.load align=4
        (i32.const 27576)
       )
      )
      (i64.store align=4
       (local.get $2)
       (i64.load align=4
        (i32.const 27600)
       )
      )
      (if
       (f32.ge
        (call $_Vector2Distance
         (local.get $1)
         (local.get $2)
        )
        (f32.const 0.014999999664723873)
       )
       (i32.store
        (i32.const 27916)
        (i32.const 8)
       )
      )
     )
    )
    (br $folding-inner0)
   )
   (global.set $STACKTOP
    (local.get $4)
   )
   (return)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_UpdateGestures (; 404 ;) (; has Stack IR ;)
  (local $0 i32)
  (if
   (i32.and
    (i32.lt_s
     (i32.load
      (i32.const 27920)
     )
     (i32.const 2)
    )
    (i32.lt_u
     (i32.add
      (i32.load
       (i32.const 27916)
      )
      (i32.const -1)
     )
     (i32.const 2)
    )
   )
   (i32.store
    (i32.const 27916)
    (i32.const 4)
   )
  )
  (block $switch
   (block $switch-default
    (br_table $switch $switch $switch-default $switch $switch-default $switch-default $switch-default $switch $switch-default
     (i32.or
      (i32.shr_u
       (local.tee $0
        (i32.add
         (i32.load
          (i32.const 27916)
         )
         (i32.const -16)
        )
       )
       (i32.const 4)
      )
      (i32.shl
       (local.get $0)
       (i32.const 28)
      )
     )
    )
   )
   (return)
  )
  (i32.store
   (i32.const 27916)
   (i32.const 0)
  )
 )
 (func $_GifBegin (; 405 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (i32.store
   (i32.const 27940)
   (local.tee $0
    (call $_fopen
     (local.get $0)
    )
   )
  )
  (if
   (i32.eqz
    (local.get $0)
   )
   (return)
  )
  (i32.store
   (i32.const 27668)
   (call $_malloc
    (i32.mul
     (local.get $2)
     (i32.shl
      (local.get $1)
      (i32.const 2)
     )
    )
   )
  )
  (drop
   (call $_fwrite
    (i32.const 12018)
    (i32.const 6)
    (i32.const 1)
    (local.get $0)
   )
  )
  (call $_fputc
   (i32.and
    (local.get $1)
    (i32.const 255)
   )
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.and
    (i32.shr_u
     (local.get $1)
     (i32.const 8)
    )
    (i32.const 255)
   )
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.and
    (local.get $2)
    (i32.const 255)
   )
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.and
    (i32.shr_u
     (local.get $2)
     (i32.const 8)
    )
    (i32.const 255)
   )
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.const 240)
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 27940)
   )
  )
  (if
   (i32.eqz
    (local.get $3)
   )
   (return)
  )
  (call $_fputc
   (i32.const 33)
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.const 255)
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.const 11)
   (i32.load
    (i32.const 27940)
   )
  )
  (drop
   (call $_fwrite
    (i32.const 12025)
    (i32.const 11)
    (i32.const 1)
    (i32.load
     (i32.const 27940)
    )
   )
  )
  (call $_fputc
   (i32.const 3)
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.const 1)
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 27940)
   )
  )
 )
 (func $_GifWriteFrame (; 406 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 1296)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 1296)
   )
  )
  (if
   (i32.eqz
    (i32.load
     (i32.const 27940)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (call $_GifMakePalette
   (local.tee $5
    (i32.load
     (i32.const 27668)
    )
   )
   (local.get $0)
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
  (call $_GifThresholdImage
   (local.get $5)
   (local.get $0)
   (i32.load
    (i32.const 27668)
   )
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
  (call $_GifWriteLzwImage
   (i32.load
    (i32.const 27940)
   )
   (i32.load
    (i32.const 27668)
   )
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_GifMakePalette (; 407 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (i32.store
   (local.get $4)
   (i32.const 8)
  )
  (drop
   (call $_memcpy
    (local.tee $3
     (call $_malloc
      (local.tee $5
       (i32.shl
        (local.tee $2
         (i32.mul
          (local.get $2)
          (local.get $3)
         )
        )
        (i32.const 2)
       )
      )
     )
    )
    (local.get $1)
    (local.get $5)
   )
  )
  (call $_GifSplitPalette
   (local.get $3)
   (if (result i32)
    (local.get $0)
    (call $_GifPickChangedPixels
     (local.get $0)
     (local.get $3)
     (local.get $2)
    )
    (local.get $2)
   )
   (i32.const 1)
   (i32.const 256)
   (i32.const 128)
   (i32.const 64)
   (i32.const 1)
   (i32.const 0)
   (local.get $4)
  )
  (call $_free
   (local.get $3)
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 1155)
   )
   (i32.const 0)
  )
  (i32.store8 offset=900
   (local.get $4)
   (i32.const 0)
  )
  (i32.store8 offset=516
   (local.get $4)
   (i32.const 0)
  )
  (i32.store8 offset=260
   (local.get $4)
   (i32.const 0)
  )
  (i32.store8 offset=4
   (local.get $4)
   (i32.const 0)
  )
 )
 (func $_GifThresholdImage (; 408 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.eqz
    (local.tee $9
     (i32.mul
      (local.get $3)
      (local.get $4)
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $7)
    )
    (return)
   )
  )
  (local.set $8
   (i32.add
    (local.get $6)
    (i32.const 4)
   )
  )
  (local.set $4
   (local.get $6)
  )
  (local.set $3
   (i32.const 0)
  )
  (loop $while-in
   (block $__rjto$0
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.eqz
       (local.tee $10
        (i32.ne
         (local.get $0)
         (i32.const 0)
        )
       )
      )
     )
     (br_if $__rjti$0
      (i32.ne
       (local.tee $11
        (i32.load8_s
         (local.get $0)
        )
       )
       (i32.load8_s
        (local.get $1)
       )
      )
     )
     (br_if $__rjti$0
      (i32.ne
       (i32.load8_s offset=1
        (local.tee $6
         (local.get $0)
        )
       )
       (i32.load8_s offset=1
        (local.get $1)
       )
      )
     )
     (br_if $__rjti$0
      (i32.ne
       (i32.load8_s offset=2
        (local.tee $12
         (local.get $0)
        )
       )
       (i32.load8_s offset=2
        (local.get $1)
       )
      )
     )
     (i32.store8
      (local.get $2)
      (local.get $11)
     )
     (i32.store8 offset=1
      (local.get $2)
      (i32.load8_s offset=1
       (local.get $6)
      )
     )
     (i32.store8 offset=2
      (local.get $2)
      (i32.load8_s offset=2
       (local.get $12)
      )
     )
     (i32.store8 offset=3
      (local.get $2)
      (i32.const 0)
     )
     (br $__rjto$0)
    )
    (i32.store
     (local.get $8)
     (i32.const 1000000)
    )
    (i32.store
     (local.get $4)
     (i32.const 1)
    )
    (call $_GifGetClosestPaletteColor
     (local.get $5)
     (i32.load8_u
      (local.get $1)
     )
     (i32.load8_u offset=1
      (local.get $1)
     )
     (i32.load8_u offset=2
      (local.get $1)
     )
     (local.get $4)
     (local.get $8)
     (i32.const 1)
    )
    (i32.store8
     (local.get $2)
     (i32.load8_s
      (i32.add
       (local.tee $6
        (i32.load
         (local.get $4)
        )
       )
       (i32.add
        (local.get $5)
        (i32.const 4)
       )
      )
     )
    )
    (i32.store8 offset=1
     (local.get $2)
     (i32.load8_s
      (i32.add
       (local.get $6)
       (i32.add
        (local.get $5)
        (i32.const 260)
       )
      )
     )
    )
    (i32.store8 offset=2
     (local.get $2)
     (i32.load8_s
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.add
        (local.get $5)
        (i32.const 516)
       )
      )
     )
    )
    (i32.store8 offset=3
     (local.get $2)
     (i32.load
      (local.get $4)
     )
    )
   )
   (local.set $0
    (select
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
     (i32.const 0)
     (local.get $10)
    )
   )
   (local.set $2
    (i32.add
     (local.get $2)
     (i32.const 4)
    )
   )
   (local.set $1
    (i32.add
     (local.get $1)
     (i32.const 4)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $9)
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_GifWriteLzwImage (; 409 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local.set $14
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 272)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 272)
   )
  )
  (call $_fputc
   (i32.const 33)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 249)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 4)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 5)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 10)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 44)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_fputc
   (i32.and
    (local.get $2)
    (i32.const 255)
   )
   (local.get $0)
  )
  (call $_fputc
   (i32.and
    (i32.shr_u
     (local.get $2)
     (i32.const 8)
    )
    (i32.const 255)
   )
   (local.get $0)
  )
  (call $_fputc
   (i32.and
    (local.get $3)
    (i32.const 255)
   )
   (local.get $0)
  )
  (call $_fputc
   (i32.and
    (i32.shr_u
     (local.get $3)
     (i32.const 8)
    )
    (i32.const 255)
   )
   (local.get $0)
  )
  (call $_fputc
   (i32.add
    (i32.load
     (local.get $4)
    )
    (i32.const 127)
   )
   (local.get $0)
  )
  (call $_GifWritePalette
   (local.get $4)
   (local.get $0)
  )
  (local.set $8
   (i32.shl
    (i32.const 1)
    (local.tee $4
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (call $_fputc
   (local.get $4)
   (local.get $0)
  )
  (drop
   (call $_memset
    (local.tee $9
     (call $_malloc
      (i32.const 2097152)
     )
    )
    (i32.const 0)
    (i32.const 2097152)
   )
  )
  (local.set $12
   (i32.add
    (local.get $8)
    (i32.const 1)
   )
  )
  (i32.store8 offset=1
   (local.get $5)
   (i32.const 0)
  )
  (i32.store8
   (local.get $5)
   (i32.const 0)
  )
  (i32.store offset=4
   (local.get $5)
   (i32.const 0)
  )
  (call $_GifWriteCode
   (local.get $0)
   (local.get $5)
   (local.get $8)
   (local.tee $10
    (i32.add
     (local.get $4)
     (i32.const 1)
    )
   )
  )
  (if
   (local.get $3)
   (block
    (local.set $16
     (i32.eqz
      (local.get $2)
     )
    )
    (local.set $6
     (local.get $10)
    )
    (local.set $7
     (i32.const -1)
    )
    (local.set $4
     (local.get $12)
    )
    (loop $while-in
     (if
      (i32.eqz
       (local.get $16)
      )
      (block
       (local.set $17
        (i32.mul
         (local.get $2)
         (local.get $15)
        )
       )
       (local.set $11
        (local.get $7)
       )
       (local.set $13
        (i32.const 0)
       )
       (loop $while-in1
        (local.set $7
         (i32.load8_u
          (i32.add
           (local.get $1)
           (i32.or
            (i32.shl
             (i32.add
              (local.get $13)
              (local.get $17)
             )
             (i32.const 2)
            )
            (i32.const 3)
           )
          )
         )
        )
        (if
         (i32.ge_s
          (local.get $11)
          (i32.const 0)
         )
         (block $do-once
          (if
           (local.tee $19
            (i32.load16_s
             (local.tee $18
              (i32.add
               (i32.add
                (i32.shl
                 (local.get $11)
                 (i32.const 9)
                )
                (local.get $9)
               )
               (i32.shl
                (local.get $7)
                (i32.const 1)
               )
              )
             )
            )
           )
           (block
            (local.set $7
             (i32.and
              (local.get $19)
              (i32.const 65535)
             )
            )
            (br $do-once)
           )
          )
          (call $_GifWriteCode
           (local.get $0)
           (local.get $5)
           (local.get $11)
           (local.get $6)
          )
          (i32.store16
           (local.get $18)
           (local.tee $4
            (i32.add
             (local.get $4)
             (i32.const 1)
            )
           )
          )
          (local.set $6
           (i32.add
            (local.get $6)
            (i32.ge_u
             (local.get $4)
             (i32.shl
              (i32.const 1)
              (local.get $6)
             )
            )
           )
          )
          (if
           (i32.eq
            (local.get $4)
            (i32.const 4095)
           )
           (block
            (call $_GifWriteCode
             (local.get $0)
             (local.get $5)
             (local.get $8)
             (local.get $6)
            )
            (drop
             (call $_memset
              (local.get $9)
              (i32.const 0)
              (i32.const 2097152)
             )
            )
            (local.set $6
             (local.get $10)
            )
            (local.set $4
             (local.get $12)
            )
           )
          )
         )
        )
        (if
         (i32.ne
          (local.tee $13
           (i32.add
            (local.get $13)
            (i32.const 1)
           )
          )
          (local.get $2)
         )
         (block
          (local.set $11
           (local.get $7)
          )
          (br $while-in1)
         )
        )
       )
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $15
        (i32.add
         (local.get $15)
         (i32.const 1)
        )
       )
       (local.get $3)
      )
     )
    )
   )
   (block
    (local.set $6
     (local.get $10)
    )
    (local.set $7
     (i32.const -1)
    )
   )
  )
  (call $_GifWriteCode
   (local.get $0)
   (local.get $5)
   (local.get $7)
   (local.get $6)
  )
  (call $_GifWriteCode
   (local.get $0)
   (local.get $5)
   (local.get $8)
   (local.get $6)
  )
  (call $_GifWriteCode
   (local.get $0)
   (local.get $5)
   (local.get $12)
   (local.get $10)
  )
  (if
   (i32.load8_s
    (local.get $5)
   )
   (loop $while-in3
    (call $_GifWriteBit
     (local.get $5)
     (i32.const 0)
    )
    (br_if $while-in3
     (i32.load8_s
      (local.get $5)
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.load offset=4
     (local.get $5)
    )
   )
   (block
    (call $_fputc
     (i32.const 0)
     (local.get $0)
    )
    (call $_free
     (local.get $9)
    )
    (global.set $STACKTOP
     (local.get $14)
    )
    (return)
   )
  )
  (call $_GifWriteChunk
   (local.get $0)
   (local.get $5)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_free
   (local.get $9)
  )
  (global.set $STACKTOP
   (local.get $14)
  )
 )
 (func $_GifWritePalette (; 410 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (call $_fputc
   (i32.const 0)
   (local.get $1)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $1)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $1)
  )
  (if
   (i32.le_s
    (i32.shl
     (i32.const 1)
     (i32.load
      (local.get $0)
     )
    )
    (i32.const 1)
   )
   (return)
  )
  (local.set $2
   (i32.const 1)
  )
  (loop $while-in
   (local.set $3
    (i32.load8_u
     (i32.add
      (local.get $2)
      (i32.add
       (local.get $0)
       (i32.const 260)
      )
     )
    )
   )
   (local.set $4
    (i32.load8_u
     (i32.add
      (local.get $2)
      (i32.add
       (local.get $0)
       (i32.const 516)
      )
     )
    )
   )
   (call $_fputc
    (i32.load8_u
     (i32.add
      (local.get $2)
      (i32.add
       (local.get $0)
       (i32.const 4)
      )
     )
    )
    (local.get $1)
   )
   (call $_fputc
    (local.get $3)
    (local.get $1)
   )
   (call $_fputc
    (local.get $4)
    (local.get $1)
   )
   (br_if $while-in
    (i32.lt_s
     (local.tee $2
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (i32.shl
      (i32.const 1)
      (i32.load
       (local.get $0)
      )
     )
    )
   )
  )
 )
 (func $_GifWriteCode (; 411 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (if
   (i32.eqz
    (local.get $3)
   )
   (return)
  )
  (loop $while-in
   (call $_GifWriteBit
    (local.get $1)
    (local.get $2)
   )
   (if
    (i32.eq
     (i32.load offset=4
      (local.get $1)
     )
     (i32.const 255)
    )
    (call $_GifWriteChunk
     (local.get $0)
     (local.get $1)
    )
   )
   (local.set $2
    (i32.shr_u
     (local.get $2)
     (i32.const 1)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.get $3)
    )
   )
  )
 )
 (func $_GifWriteBit (; 412 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (i32.store8 offset=1
   (local.get $0)
   (local.tee $2
    (i32.and
     (i32.or
      (i32.load8_u offset=1
       (local.get $0)
      )
      (i32.shl
       (i32.and
        (local.get $1)
        (i32.const 1)
       )
       (i32.and
        (local.tee $1
         (i32.load8_s
          (local.get $0)
         )
        )
        (i32.const 255)
       )
      )
     )
     (i32.const 255)
    )
   )
  )
  (i32.store8
   (local.get $0)
   (local.tee $1
    (i32.shr_s
     (i32.shl
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
      (i32.const 24)
     )
     (i32.const 24)
    )
   )
  )
  (if
   (i32.le_s
    (i32.and
     (local.get $1)
     (i32.const 255)
    )
    (i32.const 7)
   )
   (return)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (local.tee $1
     (i32.load offset=4
      (local.get $0)
     )
    )
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.add
     (local.get $0)
     (i32.const 8)
    )
   )
   (local.get $2)
  )
  (i32.store8
   (local.get $0)
   (i32.const 0)
  )
  (i32.store8 offset=1
   (local.get $0)
   (i32.const 0)
  )
 )
 (func $_GifWriteChunk (; 413 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $_fputc
   (i32.load offset=4
    (local.get $1)
   )
   (local.get $0)
  )
  (drop
   (call $_fwrite
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
    (i32.const 1)
    (i32.load offset=4
     (local.get $1)
    )
    (local.get $0)
   )
  )
  (i32.store8
   (local.get $1)
   (i32.const 0)
  )
  (i32.store8 offset=1
   (local.get $1)
   (i32.const 0)
  )
  (i32.store offset=4
   (local.get $1)
   (i32.const 0)
  )
 )
 (func $_GifGetClosestPaletteColor (; 414 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.le_s
    (local.tee $8
     (i32.shl
      (i32.const 1)
      (i32.load
       (local.get $0)
      )
     )
    )
    (local.get $6)
   )
   (block
    (if
     (i32.eqz
      (local.tee $6
       (i32.sub
        (local.get $6)
        (local.get $8)
       )
      )
     )
     (block
      (global.set $STACKTOP
       (local.get $9)
      )
      (return)
     )
    )
    (if
     (i32.ge_s
      (local.tee $0
       (i32.add
        (i32.add
         (select
          (i32.sub
           (i32.const 0)
           (local.tee $1
            (i32.sub
             (local.get $1)
             (i32.load8_u
              (i32.add
               (local.get $6)
               (i32.add
                (local.get $0)
                (i32.const 4)
               )
              )
             )
            )
           )
          )
          (local.get $1)
          (i32.lt_s
           (local.get $1)
           (i32.const 0)
          )
         )
         (select
          (i32.sub
           (i32.const 0)
           (local.tee $1
            (i32.sub
             (local.get $2)
             (i32.load8_u
              (i32.add
               (local.get $6)
               (i32.add
                (local.get $0)
                (i32.const 260)
               )
              )
             )
            )
           )
          )
          (local.get $1)
          (i32.lt_s
           (local.get $1)
           (i32.const 0)
          )
         )
        )
        (select
         (i32.sub
          (i32.const 0)
          (local.tee $0
           (i32.sub
            (local.get $3)
            (i32.load8_u
             (i32.add
              (local.get $6)
              (i32.add
               (local.get $0)
               (i32.const 516)
              )
             )
            )
           )
          )
         )
         (local.get $0)
         (i32.lt_s
          (local.get $0)
          (i32.const 0)
         )
        )
       )
      )
      (i32.load
       (local.get $5)
      )
     )
     (block
      (global.set $STACKTOP
       (local.get $9)
      )
      (return)
     )
    )
    (i32.store
     (local.get $4)
     (local.get $6)
    )
    (i32.store
     (local.get $5)
     (local.get $0)
    )
    (global.set $STACKTOP
     (local.get $9)
    )
    (return)
   )
  )
  (i32.store
   (local.get $7)
   (local.get $1)
  )
  (i32.store offset=4
   (local.get $7)
   (local.get $2)
  )
  (i32.store offset=8
   (local.get $7)
   (local.get $3)
  )
  (local.set $8
   (i32.shl
    (local.get $6)
    (i32.const 1)
   )
  )
  (if
   (i32.lt_s
    (local.tee $7
     (i32.load
      (i32.add
       (i32.shl
        (i32.load8_u
         (i32.add
          (local.get $6)
          (i32.add
           (local.get $0)
           (i32.const 772)
          )
         )
        )
        (i32.const 2)
       )
       (local.get $7)
      )
     )
    )
    (local.tee $6
     (i32.load8_u
      (i32.add
       (local.get $6)
       (i32.add
        (local.get $0)
        (i32.const 1027)
       )
      )
     )
    )
   )
   (block
    (call $_GifGetClosestPaletteColor
     (local.get $0)
     (local.get $1)
     (local.get $2)
     (local.get $3)
     (local.get $4)
     (local.get $5)
     (local.get $8)
    )
    (if
     (i32.gt_s
      (i32.load
       (local.get $5)
      )
      (i32.sub
       (local.get $6)
       (local.get $7)
      )
     )
     (call $_GifGetClosestPaletteColor
      (local.get $0)
      (local.get $1)
      (local.get $2)
      (local.get $3)
      (local.get $4)
      (local.get $5)
      (i32.or
       (local.get $8)
       (i32.const 1)
      )
     )
    )
   )
   (block
    (call $_GifGetClosestPaletteColor
     (local.get $0)
     (local.get $1)
     (local.get $2)
     (local.get $3)
     (local.get $4)
     (local.get $5)
     (i32.or
      (local.get $8)
      (i32.const 1)
     )
    )
    (if
     (i32.gt_s
      (i32.load
       (local.get $5)
      )
      (i32.sub
       (local.get $7)
       (local.get $6)
      )
     )
     (call $_GifGetClosestPaletteColor
      (local.get $0)
      (local.get $1)
      (local.get $2)
      (local.get $3)
      (local.get $4)
      (local.get $5)
      (local.get $8)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $9)
  )
 )
 (func $_GifPickChangedPixels (; 415 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.le_s
    (local.get $2)
    (i32.const 0)
   )
   (return
    (i32.const 0)
   )
  )
  (local.set $3
   (local.get $0)
  )
  (local.set $0
   (i32.const 0)
  )
  (local.set $4
   (local.get $1)
  )
  (loop $while-in
   (block $__rjto$0
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.ne
       (local.tee $6
        (i32.load8_s
         (local.get $1)
        )
       )
       (i32.load8_s
        (local.get $3)
       )
      )
     )
     (br_if $__rjti$0
      (i32.ne
       (i32.load8_s offset=1
        (local.get $3)
       )
       (i32.load8_s offset=1
        (local.get $1)
       )
      )
     )
     (br_if $__rjti$0
      (i32.ne
       (i32.load8_s offset=2
        (local.get $3)
       )
       (i32.load8_s offset=2
        (local.get $1)
       )
      )
     )
     (br $__rjto$0)
    )
    (i32.store8
     (local.get $4)
     (local.get $6)
    )
    (i32.store8 offset=1
     (local.get $4)
     (i32.load8_s offset=1
      (local.get $1)
     )
    )
    (i32.store8 offset=2
     (local.get $4)
     (i32.load8_s offset=2
      (local.get $1)
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 1)
     )
    )
    (local.set $4
     (i32.add
      (local.get $4)
      (i32.const 4)
     )
    )
   )
   (local.set $3
    (i32.add
     (local.get $3)
     (i32.const 4)
    )
   )
   (local.set $1
    (i32.add
     (local.get $1)
     (i32.const 4)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (local.get $2)
    )
   )
  )
  (local.get $0)
 )
 (func $_GifSplitPalette (; 416 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i64)
  (local $14 i64)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i64)
  (local $20 i32)
  (local $21 i64)
  (local $22 i64)
  (if
   (i32.or
    (i32.eqz
     (local.get $1)
    )
    (i32.le_s
     (local.get $3)
     (local.get $2)
    )
   )
   (return)
  )
  (local.set $9
   (local.get $0)
  )
  (local.set $18
   (local.get $6)
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in
     (if
      (i32.ne
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
       (local.get $3)
      )
      (block
       (local.set $15
        (if (result i32)
         (i32.gt_s
          (local.get $1)
          (i32.const 0)
         )
         (block (result i32)
          (local.set $15
           (i32.const 0)
          )
          (local.set $16
           (i32.const 0)
          )
          (local.set $11
           (i32.const 0)
          )
          (local.set $0
           (i32.const 0)
          )
          (local.set $17
           (i32.const 255)
          )
          (local.set $12
           (i32.const 255)
          )
          (local.set $6
           (i32.const 255)
          )
          (loop $while-in1 (result i32)
           (local.set $0
            (select
             (local.tee $10
              (i32.load8_u
               (i32.add
                (local.get $9)
                (local.tee $20
                 (i32.shl
                  (local.get $15)
                  (i32.const 2)
                 )
                )
               )
              )
             )
             (local.get $0)
             (i32.lt_s
              (local.get $0)
              (local.get $10)
             )
            )
           )
           (local.set $6
            (select
             (local.get $10)
             (local.get $6)
             (i32.gt_s
              (local.get $6)
              (local.get $10)
             )
            )
           )
           (local.set $11
            (select
             (local.tee $10
              (i32.load8_u
               (i32.add
                (i32.or
                 (local.get $20)
                 (i32.const 1)
                )
                (local.get $9)
               )
              )
             )
             (local.get $11)
             (i32.lt_s
              (local.get $11)
              (local.get $10)
             )
            )
           )
           (local.set $12
            (select
             (local.get $10)
             (local.get $12)
             (i32.gt_s
              (local.get $12)
              (local.get $10)
             )
            )
           )
           (local.set $16
            (select
             (local.tee $10
              (i32.load8_u
               (i32.add
                (i32.or
                 (local.get $20)
                 (i32.const 2)
                )
                (local.get $9)
               )
              )
             )
             (local.get $16)
             (i32.lt_s
              (local.get $16)
              (local.get $10)
             )
            )
           )
           (local.set $17
            (select
             (local.get $10)
             (local.get $17)
             (i32.gt_s
              (local.get $17)
              (local.get $10)
             )
            )
           )
           (br_if $while-in1
            (i32.ne
             (local.get $1)
             (local.tee $15
              (i32.add
               (local.get $15)
               (i32.const 1)
              )
             )
            )
           )
           (local.get $6)
          )
         )
         (block (result i32)
          (local.set $16
           (i32.const 0)
          )
          (local.set $11
           (i32.const 0)
          )
          (local.set $0
           (i32.const 0)
          )
          (local.set $17
           (i32.const 255)
          )
          (local.set $12
           (i32.const 255)
          )
          (i32.const 255)
         )
        )
       )
       (local.set $6
        (i32.sub
         (local.get $1)
         (local.tee $10
          (i32.div_s
           (i32.mul
            (local.get $1)
            (i32.sub
             (local.get $4)
             (local.get $2)
            )
           )
           (i32.sub
            (local.get $3)
            (local.get $2)
           )
          )
         )
        )
       )
       (call $_GifPartitionByMedian
        (local.get $9)
        (i32.const 0)
        (local.get $1)
        (local.tee $0
         (select
          (i32.const 0)
          (select
           (i32.const 2)
           (i32.const 1)
           (i32.gt_s
            (local.tee $1
             (i32.sub
              (local.get $16)
              (local.get $17)
             )
            )
            (local.tee $11
             (i32.sub
              (local.get $11)
              (local.get $12)
             )
            )
           )
          )
          (i32.and
           (i32.gt_s
            (local.tee $0
             (i32.sub
              (local.get $0)
              (local.get $15)
             )
            )
            (local.get $1)
           )
           (i32.gt_s
            (local.get $0)
            (local.get $11)
           )
          )
         )
        )
        (local.get $10)
       )
       (i32.store8
        (i32.add
         (local.get $18)
         (i32.add
          (local.get $8)
          (i32.const 772)
         )
        )
        (local.get $0)
       )
       (i32.store8
        (i32.add
         (local.get $18)
         (i32.add
          (local.get $8)
          (i32.const 1027)
         )
        )
        (i32.load8_s
         (i32.add
          (i32.or
           (local.tee $1
            (i32.shl
             (local.get $10)
             (i32.const 2)
            )
           )
           (local.get $0)
          )
          (local.get $9)
         )
        )
       )
       (call $_GifSplitPalette
        (local.get $9)
        (local.get $10)
        (local.get $2)
        (local.get $4)
        (i32.sub
         (local.get $4)
         (local.get $5)
        )
        (local.tee $2
         (i32.div_s
          (local.get $5)
          (i32.const 2)
         )
        )
        (local.tee $12
         (i32.shl
          (local.get $18)
          (i32.const 1)
         )
        )
        (local.get $7)
        (local.get $8)
       )
       (br_if $__rjti$0
        (i32.or
         (i32.eqz
          (local.get $6)
         )
         (i32.ge_s
          (local.get $4)
          (local.get $3)
         )
        )
       )
       (local.set $11
        (i32.add
         (local.get $4)
         (local.get $5)
        )
       )
       (local.set $0
        (local.get $4)
       )
       (local.set $9
        (i32.add
         (local.get $1)
         (local.get $9)
        )
       )
       (local.set $1
        (local.get $6)
       )
       (local.set $5
        (local.get $2)
       )
       (local.set $4
        (local.get $11)
       )
       (local.set $18
        (i32.or
         (local.get $12)
         (i32.const 1)
        )
       )
       (local.set $2
        (local.get $0)
       )
       (br $while-in)
      )
     )
    )
    (br $__rjto$0)
   )
   (return)
  )
  (block $folding-inner0
   (if
    (local.get $7)
    (block
     (if
      (i32.eq
       (local.get $2)
       (i32.const 1)
      )
      (block
       (local.set $0
        (if (result i32)
         (i32.gt_s
          (local.get $1)
          (i32.const 0)
         )
         (block (result i32)
          (local.set $0
           (i32.const 255)
          )
          (local.set $3
           (i32.const 255)
          )
          (local.set $4
           (i32.const 0)
          )
          (local.set $5
           (i32.const 255)
          )
          (loop $while-in3
           (local.set $5
            (select
             (local.get $5)
             (local.tee $7
              (i32.load8_u
               (i32.add
                (local.get $9)
                (local.tee $6
                 (i32.shl
                  (local.get $4)
                  (i32.const 2)
                 )
                )
               )
              )
             )
             (i32.lt_u
              (local.get $5)
              (local.get $7)
             )
            )
           )
           (local.set $3
            (select
             (local.get $3)
             (local.tee $7
              (i32.load8_u
               (i32.add
                (i32.or
                 (local.get $6)
                 (i32.const 1)
                )
                (local.get $9)
               )
              )
             )
             (i32.lt_u
              (local.get $3)
              (local.get $7)
             )
            )
           )
           (local.set $0
            (select
             (local.get $0)
             (local.tee $6
              (i32.load8_u
               (i32.add
                (i32.or
                 (local.get $6)
                 (i32.const 2)
                )
                (local.get $9)
               )
              )
             )
             (i32.lt_u
              (local.get $0)
              (local.get $6)
             )
            )
           )
           (br_if $while-in3
            (i32.ne
             (local.get $1)
             (local.tee $4
              (i32.add
               (local.get $4)
               (i32.const 1)
              )
             )
            )
           )
          )
          (local.set $1
           (i32.and
            (local.get $3)
            (i32.const 255)
           )
          )
          (local.set $3
           (i32.and
            (local.get $5)
            (i32.const 255)
           )
          )
          (i32.and
           (local.get $0)
           (i32.const 255)
          )
         )
         (block (result i32)
          (local.set $1
           (i32.const -1)
          )
          (local.set $3
           (i32.const -1)
          )
          (i32.const -1)
         )
        )
       )
       (br $folding-inner0)
      )
     )
     (if
      (i32.eq
       (local.get $2)
       (i32.add
        (i32.shl
         (i32.const 1)
         (i32.load
          (local.get $8)
         )
        )
        (i32.const -1)
       )
      )
      (block
       (local.set $0
        (if (result i32)
         (i32.gt_s
          (local.get $1)
          (i32.const 0)
         )
         (block (result i32)
          (local.set $0
           (i32.const 0)
          )
          (local.set $3
           (i32.const 0)
          )
          (local.set $4
           (i32.const 0)
          )
          (local.set $5
           (i32.const 0)
          )
          (loop $while-in5
           (local.set $5
            (select
             (local.get $5)
             (local.tee $7
              (i32.load8_u
               (i32.add
                (local.get $9)
                (local.tee $6
                 (i32.shl
                  (local.get $4)
                  (i32.const 2)
                 )
                )
               )
              )
             )
             (i32.gt_u
              (local.get $5)
              (local.get $7)
             )
            )
           )
           (local.set $3
            (select
             (local.get $3)
             (local.tee $7
              (i32.load8_u
               (i32.add
                (i32.or
                 (local.get $6)
                 (i32.const 1)
                )
                (local.get $9)
               )
              )
             )
             (i32.gt_u
              (local.get $3)
              (local.get $7)
             )
            )
           )
           (local.set $0
            (select
             (local.get $0)
             (local.tee $6
              (i32.load8_u
               (i32.add
                (i32.or
                 (local.get $6)
                 (i32.const 2)
                )
                (local.get $9)
               )
              )
             )
             (i32.gt_u
              (local.get $0)
              (local.get $6)
             )
            )
           )
           (br_if $while-in5
            (i32.ne
             (local.get $1)
             (local.tee $4
              (i32.add
               (local.get $4)
               (i32.const 1)
              )
             )
            )
           )
          )
          (local.set $1
           (i32.and
            (local.get $3)
            (i32.const 255)
           )
          )
          (local.set $3
           (i32.and
            (local.get $5)
            (i32.const 255)
           )
          )
          (i32.and
           (local.get $0)
           (i32.const 255)
          )
         )
         (block (result i32)
          (local.set $1
           (i32.const 0)
          )
          (local.set $3
           (i32.const 0)
          )
          (i32.const 0)
         )
        )
       )
       (br $folding-inner0)
      )
     )
    )
   )
   (if
    (i32.gt_s
     (local.get $1)
     (i32.const 0)
    )
    (block
     (local.set $0
      (i32.const 0)
     )
     (loop $while-in7
      (local.set $19
       (i64.add
        (i64.extend_i32_u
         (i32.load8_u
          (i32.add
           (local.get $9)
           (local.tee $3
            (i32.shl
             (local.get $0)
             (i32.const 2)
            )
           )
          )
         )
        )
        (local.get $19)
       )
      )
      (local.set $13
       (i64.add
        (i64.extend_i32_u
         (i32.load8_u
          (i32.add
           (i32.or
            (local.get $3)
            (i32.const 1)
           )
           (local.get $9)
          )
         )
        )
        (local.get $13)
       )
      )
      (local.set $14
       (i64.add
        (local.get $14)
        (i64.extend_i32_u
         (i32.load8_u
          (i32.add
           (i32.or
            (local.get $3)
            (i32.const 2)
           )
           (local.get $9)
          )
         )
        )
       )
      )
      (br_if $while-in7
       (i32.ne
        (local.get $1)
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
       )
      )
     )
    )
   )
   (local.set $22
    (i64.div_u
     (i64.add
      (local.tee $21
       (i64.extend_i32_s
        (i32.div_s
         (local.get $1)
         (i32.const 2)
        )
       )
      )
      (local.get $13)
     )
     (local.tee $13
      (i64.extend_i32_s
       (local.get $1)
      )
     )
    )
   )
   (local.set $14
    (i64.div_u
     (i64.add
      (local.get $14)
      (local.get $21)
     )
     (local.get $13)
    )
   )
   (i64.store8
    (i32.add
     (local.get $2)
     (i32.add
      (local.get $8)
      (i32.const 4)
     )
    )
    (i64.div_u
     (i64.add
      (local.get $19)
      (local.get $21)
     )
     (local.get $13)
    )
   )
   (i64.store8
    (i32.add
     (local.get $2)
     (i32.add
      (local.get $8)
      (i32.const 260)
     )
    )
    (local.get $22)
   )
   (i64.store8
    (i32.add
     (local.get $2)
     (i32.add
      (local.get $8)
      (i32.const 516)
     )
    )
    (local.get $14)
   )
   (return)
  )
  (i32.store8
   (i32.add
    (local.get $2)
    (i32.add
     (local.get $8)
     (i32.const 4)
    )
   )
   (local.get $3)
  )
  (i32.store8
   (i32.add
    (local.get $2)
    (i32.add
     (local.get $8)
     (i32.const 260)
    )
   )
   (local.get $1)
  )
  (i32.store8
   (i32.add
    (local.get $2)
    (i32.add
     (local.get $8)
     (i32.const 516)
    )
   )
   (local.get $0)
  )
 )
 (func $_GifPartitionByMedian (; 417 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.le_s
    (local.tee $6
     (i32.add
      (local.get $2)
      (i32.const -1)
     )
    )
    (local.get $1)
   )
   (return)
  )
  (loop $while-in
   (if
    (i32.gt_s
     (local.tee $5
      (call $_GifPartition
       (local.get $0)
       (local.get $1)
       (local.get $2)
       (local.get $3)
       (i32.add
        (i32.div_s
         (i32.sub
          (local.get $2)
          (local.get $1)
         )
         (i32.const 2)
        )
        (local.get $1)
       )
      )
     )
     (local.get $4)
    )
    (call $_GifPartitionByMedian
     (local.get $0)
     (local.get $1)
     (local.get $5)
     (local.get $3)
     (local.get $4)
    )
   )
   (br_if $while-in
    (i32.and
     (i32.lt_s
      (local.get $5)
      (local.get $4)
     )
     (i32.gt_s
      (local.get $6)
      (local.tee $1
       (i32.add
        (local.get $5)
        (i32.const 1)
       )
      )
     )
    )
   )
  )
 )
 (func $_GifPartition (; 418 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $7
   (i32.load8_s
    (i32.add
     (local.get $0)
     (i32.add
      (local.get $3)
      (i32.shl
       (local.get $4)
       (i32.const 2)
      )
     )
    )
   )
  )
  (call $_GifSwapPixels
   (local.get $0)
   (local.get $4)
   (local.tee $5
    (i32.add
     (local.get $2)
     (i32.const -1)
    )
   )
  )
  (if
   (i32.le_s
    (local.get $5)
    (local.get $1)
   )
   (block
    (call $_GifSwapPixels
     (local.get $0)
     (local.get $1)
     (local.get $5)
    )
    (return
     (local.get $1)
    )
   )
  )
  (local.set $4
   (local.get $1)
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (i32.and
      (local.tee $6
       (i32.load8_s
        (i32.add
         (local.get $0)
         (i32.add
          (local.get $3)
          (i32.shl
           (local.get $4)
           (i32.const 2)
          )
         )
        )
       )
      )
      (i32.const 255)
     )
     (i32.and
      (local.get $7)
      (i32.const 255)
     )
    )
    (block
     (call $_GifSwapPixels
      (local.get $0)
      (local.get $4)
      (local.get $1)
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
    )
    (if
     (i32.eq
      (local.get $6)
      (local.get $7)
     )
     (block
      (if
       (local.get $2)
       (block
        (local.set $6
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (call $_GifSwapPixels
         (local.get $0)
         (local.get $4)
         (local.get $1)
        )
        (local.set $1
         (local.get $6)
        )
       )
      )
      (local.set $2
       (i32.xor
        (local.get $2)
        (i32.const 1)
       )
      )
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $5)
     (local.tee $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
    )
   )
  )
  (call $_GifSwapPixels
   (local.get $0)
   (local.get $1)
   (local.get $5)
  )
  (local.get $1)
 )
 (func $_GifSwapPixels (; 419 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $4
   (i32.load8_s
    (local.tee $3
     (i32.add
      (local.get $0)
      (local.tee $1
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
      )
     )
    )
   )
  )
  (local.set $6
   (i32.load8_s
    (local.tee $5
     (i32.add
      (local.get $0)
      (i32.or
       (local.get $1)
       (i32.const 1)
      )
     )
    )
   )
  )
  (local.set $8
   (i32.load8_s
    (local.tee $7
     (i32.add
      (local.get $0)
      (i32.or
       (local.get $1)
       (i32.const 2)
      )
     )
    )
   )
  )
  (local.set $9
   (i32.load8_s
    (i32.add
     (local.get $0)
     (i32.or
      (local.get $1)
      (i32.const 3)
     )
    )
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (local.tee $1
     (i32.shl
      (local.get $2)
      (i32.const 2)
     )
    )
   )
  )
  (local.set $11
   (i32.load8_s
    (local.tee $10
     (i32.add
      (local.get $0)
      (i32.or
       (local.get $1)
       (i32.const 1)
      )
     )
    )
   )
  )
  (local.set $13
   (i32.load8_s
    (local.tee $12
     (i32.add
      (local.get $0)
      (i32.or
       (local.get $1)
       (i32.const 2)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $3)
   (i32.load8_s
    (local.get $2)
   )
  )
  (i32.store8
   (local.get $5)
   (local.get $11)
  )
  (i32.store8
   (local.get $7)
   (local.get $13)
  )
  (i32.store8
   (local.get $2)
   (local.get $4)
  )
  (i32.store8
   (local.get $10)
   (local.get $6)
  )
  (i32.store8
   (local.get $12)
   (local.get $8)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.or
     (local.get $1)
     (i32.const 3)
    )
   )
   (local.get $9)
  )
 )
 (func $_GifEnd (; 420 ;) (; has Stack IR ;)
  (local $0 i32)
  (if
   (i32.eqz
    (local.tee $0
     (i32.load
      (i32.const 27940)
     )
    )
   )
   (return)
  )
  (call $_fputc
   (i32.const 59)
   (local.get $0)
  )
  (call $_fclose
   (i32.load
    (i32.const 27940)
   )
  )
  (call $_free
   (i32.load
    (i32.const 27668)
   )
  )
  (i32.store
   (i32.const 27940)
   (i32.const 0)
  )
  (i32.store
   (i32.const 27668)
   (i32.const 0)
  )
 )
 (func $_InitWindow (; 421 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (i32.const 12060)
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 12037)
   (local.get $1)
  )
  (i32.store
   (i32.const 27944)
   (i32.const 8964)
  )
  (if
   (i32.eqz
    (call $_InitGraphicsDevice)
   )
   (block
    (global.set $STACKTOP
     (local.get $0)
    )
    (return)
   )
  )
  (call $_srand
   (call $_time
    (i32.const 0)
   )
  )
  (f64.store
   (i32.const 27624)
   (call $_glfwGetTime)
  )
  (call $_LoadFontDefault)
  (drop
   (call $_emscripten_set_fullscreenchange_callback_on_thread
    (i32.const 0)
    (i32.const 0)
    (i32.const 1)
    (i32.const 3)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_keypress_callback_on_thread
    (i32.const 19768)
    (i32.const 0)
    (i32.const 1)
    (i32.const 4)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_click_callback_on_thread
    (i32.const 19768)
    (i32.const 0)
    (i32.const 1)
    (i32.const 5)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_touchstart_callback_on_thread
    (i32.const 19768)
    (i32.const 0)
    (i32.const 1)
    (i32.const 6)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_touchend_callback_on_thread
    (i32.const 19768)
    (i32.const 0)
    (i32.const 1)
    (i32.const 6)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_touchmove_callback_on_thread
    (i32.const 19768)
    (i32.const 0)
    (i32.const 1)
    (i32.const 6)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_touchcancel_callback_on_thread
    (i32.const 19768)
    (i32.const 0)
    (i32.const 1)
    (i32.const 6)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_gamepadconnected_callback_on_thread
    (i32.const 0)
    (i32.const 1)
    (i32.const 7)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_gamepaddisconnected_callback_on_thread
    (i32.const 0)
    (i32.const 1)
    (i32.const 7)
    (i32.const 2)
   )
  )
  (f32.store
   (i32.const 27932)
   (f32.mul
    (f32.convert_i32_s
     (i32.load
      (i32.const 27948)
     )
    )
    (f32.const 0.5)
   )
  )
  (f32.store
   (i32.const 27936)
   (f32.mul
    (f32.convert_i32_s
     (i32.load
      (i32.const 27952)
     )
    )
    (f32.const 0.5)
   )
  )
  (global.set $STACKTOP
   (local.get $0)
  )
 )
 (func $_InitGraphicsDevice (; 422 ;) (; has Stack IR ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 144)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 144)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 56)
   )
  )
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.const 40)
   )
  )
  (local.set $5
   (i32.add
    (local.get $0)
    (i32.const 32)
   )
  )
  (local.set $6
   (i32.add
    (local.get $0)
    (i32.const 24)
   )
  )
  (local.set $7
   (i32.add
    (local.get $0)
    (i32.const 16)
   )
  )
  (local.set $1
   (local.get $0)
  )
  (i32.store
   (i32.const 27948)
   (i32.const 800)
  )
  (i32.store
   (i32.const 27952)
   (i32.const 450)
  )
  (call $_MatrixIdentity
   (i32.add
    (local.get $0)
    (i32.const 72)
   )
  )
  (i64.store align=4
   (i32.const 27992)
   (i64.load offset=72 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 28000)
   (i64.load offset=80 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 28008)
   (i64.load offset=88 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 28016)
   (i64.load offset=96 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 28024)
   (i64.load offset=104 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 28032)
   (i64.load offset=112 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 28040)
   (i64.load offset=120 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 28048)
   (i64.load offset=128 align=4
    (local.get $0)
   )
  )
  (drop
   (call $_glfwSetErrorCallback
    (i32.const 1)
   )
  )
  (if
   (i32.eqz
    (call $_glfwInit)
   )
   (block
    (call $_TraceLog
     (i32.const 4)
     (i32.const 15544)
     (local.get $1)
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (i32.store
   (i32.const 28056)
   (i32.load
    (i32.const 27948)
   )
  )
  (i32.store
   (i32.const 28060)
   (i32.load
    (i32.const 27952)
   )
  )
  (call $_glfwDefaultWindowHints)
  (call $_glfwWindowHint
   (i32.const 131076)
   (i32.const 1)
  )
  (call $_glfwWindowHint
   (i32.const 131075)
   (i32.const 0)
  )
  (call $_glfwWindowHint
   (i32.const 131077)
   (i32.const 1)
  )
  (call $_glfwWindowHint
   (i32.const 131082)
   (i32.const 0)
  )
  (call $_glfwWindowHint
   (i32.const 139266)
   (i32.const 2)
  )
  (call $_glfwWindowHint
   (i32.const 139267)
   (i32.const 0)
  )
  (call $_glfwWindowHint
   (i32.const 139265)
   (i32.const 196610)
  )
  (call $_glfwWindowHint
   (i32.const 139275)
   (i32.const 221185)
  )
  (i32.store
   (i32.const 27928)
   (local.tee $1
    (call $_glfwCreateWindow
     (i32.load
      (i32.const 27948)
     )
     (i32.load
      (i32.const 27952)
     )
     (i32.load
      (i32.const 27944)
     )
     (i32.const 0)
     (i32.const 0)
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (if
     (local.get $1)
     (block
      (i32.store
       (i32.const 28064)
       (i32.load
        (i32.const 27948)
       )
      )
      (i32.store
       (i32.const 28068)
       (i32.load
        (i32.const 27952)
       )
      )
      (local.set $1
       (i32.load
        (i32.const 27928)
       )
      )
      (br $__rjti$0)
     )
    )
    (br $__rjto$0)
   )
   (if
    (local.get $1)
    (block
     (call $_TraceLog
      (i32.const 3)
      (i32.const 15641)
      (local.get $6)
     )
     (local.set $1
      (i32.load
       (i32.const 28068)
      )
     )
     (i32.store
      (local.get $5)
      (i32.load
       (i32.const 28064)
      )
     )
     (i32.store offset=4
      (local.get $5)
      (local.get $1)
     )
     (call $_TraceLog
      (i32.const 3)
      (i32.const 15681)
      (local.get $5)
     )
     (local.set $1
      (i32.load
       (i32.const 27952)
      )
     )
     (i32.store
      (local.get $4)
      (i32.load
       (i32.const 27948)
      )
     )
     (i32.store offset=4
      (local.get $4)
      (local.get $1)
     )
     (call $_TraceLog
      (i32.const 3)
      (i32.const 15702)
      (local.get $4)
     )
     (local.set $1
      (i32.load
       (i32.const 28076)
      )
     )
     (i32.store
      (local.get $2)
      (i32.load
       (i32.const 28072)
      )
     )
     (i32.store offset=4
      (local.get $2)
      (local.get $1)
     )
     (call $_TraceLog
      (i32.const 3)
      (i32.const 15723)
      (local.get $2)
     )
     (drop
      (call $_glfwSetWindowSizeCallback
       (i32.load
        (i32.const 27928)
       )
       (i32.const 1)
      )
     )
     (drop
      (call $_glfwSetCursorEnterCallback
       (i32.load
        (i32.const 27928)
       )
       (i32.const 2)
      )
     )
     (drop
      (call $_glfwSetKeyCallback
       (i32.load
        (i32.const 27928)
       )
       (i32.const 1)
      )
     )
     (drop
      (call $_glfwSetMouseButtonCallback
       (i32.load
        (i32.const 27928)
       )
       (i32.const 1)
      )
     )
     (drop
      (call $_glfwSetCursorPosCallback
       (i32.load
        (i32.const 27928)
       )
       (i32.const 1)
      )
     )
     (drop
      (call $_glfwSetCharCallback
       (i32.load
        (i32.const 27928)
       )
       (i32.const 3)
      )
     )
     (drop
      (call $_glfwSetScrollCallback
       (i32.load
        (i32.const 27928)
       )
       (i32.const 2)
      )
     )
     (drop
      (call $_glfwSetWindowIconifyCallback
       (i32.load
        (i32.const 27928)
       )
       (i32.const 4)
      )
     )
     (drop
      (call $_glfwSetDropCallback
       (i32.load
        (i32.const 27928)
       )
       (i32.const 2)
      )
     )
     (call $_glfwMakeContextCurrent
      (i32.load
       (i32.const 27928)
      )
     )
     (call $_rlglInit
      (i32.load
       (i32.const 27948)
      )
      (i32.load
       (i32.const 27952)
      )
     )
     (call $_SetupViewport
      (i32.load
       (i32.const 28064)
      )
      (i32.load
       (i32.const 28068)
      )
     )
     (i32.store8 offset=136
      (local.get $0)
      (i32.const -11)
     )
     (i32.store8 offset=137
      (local.get $0)
      (i32.const -11)
     )
     (i32.store8 offset=138
      (local.get $0)
      (i32.const -11)
     )
     (i32.store8 offset=139
      (local.get $0)
      (i32.const -1)
     )
     (i32.store align=1
      (local.get $2)
      (i32.load offset=136 align=1
       (local.get $0)
      )
     )
     (call $_ClearBackground
      (local.get $2)
     )
     (global.set $STACKTOP
      (local.get $3)
     )
     (return
      (i32.const 1)
     )
    )
   )
  )
  (call $_glfwTerminate)
  (call $_TraceLog
   (i32.const 4)
   (i32.const 15608)
   (local.get $7)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (i32.const 0)
 )
 (func $_LoadFontDefault (; 423 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 112)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 112)
   )
  )
  (local.set $2
   (i32.add
    (local.get $1)
    (i32.const 84)
   )
  )
  (local.set $8
   (i32.sub
    (local.get $1)
    (i32.const -64)
   )
  )
  (local.set $9
   (local.get $1)
  )
  (local.set $3
   (i32.add
    (local.get $1)
    (i32.const 4)
   )
  )
  (local.set $4
   (i32.add
    (local.get $1)
    (i32.const 44)
   )
  )
  (local.set $10
   (i32.add
    (local.get $1)
    (i32.const 24)
   )
  )
  (i32.store
   (i32.const 27960)
   (i32.const 224)
  )
  (drop
   (call $_memset
    (local.tee $7
     (call $_malloc
      (i32.const 65536)
     )
    )
    (i32.const 0)
    (i32.const 65536)
   )
  )
  (loop $while-in
   (local.set $12
    (i32.load
     (i32.add
      (i32.shl
       (local.get $5)
       (i32.const 2)
      )
      (i32.const 2000)
     )
    )
   )
   (local.set $1
    (i32.const 31)
   )
   (loop $while-in1
    (if
     (i32.and
      (local.get $12)
      (i32.shl
       (i32.const 1)
       (local.get $1)
      )
     )
     (i32.store align=1
      (i32.add
       (i32.shl
        (i32.add
         (local.get $0)
         (local.get $1)
        )
        (i32.const 2)
       )
       (local.get $7)
      )
      (i32.const -1)
     )
    )
    (local.set $6
     (i32.add
      (local.get $1)
      (i32.const -1)
     )
    )
    (if
     (local.get $1)
     (block
      (local.set $1
       (local.get $6)
      )
      (br $while-in1)
     )
    )
   )
   (local.set $5
    (select
     (i32.const 0)
     (i32.add
      (local.get $5)
      (i32.const 1)
     )
     (i32.gt_s
      (local.get $5)
      (i32.const 511)
     )
    )
   )
   (br_if $while-in
    (i32.lt_u
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 32)
      )
     )
     (i32.const 16384)
    )
   )
  )
  (call $_LoadImageEx
   (local.get $3)
   (local.get $7)
   (i32.const 128)
   (i32.const 128)
  )
  (call $_ImageFormat
   (local.get $3)
   (i32.const 2)
  )
  (call $_free
   (local.get $7)
  )
  (i64.store align=4
   (local.get $2)
   (i64.load align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load offset=8 align=4
    (local.get $3)
   )
  )
  (i32.store offset=16
   (local.get $2)
   (i32.load offset=16
    (local.get $3)
   )
  )
  (call $_LoadTextureFromImage
   (local.get $4)
   (local.get $2)
  )
  (i64.store align=4
   (i32.const 27964)
   (i64.load align=4
    (local.get $4)
   )
  )
  (i64.store align=4
   (i32.const 27972)
   (i64.load offset=8 align=4
    (local.get $4)
   )
  )
  (i32.store
   (i32.const 27980)
   (i32.load offset=16
    (local.get $4)
   )
  )
  (i32.store
   (i32.const 27988)
   (call $_malloc
    (i32.mul
     (local.tee $1
      (i32.load
       (i32.const 27960)
      )
     )
     (i32.const 36)
    )
   )
  )
  (i32.store
   (i32.const 27984)
   (call $_malloc
    (i32.shl
     (local.get $1)
     (i32.const 4)
    )
   )
  )
  (if
   (i32.le_s
    (i32.load
     (i32.const 27960)
    )
    (i32.const 0)
   )
   (block
    (i64.store align=4
     (local.get $2)
     (i64.load align=4
      (local.get $3)
     )
    )
    (i64.store offset=8 align=4
     (local.get $2)
     (i64.load offset=8 align=4
      (local.get $3)
     )
    )
    (i32.store offset=16
     (local.get $2)
     (i32.load offset=16
      (local.get $3)
     )
    )
    (call $_UnloadImage
     (local.get $2)
    )
    (i32.store
     (i32.const 27956)
     (i32.trunc_f32_s
      (f32.load offset=12
       (i32.load
        (i32.const 27984)
       )
      )
     )
    )
    (i32.store
     (local.get $9)
     (i32.load
      (i32.const 27964)
     )
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 12211)
     (local.get $9)
    )
    (global.set $STACKTOP
     (local.get $11)
    )
    (return)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (local.set $5
   (i32.const 1)
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in3
   (i32.store
    (i32.add
     (i32.load
      (i32.const 27988)
     )
     (i32.mul
      (local.get $0)
      (i32.const 36)
     )
    )
    (i32.add
     (local.get $0)
     (i32.const 32)
    )
   )
   (f32.store
    (i32.add
     (i32.load
      (i32.const 27984)
     )
     (i32.shl
      (local.get $0)
      (i32.const 4)
     )
    )
    (f32.convert_i32_s
     (local.get $5)
    )
   )
   (f32.store offset=4
    (i32.add
     (i32.load
      (i32.const 27984)
     )
     (i32.shl
      (local.get $0)
      (i32.const 4)
     )
    )
    (f32.convert_i32_s
     (i32.add
      (i32.mul
       (local.get $1)
       (i32.const 11)
      )
      (i32.const 1)
     )
    )
   )
   (f32.store offset=8
    (i32.add
     (i32.load
      (i32.const 27984)
     )
     (i32.shl
      (local.get $0)
      (i32.const 4)
     )
    )
    (f32.convert_i32_s
     (local.tee $4
      (i32.load
       (i32.add
        (i32.shl
         (local.get $0)
         (i32.const 2)
        )
        (i32.const 4048)
       )
      )
     )
    )
   )
   (f32.store offset=12
    (i32.add
     (i32.load
      (i32.const 27984)
     )
     (i32.shl
      (local.get $0)
      (i32.const 4)
     )
    )
    (f32.const 10)
   )
   (local.set $6
    (i32.add
     (local.get $1)
     (i32.const 1)
    )
   )
   (if
    (i32.ge_s
     (local.tee $5
      (i32.add
       (i32.trunc_f32_s
        (f32.add
         (f32.load offset=8
          (i32.add
           (local.tee $7
            (i32.load
             (i32.const 27984)
            )
           )
           (i32.shl
            (local.get $0)
            (i32.const 4)
           )
          )
         )
         (f32.const 1)
        )
       )
       (local.get $5)
      )
     )
     (i32.load
      (i32.const 27968)
     )
    )
    (block
     (f32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 4)
       )
       (local.get $7)
      )
      (f32.const 1)
     )
     (f32.store offset=4
      (i32.add
       (i32.load
        (i32.const 27984)
       )
       (i32.shl
        (local.get $0)
        (i32.const 4)
       )
      )
      (f32.convert_i32_s
       (i32.add
        (i32.mul
         (local.get $6)
         (i32.const 11)
        )
        (i32.const 1)
       )
      )
     )
     (local.set $1
      (local.get $6)
     )
     (local.set $5
      (i32.add
       (local.get $4)
       (i32.const 2)
      )
     )
    )
   )
   (i32.store offset=4
    (i32.add
     (i32.load
      (i32.const 27988)
     )
     (i32.mul
      (local.get $0)
      (i32.const 36)
     )
    )
    (i32.const 0)
   )
   (i32.store offset=8
    (i32.add
     (i32.load
      (i32.const 27988)
     )
     (i32.mul
      (local.get $0)
      (i32.const 36)
     )
    )
    (i32.const 0)
   )
   (i32.store offset=12
    (i32.add
     (i32.load
      (i32.const 27988)
     )
     (i32.mul
      (local.get $0)
      (i32.const 36)
     )
    )
    (i32.const 0)
   )
   (local.set $6
    (i32.add
     (i32.load
      (i32.const 27988)
     )
     (i32.mul
      (local.get $0)
      (i32.const 36)
     )
    )
   )
   (local.set $4
    (i32.add
     (i32.load
      (i32.const 27984)
     )
     (i32.shl
      (local.get $0)
      (i32.const 4)
     )
    )
   )
   (i64.store align=4
    (local.get $8)
    (i64.load align=4
     (local.get $3)
    )
   )
   (i64.store offset=8 align=4
    (local.get $8)
    (i64.load offset=8 align=4
     (local.get $3)
    )
   )
   (i32.store offset=16
    (local.get $8)
    (i32.load offset=16
     (local.get $3)
    )
   )
   (i64.store align=4
    (local.get $2)
    (i64.load align=4
     (local.get $4)
    )
   )
   (i64.store offset=8 align=4
    (local.get $2)
    (i64.load offset=8 align=4
     (local.get $4)
    )
   )
   (call $_ImageFromImage
    (local.get $10)
    (local.get $8)
    (local.get $2)
   )
   (i64.store offset=16 align=4
    (local.get $6)
    (i64.load align=4
     (local.get $10)
    )
   )
   (i64.store offset=24 align=4
    (local.get $6)
    (i64.load offset=8 align=4
     (local.get $10)
    )
   )
   (i32.store offset=32
    (local.get $6)
    (i32.load offset=16
     (local.get $10)
    )
   )
   (br_if $while-in3
    (i32.lt_s
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.load
      (i32.const 27960)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $2)
   (i64.load align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load offset=8 align=4
    (local.get $3)
   )
  )
  (i32.store offset=16
   (local.get $2)
   (i32.load offset=16
    (local.get $3)
   )
  )
  (call $_UnloadImage
   (local.get $2)
  )
  (i32.store
   (i32.const 27956)
   (i32.trunc_f32_s
    (f32.load offset=12
     (i32.load
      (i32.const 27984)
     )
    )
   )
  )
  (i32.store
   (local.get $9)
   (i32.load
    (i32.const 27964)
   )
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 12211)
   (local.get $9)
  )
  (global.set $STACKTOP
   (local.get $11)
  )
 )
 (func $_EmscriptenFullscreenChangeCallback (; 424 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.load offset=264
    (local.get $1)
   )
  )
  (local.set $5
   (i32.load offset=268
    (local.get $1)
   )
  )
  (local.set $6
   (i32.load offset=272
    (local.get $1)
   )
  )
  (local.set $7
   (i32.load offset=276
    (local.get $1)
   )
  )
  (if
   (i32.load
    (local.get $1)
   )
   (block
    (i32.store
     (local.get $0)
     (local.get $4)
    )
    (i32.store offset=4
     (local.get $0)
     (local.get $5)
    )
    (i32.store offset=8
     (local.get $0)
     (local.get $6)
    )
    (i32.store offset=12
     (local.get $0)
     (local.get $7)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 12075)
     (local.get $0)
    )
   )
   (block
    (i32.store
     (local.get $2)
     (local.get $4)
    )
    (i32.store offset=4
     (local.get $2)
     (local.get $5)
    )
    (i32.store offset=8
     (local.get $2)
     (local.get $6)
    )
    (i32.store offset=12
     (local.get $2)
     (local.get $7)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 12144)
     (local.get $2)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (i32.const 0)
 )
 (func $_EmscriptenKeyboardCallback (; 425 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i32.ne
    (local.get $0)
    (i32.const 1)
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (call $_strcmp
    (i32.add
     (local.get $1)
     (i32.const 32)
    )
    (i32.const 12068)
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $_emscripten_exit_pointerlock)
  )
  (i32.const 0)
 )
 (func $_EmscriptenMouseCallback (; 426 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 272)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 272)
   )
  )
  (if
   (i32.or
    (i32.ne
     (local.get $0)
     (i32.const 4)
    )
    (i32.const 1)
   )
   (block
    (global.set $STACKTOP
     (local.get $2)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (drop
   (call $_emscripten_get_pointerlock_status
    (local.get $1)
   )
  )
  (if
   (i32.load
    (local.get $1)
   )
   (block
    (drop
     (call $_emscripten_exit_pointerlock)
    )
    (drop
     (call $_emscripten_get_pointerlock_status
      (local.get $1)
     )
    )
   )
   (drop
    (call $_emscripten_request_pointerlock
     (i32.const 0)
     (i32.const 1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
  (i32.const 0)
 )
 (func $_EmscriptenTouchCallback (; 427 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 f32)
  (local $6 i32)
  (local $7 f32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 112)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 112)
   )
  )
  (local.set $3
   (i32.add
    (local.get $2)
    (i32.const 56)
   )
  )
  (block $__rjto$0
   (i32.store
    (local.get $2)
    (block $__rjti$0 (result i32)
     (block $switch-case1
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case $switch-case0 $switch-case1 $__rjto$0
         (i32.sub
          (local.get $0)
          (i32.const 22)
         )
        )
       )
       (br $__rjti$0
        (i32.const 1)
       )
      )
      (br $__rjti$0
       (i32.const 0)
      )
     )
     (i32.const 2)
    )
   )
  )
  (i32.store offset=4
   (local.get $2)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store offset=8
   (local.get $2)
   (i32.load offset=20
    (local.get $1)
   )
  )
  (i32.store offset=12
   (local.get $2)
   (i32.load offset=72
    (local.get $1)
   )
  )
  (local.set $4
   (f32.convert_i32_s
    (i32.load offset=60
     (local.get $1)
    )
   )
  )
  (f32.store offset=24
   (local.get $2)
   (f32.convert_i32_s
    (i32.load offset=56
     (local.get $1)
    )
   )
  )
  (f32.store offset=28
   (local.get $2)
   (local.get $4)
  )
  (local.set $5
   (f32.convert_i32_s
    (i32.load offset=112
     (local.get $1)
    )
   )
  )
  (f32.store offset=32
   (local.get $2)
   (f32.convert_i32_s
    (i32.load offset=108
     (local.get $1)
    )
   )
  )
  (f32.store offset=36
   (local.get $2)
   (local.get $5)
  )
  (f32.store offset=24
   (local.get $2)
   (f32.div
    (f32.load offset=24
     (local.get $2)
    )
    (local.tee $7
     (f32.convert_i32_s
      (i32.load
       (i32.const 27948)
      )
     )
    )
   )
  )
  (f32.store offset=28
   (local.get $2)
   (f32.div
    (local.get $4)
    (local.tee $4
     (f32.convert_i32_s
      (i32.load
       (i32.const 27952)
      )
     )
    )
   )
  )
  (f32.store offset=32
   (local.get $2)
   (f32.div
    (f32.load offset=32
     (local.get $2)
    )
    (local.get $7)
   )
  )
  (f32.store offset=36
   (local.get $2)
   (f32.div
    (local.get $5)
    (local.get $4)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.get $2)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $2)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $2)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $2)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $2)
   )
  )
  (call $_ProcessGestureEvent
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (i32.const 1)
 )
 (func $_EmscriptenGamepadCallback (; 428 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 1296)
    )
   )
   (if
    (i32.lt_s
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 1300)
      )
     )
     (i32.const 4)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (i32.const 0)
 )
 (func $_LoadImageEx (; 429 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $6
   (call $_malloc
    (local.tee $4
     (i32.mul
      (local.get $3)
      (i32.shl
       (local.get $2)
       (i32.const 2)
      )
     )
    )
   )
  )
  (if
   (i32.gt_s
    (local.get $4)
    (i32.const 0)
   )
   (block
    (local.set $7
     (i32.shr_u
      (i32.add
       (local.get $4)
       (i32.const -1)
      )
      (i32.const 2)
     )
    )
    (local.set $4
     (i32.const 0)
    )
    (loop $while-in
     (i32.store8
      (i32.add
       (local.get $5)
       (local.get $6)
      )
      (i32.load8_s
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
        (local.get $1)
       )
      )
     )
     (i32.store8
      (i32.add
       (i32.or
        (local.get $5)
        (i32.const 1)
       )
       (local.get $6)
      )
      (i32.load8_s offset=1
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
        (local.get $1)
       )
      )
     )
     (i32.store8
      (i32.add
       (i32.or
        (local.get $5)
        (i32.const 2)
       )
       (local.get $6)
      )
      (i32.load8_s offset=2
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
        (local.get $1)
       )
      )
     )
     (i32.store8
      (i32.add
       (i32.or
        (local.get $5)
        (i32.const 3)
       )
       (local.get $6)
      )
      (i32.load8_s offset=3
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
        (local.get $1)
       )
      )
     )
     (local.set $8
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 4)
      )
     )
     (if
      (i32.ne
       (local.get $4)
       (local.get $7)
      )
      (block
       (local.set $4
        (local.get $8)
       )
       (br $while-in)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $0)
   (local.get $6)
  )
  (i32.store offset=4
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=8
   (local.get $0)
   (local.get $3)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 1)
  )
  (i32.store offset=16
   (local.get $0)
   (i32.const 7)
  )
 )
 (func $_ImageFormat (; 430 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (block $folding-inner0
   (br_if $folding-inner0
    (i32.eqz
     (i32.load
      (local.get $0)
     )
    )
   )
   (br_if $folding-inner0
    (i32.eqz
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
   (br_if $folding-inner0
    (i32.eqz
     (i32.and
      (i32.ne
       (i32.load offset=8
        (local.get $0)
       )
       (i32.const 0)
      )
      (i32.ne
       (local.get $1)
       (i32.const 0)
      )
     )
    )
   )
   (br_if $folding-inner0
    (i32.eq
     (local.get $1)
     (local.tee $5
      (i32.load offset=16
       (local.get $0)
      )
     )
    )
   )
   (local.set $3
    (local.get $2)
   )
   (if
    (i32.eqz
     (i32.and
      (i32.lt_s
       (local.get $1)
       (i32.const 11)
      )
      (i32.lt_s
       (local.get $5)
       (i32.const 11)
      )
     )
    )
    (block
     (call $_TraceLog
      (i32.const 4)
      (i32.const 12585)
      (local.get $3)
     )
     (br $folding-inner0)
    )
   )
   (i64.store align=4
    (local.tee $2
     (i32.add
      (local.get $2)
      (i32.const 4)
     )
    )
    (i64.load align=4
     (local.get $0)
    )
   )
   (i64.store offset=8 align=4
    (local.get $2)
    (i64.load offset=8 align=4
     (local.get $0)
    )
   )
   (i32.store offset=16
    (local.get $2)
    (i32.load offset=16
     (local.get $0)
    )
   )
   (local.set $3
    (call $_GetImageDataNormalized
     (local.get $2)
    )
   )
   (call $_free
    (i32.load
     (local.get $0)
    )
   )
   (i32.store
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=16
    (local.get $0)
    (local.get $1)
   )
   (block $do-once
    (block $switch-case26
     (block $switch-case23
      (block $switch-case20
       (block $switch-case17
        (block $switch-case14
         (block $switch-case11
          (block $switch-case8
           (block $switch-case5
            (block $switch-case2
             (block $switch-case
              (br_table $switch-case $switch-case2 $switch-case5 $switch-case8 $switch-case11 $switch-case14 $switch-case17 $switch-case20 $switch-case23 $switch-case26 $do-once
               (i32.sub
                (local.get $1)
                (i32.const 1)
               )
              )
             )
             (i32.store
              (local.get $0)
              (call $_malloc
               (i32.mul
                (local.tee $1
                 (i32.load offset=4
                  (local.get $0)
                 )
                )
                (local.tee $2
                 (i32.load offset=8
                  (local.get $0)
                 )
                )
               )
              )
             )
             (if
              (i32.gt_s
               (i32.mul
                (local.get $1)
                (local.get $2)
               )
               (i32.const 0)
              )
              (block
               (local.set $1
                (i32.const 0)
               )
               (loop $while-in
                (i32.store8
                 (i32.add
                  (i32.load
                   (local.get $0)
                  )
                  (local.get $1)
                 )
                 (i32.trunc_f32_s
                  (f32.mul
                   (f32.add
                    (f32.add
                     (f32.mul
                      (f32.load
                       (i32.add
                        (i32.shl
                         (local.get $1)
                         (i32.const 4)
                        )
                        (local.get $3)
                       )
                      )
                      (f32.const 0.29899999499320984)
                     )
                     (f32.mul
                      (f32.load offset=4
                       (i32.add
                        (i32.shl
                         (local.get $1)
                         (i32.const 4)
                        )
                        (local.get $3)
                       )
                      )
                      (f32.const 0.5870000123977661)
                     )
                    )
                    (f32.mul
                     (f32.load offset=8
                      (i32.add
                       (i32.shl
                        (local.get $1)
                        (i32.const 4)
                       )
                       (local.get $3)
                      )
                     )
                     (f32.const 0.11400000005960464)
                    )
                   )
                   (f32.const 255)
                  )
                 )
                )
                (br_if $while-in
                 (i32.lt_s
                  (local.tee $1
                   (i32.add
                    (local.get $1)
                    (i32.const 1)
                   )
                  )
                  (i32.mul
                   (i32.load offset=4
                    (local.get $0)
                   )
                   (i32.load offset=8
                    (local.get $0)
                   )
                  )
                 )
                )
               )
              )
             )
             (br $do-once)
            )
            (i32.store
             (local.get $0)
             (call $_malloc
              (i32.mul
               (local.tee $1
                (i32.load offset=8
                 (local.get $0)
                )
               )
               (i32.shl
                (local.tee $2
                 (i32.load offset=4
                  (local.get $0)
                 )
                )
                (i32.const 1)
               )
              )
             )
            )
            (if
             (i32.gt_s
              (i32.mul
               (local.get $1)
               (i32.shl
                (local.get $2)
                (i32.const 1)
               )
              )
              (i32.const 0)
             )
             (block
              (local.set $2
               (i32.const 0)
              )
              (local.set $1
               (i32.const 0)
              )
              (loop $while-in1
               (i32.store8
                (i32.add
                 (i32.load
                  (local.get $0)
                 )
                 (local.get $2)
                )
                (i32.trunc_f32_s
                 (f32.mul
                  (f32.add
                   (f32.add
                    (f32.mul
                     (f32.load
                      (i32.add
                       (i32.shl
                        (local.get $1)
                        (i32.const 4)
                       )
                       (local.get $3)
                      )
                     )
                     (f32.const 0.29899999499320984)
                    )
                    (f32.mul
                     (f32.load offset=4
                      (i32.add
                       (i32.shl
                        (local.get $1)
                        (i32.const 4)
                       )
                       (local.get $3)
                      )
                     )
                     (f32.const 0.5870000123977661)
                    )
                   )
                   (f32.mul
                    (f32.load offset=8
                     (i32.add
                      (i32.shl
                       (local.get $1)
                       (i32.const 4)
                      )
                      (local.get $3)
                     )
                    )
                    (f32.const 0.11400000005960464)
                   )
                  )
                  (f32.const 255)
                 )
                )
               )
               (i32.store8
                (i32.add
                 (i32.load
                  (local.get $0)
                 )
                 (i32.or
                  (local.get $2)
                  (i32.const 1)
                 )
                )
                (i32.trunc_f32_s
                 (f32.mul
                  (f32.load offset=12
                   (i32.add
                    (i32.shl
                     (local.get $1)
                     (i32.const 4)
                    )
                    (local.get $3)
                   )
                  )
                  (f32.const 255)
                 )
                )
               )
               (local.set $1
                (i32.add
                 (local.get $1)
                 (i32.const 1)
                )
               )
               (br_if $while-in1
                (i32.lt_s
                 (local.tee $2
                  (i32.add
                   (local.get $2)
                   (i32.const 2)
                  )
                 )
                 (i32.mul
                  (i32.load offset=8
                   (local.get $0)
                  )
                  (i32.shl
                   (i32.load offset=4
                    (local.get $0)
                   )
                   (i32.const 1)
                  )
                 )
                )
               )
              )
             )
            )
            (br $do-once)
           )
           (i32.store
            (local.get $0)
            (call $_malloc
             (i32.mul
              (local.tee $1
               (i32.load offset=8
                (local.get $0)
               )
              )
              (i32.shl
               (local.tee $2
                (i32.load offset=4
                 (local.get $0)
                )
               )
               (i32.const 1)
              )
             )
            )
           )
           (if
            (i32.gt_s
             (i32.mul
              (local.get $1)
              (local.get $2)
             )
             (i32.const 0)
            )
            (block
             (local.set $1
              (i32.const 0)
             )
             (loop $while-in4
              (local.set $2
               (i32.and
                (i32.trunc_f32_s
                 (f32.demote_f64
                  (call $_llvm_round_f32
                   (f64.promote_f32
                    (f32.mul
                     (f32.load
                      (i32.add
                       (i32.shl
                        (local.get $1)
                        (i32.const 4)
                       )
                       (local.get $3)
                      )
                     )
                     (f32.const 31)
                    )
                   )
                  )
                 )
                )
                (i32.const 255)
               )
              )
              (local.set $5
               (i32.and
                (i32.trunc_f32_s
                 (f32.demote_f64
                  (call $_llvm_round_f32
                   (f64.promote_f32
                    (f32.mul
                     (f32.load offset=4
                      (i32.add
                       (i32.shl
                        (local.get $1)
                        (i32.const 4)
                       )
                       (local.get $3)
                      )
                     )
                     (f32.const 63)
                    )
                   )
                  )
                 )
                )
                (i32.const 255)
               )
              )
              (local.set $6
               (i32.and
                (i32.trunc_f32_s
                 (f32.demote_f64
                  (call $_llvm_round_f32
                   (f64.promote_f32
                    (f32.mul
                     (f32.load offset=8
                      (i32.add
                       (i32.shl
                        (local.get $1)
                        (i32.const 4)
                       )
                       (local.get $3)
                      )
                     )
                     (f32.const 31)
                    )
                   )
                  )
                 )
                )
                (i32.const 255)
               )
              )
              (i32.store16
               (i32.add
                (i32.load
                 (local.get $0)
                )
                (i32.shl
                 (local.get $1)
                 (i32.const 1)
                )
               )
               (i32.or
                (local.get $6)
                (i32.or
                 (i32.shl
                  (local.get $2)
                  (i32.const 11)
                 )
                 (i32.shl
                  (local.get $5)
                  (i32.const 5)
                 )
                )
               )
              )
              (br_if $while-in4
               (i32.lt_s
                (local.tee $1
                 (i32.add
                  (local.get $1)
                  (i32.const 1)
                 )
                )
                (i32.mul
                 (i32.load offset=4
                  (local.get $0)
                 )
                 (i32.load offset=8
                  (local.get $0)
                 )
                )
               )
              )
             )
            )
           )
           (br $do-once)
          )
          (i32.store
           (local.get $0)
           (call $_malloc
            (i32.mul
             (local.tee $1
              (i32.load offset=8
               (local.get $0)
              )
             )
             (i32.mul
              (local.tee $2
               (i32.load offset=4
                (local.get $0)
               )
              )
              (i32.const 3)
             )
            )
           )
          )
          (if
           (i32.gt_s
            (i32.mul
             (local.get $1)
             (i32.mul
              (local.get $2)
              (i32.const 3)
             )
            )
            (i32.const 0)
           )
           (block
            (local.set $1
             (i32.const 0)
            )
            (local.set $2
             (i32.const 0)
            )
            (loop $while-in7
             (i32.store8
              (i32.add
               (i32.load
                (local.get $0)
               )
               (local.get $1)
              )
              (i32.trunc_f32_s
               (f32.mul
                (f32.load
                 (i32.add
                  (i32.shl
                   (local.get $2)
                   (i32.const 4)
                  )
                  (local.get $3)
                 )
                )
                (f32.const 255)
               )
              )
             )
             (i32.store8
              (i32.add
               (i32.load
                (local.get $0)
               )
               (i32.add
                (local.get $1)
                (i32.const 1)
               )
              )
              (i32.trunc_f32_s
               (f32.mul
                (f32.load offset=4
                 (i32.add
                  (i32.shl
                   (local.get $2)
                   (i32.const 4)
                  )
                  (local.get $3)
                 )
                )
                (f32.const 255)
               )
              )
             )
             (i32.store8
              (i32.add
               (i32.load
                (local.get $0)
               )
               (i32.add
                (local.get $1)
                (i32.const 2)
               )
              )
              (i32.trunc_f32_s
               (f32.mul
                (f32.load offset=8
                 (i32.add
                  (i32.shl
                   (local.get $2)
                   (i32.const 4)
                  )
                  (local.get $3)
                 )
                )
                (f32.const 255)
               )
              )
             )
             (local.set $2
              (i32.add
               (local.get $2)
               (i32.const 1)
              )
             )
             (br_if $while-in7
              (i32.lt_s
               (local.tee $1
                (i32.add
                 (local.get $1)
                 (i32.const 3)
                )
               )
               (i32.mul
                (i32.load offset=8
                 (local.get $0)
                )
                (i32.mul
                 (i32.load offset=4
                  (local.get $0)
                 )
                 (i32.const 3)
                )
               )
              )
             )
            )
           )
          )
          (br $do-once)
         )
         (i32.store
          (local.get $0)
          (call $_malloc
           (i32.mul
            (local.tee $1
             (i32.load offset=8
              (local.get $0)
             )
            )
            (i32.shl
             (local.tee $2
              (i32.load offset=4
               (local.get $0)
              )
             )
             (i32.const 1)
            )
           )
          )
         )
         (if
          (i32.gt_s
           (i32.mul
            (local.get $1)
            (local.get $2)
           )
           (i32.const 0)
          )
          (block
           (local.set $1
            (i32.const 0)
           )
           (loop $while-in10
            (local.set $2
             (i32.and
              (i32.trunc_f32_s
               (f32.demote_f64
                (call $_llvm_round_f32
                 (f64.promote_f32
                  (f32.mul
                   (f32.load
                    (i32.add
                     (i32.shl
                      (local.get $1)
                      (i32.const 4)
                     )
                     (local.get $3)
                    )
                   )
                   (f32.const 31)
                  )
                 )
                )
               )
              )
              (i32.const 255)
             )
            )
            (local.set $5
             (i32.and
              (i32.trunc_f32_s
               (f32.demote_f64
                (call $_llvm_round_f32
                 (f64.promote_f32
                  (f32.mul
                   (f32.load offset=4
                    (i32.add
                     (i32.shl
                      (local.get $1)
                      (i32.const 4)
                     )
                     (local.get $3)
                    )
                   )
                   (f32.const 31)
                  )
                 )
                )
               )
              )
              (i32.const 255)
             )
            )
            (local.set $6
             (i32.and
              (i32.trunc_f32_s
               (f32.demote_f64
                (call $_llvm_round_f32
                 (f64.promote_f32
                  (f32.mul
                   (f32.load offset=8
                    (i32.add
                     (i32.shl
                      (local.get $1)
                      (i32.const 4)
                     )
                     (local.get $3)
                    )
                   )
                   (f32.const 31)
                  )
                 )
                )
               )
              )
              (i32.const 255)
             )
            )
            (i32.store16
             (i32.add
              (i32.load
               (local.get $0)
              )
              (i32.shl
               (local.get $1)
               (i32.const 1)
              )
             )
             (i32.or
              (i32.or
               (i32.or
                (i32.shl
                 (local.get $2)
                 (i32.const 11)
                )
                (f32.gt
                 (f32.load offset=12
                  (i32.add
                   (i32.shl
                    (local.get $1)
                    (i32.const 4)
                   )
                   (local.get $3)
                  )
                 )
                 (f32.const 0.19607843458652496)
                )
               )
               (i32.shl
                (local.get $5)
                (i32.const 6)
               )
              )
              (i32.shl
               (local.get $6)
               (i32.const 1)
              )
             )
            )
            (br_if $while-in10
             (i32.lt_s
              (local.tee $1
               (i32.add
                (local.get $1)
                (i32.const 1)
               )
              )
              (i32.mul
               (i32.load offset=4
                (local.get $0)
               )
               (i32.load offset=8
                (local.get $0)
               )
              )
             )
            )
           )
          )
         )
         (br $do-once)
        )
        (i32.store
         (local.get $0)
         (call $_malloc
          (i32.mul
           (local.tee $1
            (i32.load offset=8
             (local.get $0)
            )
           )
           (i32.shl
            (local.tee $2
             (i32.load offset=4
              (local.get $0)
             )
            )
            (i32.const 1)
           )
          )
         )
        )
        (if
         (i32.gt_s
          (i32.mul
           (local.get $1)
           (local.get $2)
          )
          (i32.const 0)
         )
         (block
          (local.set $1
           (i32.const 0)
          )
          (loop $while-in13
           (local.set $2
            (i32.and
             (i32.trunc_f32_s
              (f32.demote_f64
               (call $_llvm_round_f32
                (f64.promote_f32
                 (f32.mul
                  (f32.load
                   (i32.add
                    (i32.shl
                     (local.get $1)
                     (i32.const 4)
                    )
                    (local.get $3)
                   )
                  )
                  (f32.const 15)
                 )
                )
               )
              )
             )
             (i32.const 255)
            )
           )
           (local.set $5
            (i32.and
             (i32.trunc_f32_s
              (f32.demote_f64
               (call $_llvm_round_f32
                (f64.promote_f32
                 (f32.mul
                  (f32.load offset=4
                   (i32.add
                    (i32.shl
                     (local.get $1)
                     (i32.const 4)
                    )
                    (local.get $3)
                   )
                  )
                  (f32.const 15)
                 )
                )
               )
              )
             )
             (i32.const 255)
            )
           )
           (local.set $6
            (i32.and
             (i32.trunc_f32_s
              (f32.demote_f64
               (call $_llvm_round_f32
                (f64.promote_f32
                 (f32.mul
                  (f32.load offset=8
                   (i32.add
                    (i32.shl
                     (local.get $1)
                     (i32.const 4)
                    )
                    (local.get $3)
                   )
                  )
                  (f32.const 15)
                 )
                )
               )
              )
             )
             (i32.const 255)
            )
           )
           (local.set $7
            (i32.and
             (i32.trunc_f32_s
              (f32.demote_f64
               (call $_llvm_round_f32
                (f64.promote_f32
                 (f32.mul
                  (f32.load offset=12
                   (i32.add
                    (i32.shl
                     (local.get $1)
                     (i32.const 4)
                    )
                    (local.get $3)
                   )
                  )
                  (f32.const 15)
                 )
                )
               )
              )
             )
             (i32.const 255)
            )
           )
           (i32.store16
            (i32.add
             (i32.load
              (local.get $0)
             )
             (i32.shl
              (local.get $1)
              (i32.const 1)
             )
            )
            (i32.or
             (local.get $7)
             (i32.or
              (i32.or
               (i32.shl
                (local.get $2)
                (i32.const 12)
               )
               (i32.shl
                (local.get $5)
                (i32.const 8)
               )
              )
              (i32.shl
               (local.get $6)
               (i32.const 4)
              )
             )
            )
           )
           (br_if $while-in13
            (i32.lt_s
             (local.tee $1
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (i32.mul
              (i32.load offset=4
               (local.get $0)
              )
              (i32.load offset=8
               (local.get $0)
              )
             )
            )
           )
          )
         )
        )
        (br $do-once)
       )
       (i32.store
        (local.get $0)
        (call $_malloc
         (i32.mul
          (local.tee $1
           (i32.load offset=8
            (local.get $0)
           )
          )
          (i32.shl
           (local.tee $2
            (i32.load offset=4
             (local.get $0)
            )
           )
           (i32.const 2)
          )
         )
        )
       )
       (if
        (i32.gt_s
         (i32.mul
          (local.get $1)
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
         )
         (i32.const 0)
        )
        (block
         (local.set $1
          (i32.const 0)
         )
         (local.set $2
          (i32.const 0)
         )
         (loop $while-in16
          (i32.store8
           (i32.add
            (i32.load
             (local.get $0)
            )
            (local.get $1)
           )
           (i32.trunc_f32_s
            (f32.mul
             (f32.load
              (i32.add
               (i32.shl
                (local.get $2)
                (i32.const 4)
               )
               (local.get $3)
              )
             )
             (f32.const 255)
            )
           )
          )
          (i32.store8
           (i32.add
            (i32.load
             (local.get $0)
            )
            (i32.or
             (local.get $1)
             (i32.const 1)
            )
           )
           (i32.trunc_f32_s
            (f32.mul
             (f32.load offset=4
              (i32.add
               (i32.shl
                (local.get $2)
                (i32.const 4)
               )
               (local.get $3)
              )
             )
             (f32.const 255)
            )
           )
          )
          (i32.store8
           (i32.add
            (i32.load
             (local.get $0)
            )
            (i32.or
             (local.get $1)
             (i32.const 2)
            )
           )
           (i32.trunc_f32_s
            (f32.mul
             (f32.load offset=8
              (i32.add
               (i32.shl
                (local.get $2)
                (i32.const 4)
               )
               (local.get $3)
              )
             )
             (f32.const 255)
            )
           )
          )
          (i32.store8
           (i32.add
            (i32.load
             (local.get $0)
            )
            (i32.or
             (local.get $1)
             (i32.const 3)
            )
           )
           (i32.trunc_f32_s
            (f32.mul
             (f32.load offset=12
              (i32.add
               (i32.shl
                (local.get $2)
                (i32.const 4)
               )
               (local.get $3)
              )
             )
             (f32.const 255)
            )
           )
          )
          (local.set $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (br_if $while-in16
           (i32.lt_s
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const 4)
             )
            )
            (i32.mul
             (i32.load offset=8
              (local.get $0)
             )
             (i32.shl
              (i32.load offset=4
               (local.get $0)
              )
              (i32.const 2)
             )
            )
           )
          )
         )
        )
       )
       (br $do-once)
      )
      (i32.store
       (local.get $0)
       (call $_malloc
        (i32.mul
         (local.tee $1
          (i32.load offset=8
           (local.get $0)
          )
         )
         (i32.shl
          (local.tee $2
           (i32.load offset=4
            (local.get $0)
           )
          )
          (i32.const 2)
         )
        )
       )
      )
      (if
       (i32.gt_s
        (i32.mul
         (local.get $1)
         (local.get $2)
        )
        (i32.const 0)
       )
       (block
        (local.set $1
         (i32.const 0)
        )
        (loop $while-in19
         (f32.store
          (i32.add
           (i32.load
            (local.get $0)
           )
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
          )
          (f32.add
           (f32.add
            (f32.mul
             (f32.load
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $3)
              )
             )
             (f32.const 0.29899999499320984)
            )
            (f32.mul
             (f32.load offset=4
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $3)
              )
             )
             (f32.const 0.5870000123977661)
            )
           )
           (f32.mul
            (f32.load offset=8
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 4)
              )
              (local.get $3)
             )
            )
            (f32.const 0.11400000005960464)
           )
          )
         )
         (br_if $while-in19
          (i32.lt_s
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (i32.mul
            (i32.load offset=4
             (local.get $0)
            )
            (i32.load offset=8
             (local.get $0)
            )
           )
          )
         )
        )
       )
      )
      (br $do-once)
     )
     (i32.store
      (local.get $0)
      (call $_malloc
       (i32.mul
        (local.tee $1
         (i32.load offset=8
          (local.get $0)
         )
        )
        (i32.mul
         (local.tee $2
          (i32.load offset=4
           (local.get $0)
          )
         )
         (i32.const 12)
        )
       )
      )
     )
     (if
      (i32.gt_s
       (i32.mul
        (local.get $1)
        (i32.mul
         (local.get $2)
         (i32.const 3)
        )
       )
       (i32.const 0)
      )
      (block
       (local.set $1
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (loop $while-in22
        (i32.store
         (i32.add
          (i32.load
           (local.get $0)
          )
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (local.get $2)
            (i32.const 4)
           )
           (local.get $3)
          )
         )
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $0)
          )
          (i32.shl
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
           (i32.const 2)
          )
         )
         (i32.load offset=4
          (i32.add
           (i32.shl
            (local.get $2)
            (i32.const 4)
           )
           (local.get $3)
          )
         )
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $0)
          )
          (i32.shl
           (i32.add
            (local.get $1)
            (i32.const 2)
           )
           (i32.const 2)
          )
         )
         (i32.load offset=8
          (i32.add
           (i32.shl
            (local.get $2)
            (i32.const 4)
           )
           (local.get $3)
          )
         )
        )
        (local.set $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (br_if $while-in22
         (i32.lt_s
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 3)
           )
          )
          (i32.mul
           (i32.load offset=8
            (local.get $0)
           )
           (i32.mul
            (i32.load offset=4
             (local.get $0)
            )
            (i32.const 3)
           )
          )
         )
        )
       )
      )
     )
     (br $do-once)
    )
    (i32.store
     (local.get $0)
     (call $_malloc
      (i32.mul
       (local.tee $1
        (i32.load offset=8
         (local.get $0)
        )
       )
       (i32.shl
        (local.tee $2
         (i32.load offset=4
          (local.get $0)
         )
        )
        (i32.const 4)
       )
      )
     )
    )
    (if
     (i32.gt_s
      (i32.mul
       (local.get $1)
       (i32.shl
        (local.get $2)
        (i32.const 2)
       )
      )
      (i32.const 0)
     )
     (block
      (local.set $1
       (i32.const 0)
      )
      (local.set $2
       (i32.const 0)
      )
      (loop $while-in25
       (i32.store
        (i32.add
         (i32.load
          (local.get $0)
         )
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
        )
        (i32.load
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 4)
          )
          (local.get $3)
         )
        )
       )
       (i32.store
        (i32.add
         (i32.load
          (local.get $0)
         )
         (i32.shl
          (i32.or
           (local.get $1)
           (i32.const 1)
          )
          (i32.const 2)
         )
        )
        (i32.load offset=4
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 4)
          )
          (local.get $3)
         )
        )
       )
       (i32.store
        (i32.add
         (i32.load
          (local.get $0)
         )
         (i32.shl
          (i32.or
           (local.get $1)
           (i32.const 2)
          )
          (i32.const 2)
         )
        )
        (i32.load offset=8
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 4)
          )
          (local.get $3)
         )
        )
       )
       (i32.store
        (i32.add
         (i32.load
          (local.get $0)
         )
         (i32.shl
          (i32.or
           (local.get $1)
           (i32.const 3)
          )
          (i32.const 2)
         )
        )
        (i32.load offset=12
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 4)
          )
          (local.get $3)
         )
        )
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (br_if $while-in25
        (i32.lt_s
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
         )
         (i32.mul
          (i32.load offset=8
           (local.get $0)
          )
          (i32.shl
           (i32.load offset=4
            (local.get $0)
           )
           (i32.const 2)
          )
         )
        )
       )
      )
     )
    )
   )
   (call $_free
    (local.get $3)
   )
   (br_if $folding-inner0
    (i32.le_s
     (i32.load offset=12
      (local.get $0)
     )
     (i32.const 1)
    )
   )
   (i32.store offset=12
    (local.get $0)
    (i32.const 1)
   )
   (br_if $folding-inner0
    (i32.eqz
     (i32.load
      (local.get $0)
     )
    )
   )
   (call $_ImageMipmaps
    (local.get $0)
   )
   (global.set $STACKTOP
    (local.get $4)
   )
   (return)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_LoadTextureFromImage (; 431 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $2
   (block $__rjto$0 (result i32)
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.eqz
       (local.tee $3
        (i32.load
         (local.get $1)
        )
       )
      )
     )
     (br_if $__rjti$0
      (i32.eqz
       (local.tee $4
        (i32.load offset=4
         (local.get $1)
        )
       )
      )
     )
     (br_if $__rjti$0
      (i32.eqz
       (local.tee $5
        (i32.load offset=8
         (local.get $1)
        )
       )
      )
     )
     (br $__rjto$0
      (call $_rlLoadTexture
       (local.get $3)
       (local.get $4)
       (local.get $5)
       (i32.load offset=16
        (local.get $1)
       )
       (i32.load offset=12
        (local.get $1)
       )
      )
     )
    )
    (call $_TraceLog
     (i32.const 4)
     (i32.const 12546)
     (local.get $2)
    )
    (i32.const 0)
   )
  )
  (local.set $3
   (i32.load offset=4
    (local.get $1)
   )
  )
  (local.set $4
   (i32.load offset=8
    (local.get $1)
   )
  )
  (local.set $5
   (i32.load offset=12
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load offset=16
    (local.get $1)
   )
  )
  (i32.store
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=4
   (local.get $0)
   (local.get $3)
  )
  (i32.store offset=8
   (local.get $0)
   (local.get $4)
  )
  (i32.store offset=12
   (local.get $0)
   (local.get $5)
  )
  (i32.store offset=16
   (local.get $0)
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $_UnloadImage (; 432 ;) (; has Stack IR ;) (param $0 i32)
  (call $_free
   (i32.load
    (local.get $0)
   )
  )
 )
 (func $_ImageFromImage (; 433 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 48)
   )
  )
  (i64.store align=4
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 20)
    )
   )
   (i64.load align=4
    (local.get $1)
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $1)
   )
  )
  (i32.store offset=16
   (local.get $4)
   (i32.load offset=16
    (local.get $1)
   )
  )
  (call $_ImageCopy
   (local.get $3)
   (local.get $4)
  )
  (i64.store align=4
   (local.get $4)
   (i64.load align=4
    (local.get $2)
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (call $_ImageCrop
   (local.get $3)
   (local.get $4)
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load offset=8 align=4
    (local.get $3)
   )
  )
  (i32.store offset=16
   (local.get $0)
   (i32.load offset=16
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_ImageCopy (; 434 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $5
   (i32.load offset=4
    (local.get $1)
   )
  )
  (local.set $6
   (i32.load offset=8
    (local.get $1)
   )
  )
  (if
   (i32.gt_s
    (local.tee $2
     (i32.load offset=12
      (local.get $1)
     )
    )
    (i32.const 0)
   )
   (block
    (local.set $9
     (i32.load offset=16
      (local.get $1)
     )
    )
    (local.set $7
     (i32.load offset=12
      (local.get $1)
     )
    )
    (local.set $2
     (local.get $6)
    )
    (local.set $3
     (local.get $5)
    )
    (local.set $2
     (loop $while-in (result i32)
      (local.set $4
       (i32.add
        (call $_GetPixelDataSize
         (local.get $3)
         (local.get $2)
         (local.get $9)
        )
        (local.get $4)
       )
      )
      (local.set $3
       (select
        (i32.const 1)
        (i32.div_s
         (local.get $3)
         (i32.const 2)
        )
        (i32.lt_s
         (local.get $3)
         (i32.const 2)
        )
       )
      )
      (local.set $2
       (select
        (i32.const 1)
        (i32.div_s
         (local.get $2)
         (i32.const 2)
        )
        (i32.lt_s
         (local.get $2)
         (i32.const 2)
        )
       )
      )
      (br_if $while-in
       (i32.lt_s
        (local.tee $8
         (i32.add
          (local.get $8)
          (i32.const 1)
         )
        )
        (local.get $7)
       )
      )
      (local.get $7)
     )
    )
   )
  )
  (local.set $1
   (if (result i32)
    (local.tee $3
     (call $_malloc
      (local.get $4)
     )
    )
    (block (result i32)
     (drop
      (call $_memcpy
       (local.get $3)
       (i32.load
        (local.get $1)
       )
       (local.get $4)
      )
     )
     (i32.load offset=16
      (local.get $1)
     )
    )
    (block (result i32)
     (local.set $5
      (i32.const 0)
     )
     (local.set $6
      (i32.const 0)
     )
     (local.set $2
      (i32.const 0)
     )
     (i32.const 0)
    )
   )
  )
  (i32.store
   (local.get $0)
   (local.get $3)
  )
  (i32.store offset=4
   (local.get $0)
   (local.get $5)
  )
  (i32.store offset=8
   (local.get $0)
   (local.get $6)
  )
  (i32.store offset=12
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=16
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_ImageCrop (; 435 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 f32)
  (local $7 i32)
  (local $8 f32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 64)
   )
  )
  (block $folding-inner0
   (br_if $folding-inner0
    (i32.eqz
     (i32.load
      (local.get $0)
     )
    )
   )
   (br_if $folding-inner0
    (i32.eqz
     (local.tee $5
      (i32.load offset=4
       (local.get $0)
      )
     )
    )
   )
   (br_if $folding-inner0
    (i32.eqz
     (i32.load offset=8
      (local.get $0)
     )
    )
   )
   (local.set $2
    (local.get $3)
   )
   (local.set $4
    (f32.sub
     (local.tee $6
      (f32.convert_i32_s
       (local.get $5)
      )
     )
     (local.tee $8
      (f32.load
       (local.get $1)
      )
     )
    )
   )
   (if
    (f32.gt
     (f32.add
      (local.get $8)
      (f32.load offset=8
       (local.get $1)
      )
     )
     (local.get $6)
    )
    (block
     (f32.store offset=8
      (local.get $1)
      (local.get $4)
     )
     (f64.store
      (local.get $2)
      (f64.promote_f32
       (local.get $4)
      )
     )
     (call $_TraceLog
      (i32.const 4)
      (i32.const 12256)
      (local.get $2)
     )
    )
   )
   (local.set $2
    (i32.add
     (local.get $3)
     (i32.const 8)
    )
   )
   (local.set $6
    (f32.sub
     (local.tee $9
      (f32.convert_i32_s
       (i32.load offset=8
        (local.get $0)
       )
      )
     )
     (local.tee $4
      (f32.load offset=4
       (local.get $1)
      )
     )
    )
   )
   (if
    (f32.gt
     (f32.add
      (local.get $4)
      (f32.load offset=12
       (local.get $1)
      )
     )
     (local.get $9)
    )
    (block
     (f32.store offset=12
      (local.get $1)
      (local.get $6)
     )
     (f64.store
      (local.get $2)
      (f64.promote_f32
       (local.get $6)
      )
     )
     (call $_TraceLog
      (i32.const 4)
      (i32.const 12316)
      (local.get $2)
     )
    )
   )
   (local.set $2
    (i32.add
     (local.get $3)
     (i32.const 40)
    )
   )
   (local.set $5
    (i32.add
     (local.get $3)
     (i32.const 20)
    )
   )
   (if
    (f32.lt
     (local.get $8)
     (f32.convert_i32_s
      (i32.load offset=4
       (local.get $0)
      )
     )
    )
    (if
     (f32.lt
      (local.get $4)
      (f32.convert_i32_s
       (i32.load offset=8
        (local.get $0)
       )
      )
     )
     (block
      (i64.store align=4
       (local.get $2)
       (i64.load align=4
        (local.get $0)
       )
      )
      (i64.store offset=8 align=4
       (local.get $2)
       (i64.load offset=8 align=4
        (local.get $0)
       )
      )
      (i32.store offset=16
       (local.get $2)
       (i32.load offset=16
        (local.get $0)
       )
      )
      (local.set $12
       (call $_GetImageData
        (local.get $2)
       )
      )
      (local.set $10
       (call $_malloc
        (i32.mul
         (local.tee $15
          (i32.trunc_f32_s
           (local.tee $6
            (f32.load offset=12
             (local.get $1)
            )
           )
          )
         )
         (i32.shl
          (local.tee $13
           (i32.trunc_f32_s
            (local.tee $9
             (f32.load offset=8
              (local.get $1)
             )
            )
           )
          )
          (i32.const 2)
         )
        )
       )
      )
      (if
       (i32.gt_s
        (local.tee $3
         (i32.trunc_f32_s
          (f32.add
           (local.get $4)
           (local.get $6)
          )
         )
        )
        (local.tee $1
         (i32.trunc_f32_s
          (local.get $4)
         )
        )
       )
       (block
        (local.set $16
         (i32.gt_s
          (local.tee $11
           (i32.trunc_f32_s
            (f32.add
             (local.get $8)
             (local.get $9)
            )
           )
          )
          (local.tee $14
           (i32.trunc_f32_s
            (local.get $8)
           )
          )
         )
        )
        (local.set $17
         (i32.shl
          (local.get $13)
          (i32.const 2)
         )
        )
        (local.set $11
         (i32.shl
          (i32.sub
           (local.get $11)
           (local.get $14)
          )
          (i32.const 2)
         )
        )
        (local.set $18
         (i32.sub
          (local.get $3)
          (local.get $1)
         )
        )
        (local.set $3
         (i32.const 0)
        )
        (loop $while-in
         (if
          (local.get $16)
          (drop
           (call $_memcpy
            (i32.add
             (i32.mul
              (local.get $3)
              (local.get $17)
             )
             (local.get $10)
            )
            (i32.add
             (i32.shl
              (i32.add
               (local.get $14)
               (i32.mul
                (i32.load offset=4
                 (local.get $0)
                )
                (local.get $1)
               )
              )
              (i32.const 2)
             )
             (local.get $12)
            )
            (local.get $11)
           )
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (br_if $while-in
          (i32.ne
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
           (local.get $18)
          )
         )
        )
       )
      )
      (call $_free
       (local.get $12)
      )
      (local.set $1
       (i32.load offset=16
        (local.get $0)
       )
      )
      (i64.store align=4
       (local.get $2)
       (i64.load align=4
        (local.get $0)
       )
      )
      (i64.store offset=8 align=4
       (local.get $2)
       (i64.load offset=8 align=4
        (local.get $0)
       )
      )
      (i32.store offset=16
       (local.get $2)
       (i32.load offset=16
        (local.get $0)
       )
      )
      (call $_UnloadImage
       (local.get $2)
      )
      (call $_LoadImageEx
       (local.get $5)
       (local.get $10)
       (local.get $13)
       (local.get $15)
      )
      (i64.store align=4
       (local.get $0)
       (i64.load align=4
        (local.get $5)
       )
      )
      (i64.store offset=8 align=4
       (local.get $0)
       (i64.load offset=8 align=4
        (local.get $5)
       )
      )
      (i32.store offset=16
       (local.get $0)
       (i32.load offset=16
        (local.get $5)
       )
      )
      (call $_free
       (local.get $10)
      )
      (call $_ImageFormat
       (local.get $0)
       (local.get $1)
      )
      (br $folding-inner0)
     )
    )
   )
   (call $_TraceLog
    (i32.const 4)
    (i32.const 12378)
    (i32.add
     (local.get $3)
     (i32.const 16)
    )
   )
   (global.set $STACKTOP
    (local.get $7)
   )
   (return)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_GetImageData (; 436 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $6
   (i32.add
    (local.get $1)
    (i32.const 8)
   )
  )
  (local.set $2
   (call $_malloc
    (i32.shl
     (local.tee $7
      (i32.mul
       (i32.load offset=4
        (local.get $0)
       )
       (i32.load offset=8
        (local.get $0)
       )
      )
     )
     (i32.const 2)
    )
   )
  )
  (if
   (i32.gt_s
    (local.tee $8
     (i32.load offset=16
      (local.get $0)
     )
    )
    (i32.const 10)
   )
   (block
    (call $_TraceLog
     (i32.const 4)
     (i32.const 12433)
     (local.get $1)
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return
     (local.get $2)
    )
   )
  )
  (if
   (i32.lt_u
    (i32.add
     (local.get $8)
     (i32.const -8)
    )
    (i32.const 3)
   )
   (call $_TraceLog
    (i32.const 4)
    (i32.const 12497)
    (local.get $6)
   )
  )
  (if
   (i32.le_s
    (local.get $7)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $5)
    )
    (return
     (local.get $2)
    )
   )
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (local.set $6
   (i32.load
    (local.get $0)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (block $__rjto$0
    (block $__rjti$0
     (block $switch-case7
      (block $switch-case6
       (block $switch-case5
        (block $switch-case4
         (block $switch-case3
          (block $switch-case2
           (block $switch-case1
            (block $switch-case0
             (block $switch-case
              (br_table $switch-case $switch-case0 $switch-case2 $switch-case5 $switch-case1 $switch-case3 $switch-case4 $switch-case6 $switch-case7 $__rjti$0 $__rjto$0
               (i32.sub
                (local.get $8)
                (i32.const 1)
               )
              )
             )
             (i32.store8
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 2)
               )
               (local.get $2)
              )
              (i32.load8_s
               (local.tee $3
                (i32.add
                 (local.get $1)
                 (local.get $4)
                )
               )
              )
             )
             (i32.store8 offset=1
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 2)
               )
               (local.get $2)
              )
              (i32.load8_s
               (local.get $3)
              )
             )
             (i32.store8 offset=2
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 2)
               )
               (local.get $2)
              )
              (i32.load8_s
               (local.get $3)
              )
             )
             (i32.store8 offset=3
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 2)
               )
               (local.get $2)
              )
              (i32.const -1)
             )
             (br $__rjto$0)
            )
            (i32.store8
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $2)
             )
             (i32.load8_s
              (local.tee $3
               (i32.add
                (local.get $0)
                (local.get $4)
               )
              )
             )
            )
            (i32.store8 offset=1
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $2)
             )
             (i32.load8_s
              (local.get $3)
             )
            )
            (i32.store8 offset=2
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $2)
             )
             (i32.load8_s
              (local.get $3)
             )
            )
            (i32.store8 offset=3
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $2)
             )
             (i32.load8_s
              (i32.add
               (local.get $4)
               (i32.add
                (local.get $0)
                (i32.const 1)
               )
              )
             )
            )
            (local.set $0
             (i32.add
              (local.get $0)
              (i32.const 2)
             )
            )
            (br $__rjto$0)
           )
           (i32.store8
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
             (local.get $2)
            )
            (i32.trunc_f32_s
             (f32.mul
              (f32.convert_i32_s
               (i32.shr_u
                (local.tee $3
                 (i32.load16_u
                  (i32.add
                   (i32.shl
                    (local.get $1)
                    (i32.const 1)
                   )
                   (local.get $4)
                  )
                 )
                )
                (i32.const 11)
               )
              )
              (f32.const 8)
             )
            )
           )
           (i32.store8 offset=1
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
             (local.get $2)
            )
            (i32.trunc_f32_s
             (f32.mul
              (f32.convert_i32_s
               (i32.and
                (i32.shr_u
                 (local.get $3)
                 (i32.const 6)
                )
                (i32.const 31)
               )
              )
              (f32.const 8)
             )
            )
           )
           (i32.store8 offset=2
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
             (local.get $2)
            )
            (i32.trunc_f32_s
             (f32.mul
              (f32.convert_i32_s
               (i32.and
                (i32.shr_u
                 (local.get $3)
                 (i32.const 1)
                )
                (i32.const 31)
               )
              )
              (f32.const 8)
             )
            )
           )
           (i32.store8 offset=3
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
             (local.get $2)
            )
            (i32.sub
             (i32.const 0)
             (i32.and
              (local.get $3)
              (i32.const 1)
             )
            )
           )
           (br $__rjto$0)
          )
          (i32.store8
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
            (local.get $2)
           )
           (i32.trunc_f32_s
            (f32.mul
             (f32.convert_i32_s
              (i32.shr_u
               (local.tee $3
                (i32.load16_u
                 (i32.add
                  (i32.shl
                   (local.get $1)
                   (i32.const 1)
                  )
                  (local.get $4)
                 )
                )
               )
               (i32.const 11)
              )
             )
             (f32.const 8)
            )
           )
          )
          (i32.store8 offset=1
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
            (local.get $2)
           )
           (i32.trunc_f32_s
            (f32.mul
             (f32.convert_i32_s
              (i32.and
               (i32.shr_u
                (local.get $3)
                (i32.const 5)
               )
               (i32.const 63)
              )
             )
             (f32.const 4)
            )
           )
          )
          (i32.store8 offset=2
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
            (local.get $2)
           )
           (i32.trunc_f32_s
            (f32.mul
             (f32.convert_i32_s
              (i32.and
               (local.get $3)
               (i32.const 31)
              )
             )
             (f32.const 8)
            )
           )
          )
          (i32.store8 offset=3
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
            (local.get $2)
           )
           (i32.const -1)
          )
          (br $__rjto$0)
         )
         (i32.store8
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
           (local.get $2)
          )
          (i32.trunc_f32_s
           (f32.mul
            (f32.convert_i32_s
             (i32.shr_u
              (local.tee $3
               (i32.load16_u
                (i32.add
                 (i32.shl
                  (local.get $1)
                  (i32.const 1)
                 )
                 (local.get $4)
                )
               )
              )
              (i32.const 12)
             )
            )
            (f32.const 17)
           )
          )
         )
         (i32.store8 offset=1
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
           (local.get $2)
          )
          (i32.trunc_f32_s
           (f32.mul
            (f32.convert_i32_s
             (i32.and
              (i32.shr_u
               (local.get $3)
               (i32.const 8)
              )
              (i32.const 15)
             )
            )
            (f32.const 17)
           )
          )
         )
         (i32.store8 offset=2
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
           (local.get $2)
          )
          (i32.trunc_f32_s
           (f32.mul
            (f32.convert_i32_s
             (i32.and
              (i32.shr_u
               (local.get $3)
               (i32.const 4)
              )
              (i32.const 15)
             )
            )
            (f32.const 17)
           )
          )
         )
         (i32.store8 offset=3
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
           (local.get $2)
          )
          (i32.trunc_f32_s
           (f32.mul
            (f32.convert_i32_s
             (i32.and
              (local.get $3)
              (i32.const 15)
             )
            )
            (f32.const 17)
           )
          )
         )
         (br $__rjto$0)
        )
        (i32.store8
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $2)
         )
         (i32.load8_s
          (i32.add
           (local.get $0)
           (local.get $4)
          )
         )
        )
        (i32.store8 offset=1
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $2)
         )
         (i32.load8_s
          (i32.add
           (local.get $4)
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
         )
        )
        (i32.store8 offset=2
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $2)
         )
         (i32.load8_s
          (i32.add
           (local.get $4)
           (i32.add
            (local.get $0)
            (i32.const 2)
           )
          )
         )
        )
        (i32.store8 offset=3
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $2)
         )
         (i32.load8_s
          (i32.add
           (local.get $4)
           (i32.add
            (local.get $0)
            (i32.const 3)
           )
          )
         )
        )
        (local.set $0
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
        )
        (br $__rjto$0)
       )
       (i32.store8
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $2)
        )
        (i32.load8_s
         (i32.add
          (local.get $0)
          (local.get $4)
         )
        )
       )
       (i32.store8 offset=1
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $2)
        )
        (i32.load8_s
         (i32.add
          (local.get $4)
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
        )
       )
       (i32.store8 offset=2
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $2)
        )
        (i32.load8_s
         (i32.add
          (local.get $4)
          (i32.add
           (local.get $0)
           (i32.const 2)
          )
         )
        )
       )
       (i32.store8 offset=3
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $2)
        )
        (i32.const -1)
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 3)
        )
       )
       (br $__rjto$0)
      )
      (i32.store8
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (local.get $2)
       )
       (i32.trunc_f32_s
        (f32.mul
         (f32.load
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (f32.const 255)
        )
       )
      )
      (i32.store8 offset=1
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (local.get $2)
       )
       (i32.const 0)
      )
      (i32.store8 offset=2
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (local.get $2)
       )
       (i32.const 0)
      )
      (i32.store8 offset=3
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (local.get $2)
       )
       (i32.const -1)
      )
      (br $__rjto$0)
     )
     (i32.store8
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.trunc_f32_s
       (f32.mul
        (f32.load
         (i32.add
          (i32.shl
           (local.get $0)
           (i32.const 2)
          )
          (local.get $4)
         )
        )
        (f32.const 255)
       )
      )
     )
     (i32.store8 offset=1
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.trunc_f32_s
       (f32.mul
        (f32.load
         (i32.add
          (i32.shl
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
           (i32.const 2)
          )
          (local.get $4)
         )
        )
        (f32.const 255)
       )
      )
     )
     (i32.store8 offset=2
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.trunc_f32_s
       (f32.mul
        (f32.load
         (i32.add
          (i32.shl
           (i32.add
            (local.get $0)
            (i32.const 2)
           )
           (i32.const 2)
          )
          (local.get $4)
         )
        )
        (f32.const 255)
       )
      )
     )
     (i32.store8 offset=3
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.const -1)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 3)
      )
     )
    )
    (i32.store8
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 2)
      )
      (local.get $2)
     )
     (i32.trunc_f32_s
      (f32.mul
       (f32.load
        (local.tee $3
         (i32.add
          (i32.shl
           (local.get $0)
           (i32.const 2)
          )
          (local.get $6)
         )
        )
       )
       (f32.const 255)
      )
     )
    )
    (i32.store8 offset=1
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 2)
      )
      (local.get $2)
     )
     (i32.trunc_f32_s
      (f32.mul
       (f32.load
        (local.get $3)
       )
       (f32.const 255)
      )
     )
    )
    (i32.store8 offset=2
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 2)
      )
      (local.get $2)
     )
     (i32.trunc_f32_s
      (f32.mul
       (f32.load
        (local.get $3)
       )
       (f32.const 255)
      )
     )
    )
    (i32.store8 offset=3
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 2)
      )
      (local.get $2)
     )
     (i32.trunc_f32_s
      (f32.mul
       (f32.load
        (local.get $3)
       )
       (f32.const 255)
      )
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $7)
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $2)
 )
 (func $_GetImageDataNormalized (; 437 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $2
   (call $_malloc
    (i32.shl
     (local.tee $7
      (i32.mul
       (i32.load offset=4
        (local.get $0)
       )
       (i32.load offset=8
        (local.get $0)
       )
      )
     )
     (i32.const 4)
    )
   )
  )
  (if
   (i32.gt_s
    (local.tee $8
     (i32.load offset=16
      (local.get $0)
     )
    )
    (i32.const 10)
   )
   (block
    (call $_TraceLog
     (i32.const 4)
     (i32.const 12433)
     (local.get $1)
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    (return
     (local.get $2)
    )
   )
  )
  (if
   (i32.le_s
    (local.get $7)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $6)
    )
    (return
     (local.get $2)
    )
   )
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $5
   (i32.load
    (local.get $0)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (block $__rjto$0
    (block $__rjti$0
     (block $switch-case7
      (block $switch-case6
       (block $switch-case5
        (block $switch-case4
         (block $switch-case3
          (block $switch-case2
           (block $switch-case1
            (block $switch-case0
             (block $switch-case
              (br_table $switch-case $switch-case0 $switch-case2 $switch-case5 $switch-case1 $switch-case3 $switch-case4 $switch-case6 $switch-case7 $__rjti$0 $__rjto$0
               (i32.sub
                (local.get $8)
                (i32.const 1)
               )
              )
             )
             (f32.store
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $2)
              )
              (f32.div
               (f32.convert_i32_s
                (i32.load8_u
                 (local.tee $4
                  (i32.add
                   (local.get $1)
                   (local.get $3)
                  )
                 )
                )
               )
               (f32.const 255)
              )
             )
             (f32.store offset=4
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $2)
              )
              (f32.div
               (f32.convert_i32_s
                (i32.load8_u
                 (local.get $4)
                )
               )
               (f32.const 255)
              )
             )
             (f32.store offset=8
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $2)
              )
              (f32.div
               (f32.convert_i32_s
                (i32.load8_u
                 (local.get $4)
                )
               )
               (f32.const 255)
              )
             )
             (f32.store offset=12
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $2)
              )
              (f32.const 1)
             )
             (br $__rjto$0)
            )
            (f32.store
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 4)
              )
              (local.get $2)
             )
             (f32.div
              (f32.convert_i32_s
               (i32.load8_u
                (local.tee $4
                 (i32.add
                  (local.get $0)
                  (local.get $3)
                 )
                )
               )
              )
              (f32.const 255)
             )
            )
            (f32.store offset=4
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 4)
              )
              (local.get $2)
             )
             (f32.div
              (f32.convert_i32_s
               (i32.load8_u
                (local.get $4)
               )
              )
              (f32.const 255)
             )
            )
            (f32.store offset=8
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 4)
              )
              (local.get $2)
             )
             (f32.div
              (f32.convert_i32_s
               (i32.load8_u
                (local.get $4)
               )
              )
              (f32.const 255)
             )
            )
            (f32.store offset=12
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 4)
              )
              (local.get $2)
             )
             (f32.div
              (f32.convert_i32_s
               (i32.load8_u
                (i32.add
                 (local.get $3)
                 (i32.add
                  (local.get $0)
                  (i32.const 1)
                 )
                )
               )
              )
              (f32.const 255)
             )
            )
            (local.set $0
             (i32.add
              (local.get $0)
              (i32.const 2)
             )
            )
            (br $__rjto$0)
           )
           (f32.store
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 4)
             )
             (local.get $2)
            )
            (f32.mul
             (f32.convert_i32_s
              (i32.shr_u
               (local.tee $4
                (i32.load16_u
                 (i32.add
                  (i32.shl
                   (local.get $1)
                   (i32.const 1)
                  )
                  (local.get $3)
                 )
                )
               )
               (i32.const 11)
              )
             )
             (f32.const 0.032258063554763794)
            )
           )
           (f32.store offset=4
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 4)
             )
             (local.get $2)
            )
            (f32.mul
             (f32.convert_i32_s
              (i32.and
               (i32.shr_u
                (local.get $4)
                (i32.const 6)
               )
               (i32.const 31)
              )
             )
             (f32.const 0.032258063554763794)
            )
           )
           (f32.store offset=8
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 4)
             )
             (local.get $2)
            )
            (f32.mul
             (f32.convert_i32_s
              (i32.and
               (i32.shr_u
                (local.get $4)
                (i32.const 1)
               )
               (i32.const 31)
              )
             )
             (f32.const 0.032258063554763794)
            )
           )
           (f32.store offset=12
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 4)
             )
             (local.get $2)
            )
            (select
             (f32.const 1)
             (f32.const 0)
             (i32.and
              (local.get $4)
              (i32.const 1)
             )
            )
           )
           (br $__rjto$0)
          )
          (f32.store
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 4)
            )
            (local.get $2)
           )
           (f32.mul
            (f32.convert_i32_s
             (i32.shr_u
              (local.tee $4
               (i32.load16_u
                (i32.add
                 (i32.shl
                  (local.get $1)
                  (i32.const 1)
                 )
                 (local.get $3)
                )
               )
              )
              (i32.const 11)
             )
            )
            (f32.const 0.032258063554763794)
           )
          )
          (f32.store offset=4
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 4)
            )
            (local.get $2)
           )
           (f32.mul
            (f32.convert_i32_s
             (i32.and
              (i32.shr_u
               (local.get $4)
               (i32.const 5)
              )
              (i32.const 63)
             )
            )
            (f32.const 0.01587301678955555)
           )
          )
          (f32.store offset=8
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 4)
            )
            (local.get $2)
           )
           (f32.mul
            (f32.convert_i32_s
             (i32.and
              (local.get $4)
              (i32.const 31)
             )
            )
            (f32.const 0.032258063554763794)
           )
          )
          (f32.store offset=12
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 4)
            )
            (local.get $2)
           )
           (f32.const 1)
          )
          (br $__rjto$0)
         )
         (f32.store
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 4)
           )
           (local.get $2)
          )
          (f32.mul
           (f32.convert_i32_s
            (i32.shr_u
             (local.tee $4
              (i32.load16_u
               (i32.add
                (i32.shl
                 (local.get $1)
                 (i32.const 1)
                )
                (local.get $3)
               )
              )
             )
             (i32.const 12)
            )
           )
           (f32.const 0.06666667014360428)
          )
         )
         (f32.store offset=4
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 4)
           )
           (local.get $2)
          )
          (f32.mul
           (f32.convert_i32_s
            (i32.and
             (i32.shr_u
              (local.get $4)
              (i32.const 8)
             )
             (i32.const 15)
            )
           )
           (f32.const 0.06666667014360428)
          )
         )
         (f32.store offset=8
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 4)
           )
           (local.get $2)
          )
          (f32.mul
           (f32.convert_i32_s
            (i32.and
             (i32.shr_u
              (local.get $4)
              (i32.const 4)
             )
             (i32.const 15)
            )
           )
           (f32.const 0.06666667014360428)
          )
         )
         (f32.store offset=12
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 4)
           )
           (local.get $2)
          )
          (f32.mul
           (f32.convert_i32_s
            (i32.and
             (local.get $4)
             (i32.const 15)
            )
           )
           (f32.const 0.06666667014360428)
          )
         )
         (br $__rjto$0)
        )
        (f32.store
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 4)
          )
          (local.get $2)
         )
         (f32.div
          (f32.convert_i32_s
           (i32.load8_u
            (i32.add
             (local.get $0)
             (local.get $3)
            )
           )
          )
          (f32.const 255)
         )
        )
        (f32.store offset=4
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 4)
          )
          (local.get $2)
         )
         (f32.div
          (f32.convert_i32_s
           (i32.load8_u
            (i32.add
             (local.get $3)
             (i32.add
              (local.get $0)
              (i32.const 1)
             )
            )
           )
          )
          (f32.const 255)
         )
        )
        (f32.store offset=8
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 4)
          )
          (local.get $2)
         )
         (f32.div
          (f32.convert_i32_s
           (i32.load8_u
            (i32.add
             (local.get $3)
             (i32.add
              (local.get $0)
              (i32.const 2)
             )
            )
           )
          )
          (f32.const 255)
         )
        )
        (f32.store offset=12
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 4)
          )
          (local.get $2)
         )
         (f32.div
          (f32.convert_i32_s
           (i32.load8_u
            (i32.add
             (local.get $3)
             (i32.add
              (local.get $0)
              (i32.const 3)
             )
            )
           )
          )
          (f32.const 255)
         )
        )
        (local.set $0
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
        )
        (br $__rjto$0)
       )
       (f32.store
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 4)
         )
         (local.get $2)
        )
        (f32.div
         (f32.convert_i32_s
          (i32.load8_u
           (i32.add
            (local.get $0)
            (local.get $3)
           )
          )
         )
         (f32.const 255)
        )
       )
       (f32.store offset=4
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 4)
         )
         (local.get $2)
        )
        (f32.div
         (f32.convert_i32_s
          (i32.load8_u
           (i32.add
            (local.get $3)
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
          )
         )
         (f32.const 255)
        )
       )
       (f32.store offset=8
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 4)
         )
         (local.get $2)
        )
        (f32.div
         (f32.convert_i32_s
          (i32.load8_u
           (i32.add
            (local.get $3)
            (i32.add
             (local.get $0)
             (i32.const 2)
            )
           )
          )
         )
         (f32.const 255)
        )
       )
       (f32.store offset=12
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 4)
         )
         (local.get $2)
        )
        (f32.const 1)
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 3)
        )
       )
       (br $__rjto$0)
      )
      (i32.store
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 4)
        )
        (local.get $2)
       )
       (i32.load
        (i32.add
         (i32.shl
          (local.get $0)
          (i32.const 2)
         )
         (local.get $3)
        )
       )
      )
      (f32.store offset=4
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 4)
        )
        (local.get $2)
       )
       (f32.const 0)
      )
      (f32.store offset=8
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 4)
        )
        (local.get $2)
       )
       (f32.const 0)
      )
      (f32.store offset=12
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 4)
        )
        (local.get $2)
       )
       (f32.const 1)
      )
      (br $__rjto$0)
     )
     (i32.store
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 4)
       )
       (local.get $2)
      )
      (i32.load
       (i32.add
        (i32.shl
         (local.get $0)
         (i32.const 2)
        )
        (local.get $3)
       )
      )
     )
     (i32.store offset=4
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 4)
       )
       (local.get $2)
      )
      (i32.load
       (i32.add
        (i32.shl
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
         (i32.const 2)
        )
        (local.get $3)
       )
      )
     )
     (i32.store offset=8
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 4)
       )
       (local.get $2)
      )
      (i32.load
       (i32.add
        (i32.shl
         (i32.add
          (local.get $0)
          (i32.const 2)
         )
         (i32.const 2)
        )
        (local.get $3)
       )
      )
     )
     (f32.store offset=12
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 4)
       )
       (local.get $2)
      )
      (f32.const 1)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 3)
      )
     )
    )
    (i32.store
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 4)
      )
      (local.get $2)
     )
     (i32.load
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $5)
      )
     )
    )
    (i32.store offset=4
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 4)
      )
      (local.get $2)
     )
     (i32.load
      (i32.add
       (i32.shl
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
        (i32.const 2)
       )
       (local.get $5)
      )
     )
    )
    (i32.store offset=8
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 4)
      )
      (local.get $2)
     )
     (i32.load
      (i32.add
       (i32.shl
        (i32.add
         (local.get $0)
         (i32.const 2)
        )
        (i32.const 2)
       )
       (local.get $5)
      )
     )
    )
    (i32.store offset=12
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 4)
      )
      (local.get $2)
     )
     (i32.load
      (i32.add
       (i32.shl
        (i32.add
         (local.get $0)
         (i32.const 3)
        )
        (i32.const 2)
       )
       (local.get $5)
      )
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $7)
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $2)
 )
 (func $_ImageMipmaps (; 438 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 128)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 128)
   )
  )
  (block $folding-inner0
   (br_if $folding-inner0
    (i32.eqz
     (i32.load
      (local.get $0)
     )
    )
   )
   (br_if $folding-inner0
    (i32.eqz
     (local.tee $3
      (i32.load offset=4
       (local.get $0)
      )
     )
    )
   )
   (br_if $folding-inner0
    (i32.eqz
     (local.tee $2
      (i32.load offset=8
       (local.get $0)
      )
     )
    )
   )
   (local.set $5
    (i32.add
     (local.get $1)
     (i32.const 96)
    )
   )
   (local.set $15
    (i32.add
     (local.get $1)
     (i32.const 88)
    )
   )
   (local.set $9
    (i32.sub
     (local.get $1)
     (i32.const -64)
    )
   )
   (local.set $16
    (i32.add
     (local.get $1)
     (i32.const 56)
    )
   )
   (local.set $14
    (i32.add
     (local.get $1)
     (i32.const 48)
    )
   )
   (local.set $7
    (i32.add
     (local.get $1)
     (i32.const 24)
    )
   )
   (local.set $13
    (i32.add
     (local.get $1)
     (i32.const 16)
    )
   )
   (local.set $10
    (local.get $1)
   )
   (local.set $1
    (call $_GetPixelDataSize
     (local.get $3)
     (local.get $2)
     (i32.load offset=16
      (local.get $0)
     )
    )
   )
   (local.set $8
    (if (result i32)
     (i32.or
      (local.tee $4
       (i32.ne
        (local.get $3)
        (i32.const 1)
       )
      )
      (local.tee $6
       (i32.ne
        (local.get $2)
        (i32.const 1)
       )
      )
     )
     (block (result i32)
      (local.set $8
       (i32.const 1)
      )
      (loop $while-in (result i32)
       (local.set $4
        (i32.gt_s
         (local.tee $3
          (select
           (i32.div_s
            (local.get $3)
            (i32.const 2)
           )
           (i32.const 1)
           (local.get $4)
          )
         )
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.gt_s
         (local.tee $2
          (select
           (i32.div_s
            (local.get $2)
            (i32.const 2)
           )
           (i32.const 1)
           (local.get $6)
          )
         )
         (i32.const 1)
        )
       )
       (i32.store
        (local.get $10)
        (local.tee $3
         (select
          (local.get $3)
          (i32.const 1)
          (local.get $4)
         )
        )
       )
       (i32.store offset=4
        (local.get $10)
        (local.tee $12
         (select
          (local.get $2)
          (i32.const 1)
          (local.get $6)
         )
        )
       )
       (i32.store offset=8
        (local.get $10)
        (local.get $1)
       )
       (call $_TraceLog
        (i32.const 2)
        (i32.const 12639)
        (local.get $10)
       )
       (local.set $2
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.add
         (call $_GetPixelDataSize
          (local.get $3)
          (local.get $12)
          (i32.load offset=16
           (local.get $0)
          )
         )
         (local.get $1)
        )
       )
       (if (result i32)
        (i32.or
         (local.get $4)
         (local.get $6)
        )
        (block
         (local.set $8
          (local.get $2)
         )
         (local.set $2
          (local.get $12)
         )
         (br $while-in)
        )
        (local.get $2)
       )
      )
     )
     (i32.const 1)
    )
   )
   (i32.store
    (local.get $13)
    (i32.load offset=12
     (local.get $0)
    )
   )
   (i32.store offset=4
    (local.get $13)
    (local.get $8)
   )
   (call $_TraceLog
    (i32.const 2)
    (i32.const 12684)
    (local.get $13)
   )
   (i32.store
    (local.get $7)
    (local.get $1)
   )
   (call $_TraceLog
    (i32.const 2)
    (i32.const 12729)
    (local.get $7)
   )
   (i32.store
    (local.get $5)
    (i32.load
     (local.get $0)
    )
   )
   (call $_TraceLog
    (i32.const 2)
    (i32.const 12761)
    (local.get $5)
   )
   (if
    (i32.ge_s
     (i32.load offset=12
      (local.get $0)
     )
     (local.get $8)
    )
    (block
     (call $_TraceLog
      (i32.const 4)
      (i32.const 12945)
      (local.get $15)
     )
     (br $folding-inner0)
    )
   )
   (if
    (local.tee $1
     (call $_realloc
      (i32.load
       (local.get $0)
      )
      (local.get $1)
     )
    )
    (block
     (i32.store
      (local.get $0)
      (local.get $1)
     )
     (i32.store
      (local.get $14)
      (local.get $1)
     )
     (call $_TraceLog
      (i32.const 2)
      (i32.const 12799)
      (local.get $14)
     )
    )
    (call $_TraceLog
     (i32.const 4)
     (i32.const 12841)
     (local.get $16)
    )
   )
   (local.set $3
    (i32.load
     (local.get $0)
    )
   )
   (local.set $2
    (i32.load offset=16
     (local.get $0)
    )
   )
   (local.set $4
    (i32.div_s
     (local.tee $12
      (i32.load offset=4
       (local.get $0)
      )
     )
     (i32.const 2)
    )
   )
   (local.set $1
    (i32.div_s
     (local.tee $10
      (i32.load offset=8
       (local.get $0)
      )
     )
     (i32.const 2)
    )
   )
   (i64.store align=4
    (local.get $5)
    (i64.load align=4
     (local.get $0)
    )
   )
   (i64.store offset=8 align=4
    (local.get $5)
    (i64.load offset=8 align=4
     (local.get $0)
    )
   )
   (i32.store offset=16
    (local.get $5)
    (i32.load offset=16
     (local.get $0)
    )
   )
   (call $_ImageCopy
    (local.get $7)
    (local.get $5)
   )
   (if
    (i32.gt_u
     (local.get $8)
     (i32.const 1)
    )
    (block
     (local.set $6
      (call $_GetPixelDataSize
       (local.get $4)
       (local.get $1)
       (local.get $2)
      )
     )
     (local.set $2
      (i32.add
       (call $_GetPixelDataSize
        (local.get $12)
        (local.get $10)
        (local.get $2)
       )
       (local.get $3)
      )
     )
     (local.set $3
      (i32.const 1)
     )
     (loop $while-in1
      (i32.store
       (local.get $9)
       (local.get $3)
      )
      (i32.store offset=4
       (local.get $9)
       (local.get $4)
      )
      (i32.store offset=8
       (local.get $9)
       (local.get $1)
      )
      (i32.store offset=12
       (local.get $9)
       (local.get $6)
      )
      (i32.store offset=16
       (local.get $9)
       (local.get $2)
      )
      (call $_TraceLog
       (i32.const 2)
       (i32.const 12888)
       (local.get $9)
      )
      (call $_ImageResize
       (local.get $7)
       (local.get $4)
       (local.get $1)
      )
      (drop
       (call $_memcpy
        (local.get $2)
        (i32.load
         (local.get $7)
        )
        (local.get $6)
       )
      )
      (local.set $2
       (i32.add
        (local.get $2)
        (local.get $6)
       )
      )
      (i32.store offset=12
       (local.get $0)
       (i32.add
        (i32.load offset=12
         (local.get $0)
        )
        (i32.const 1)
       )
      )
      (local.set $6
       (call $_GetPixelDataSize
        (local.tee $4
         (select
          (i32.const 1)
          (i32.div_s
           (local.get $4)
           (i32.const 2)
          )
          (i32.lt_s
           (local.get $4)
           (i32.const 2)
          )
         )
        )
        (local.tee $1
         (select
          (i32.const 1)
          (i32.div_s
           (local.get $1)
           (i32.const 2)
          )
          (i32.lt_s
           (local.get $1)
           (i32.const 2)
          )
         )
        )
        (i32.load offset=16
         (local.get $0)
        )
       )
      )
      (br_if $while-in1
       (i32.ne
        (local.get $8)
        (local.tee $3
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
       )
      )
     )
    )
   )
   (i64.store align=4
    (local.get $5)
    (i64.load align=4
     (local.get $7)
    )
   )
   (i64.store offset=8 align=4
    (local.get $5)
    (i64.load offset=8 align=4
     (local.get $7)
    )
   )
   (i32.store offset=16
    (local.get $5)
    (i32.load offset=16
     (local.get $7)
    )
   )
   (call $_UnloadImage
    (local.get $5)
   )
   (global.set $STACKTOP
    (local.get $11)
   )
   (return)
  )
  (global.set $STACKTOP
   (local.get $11)
  )
 )
 (func $_ImageResize (; 439 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 48)
   )
  )
  (if
   (i32.eqz
    (i32.load
     (local.get $0)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (if
   (i32.eqz
    (i32.load offset=4
     (local.get $0)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (if
   (i32.eqz
    (i32.load offset=8
     (local.get $0)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (i64.store align=4
   (local.tee $3
    (i32.add
     (local.get $4)
     (i32.const 20)
    )
   )
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i32.store offset=16
   (local.get $3)
   (i32.load offset=16
    (local.get $0)
   )
  )
  (local.set $7
   (call $_GetImageData
    (local.get $3)
   )
  )
  (local.set $6
   (call $_malloc
    (i32.mul
     (local.get $2)
     (i32.shl
      (local.get $1)
      (i32.const 2)
     )
    )
   )
  )
  (call $_stbir__resize_arbitrary
   (local.get $7)
   (i32.load offset=4
    (local.get $0)
   )
   (i32.load offset=8
    (local.get $0)
   )
   (local.get $6)
   (local.get $1)
   (local.get $2)
  )
  (local.set $8
   (i32.load offset=16
    (local.get $0)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i32.store offset=16
   (local.get $3)
   (i32.load offset=16
    (local.get $0)
   )
  )
  (call $_UnloadImage
   (local.get $3)
  )
  (call $_LoadImageEx
   (local.get $4)
   (local.get $6)
   (local.get $1)
   (local.get $2)
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (local.get $4)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load offset=8 align=4
    (local.get $4)
   )
  )
  (i32.store offset=16
   (local.get $0)
   (i32.load offset=16
    (local.get $4)
   )
  )
  (call $_ImageFormat
   (local.get $0)
   (local.get $8)
  )
  (call $_free
   (local.get $6)
  )
  (call $_free
   (local.get $7)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_stbir__resize_arbitrary (; 440 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 224)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 224)
   )
  )
  (call $_stbir__setup
   (local.get $6)
   (local.get $1)
   (local.get $2)
   (local.get $4)
   (local.get $5)
  )
  (call $_stbir__calculate_transform
   (local.get $6)
  )
  (call $_stbir__choose_filter
   (local.get $6)
  )
  (if
   (i32.eqz
    (local.tee $1
     (call $_malloc
      (local.tee $2
       (call $_stbir__calculate_memory
        (local.get $6)
       )
      )
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $7)
    )
    (return)
   )
  )
  (call $_stbir__resize_allocated
   (local.get $6)
   (local.get $0)
   (local.get $3)
   (local.get $1)
   (local.get $2)
  )
  (call $_free
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_stbir__setup (; 441 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (i32.store offset=4
   (local.get $0)
   (local.get $1)
  )
  (i32.store offset=8
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=20
   (local.get $0)
   (local.get $3)
  )
  (i32.store offset=24
   (local.get $0)
   (local.get $4)
  )
  (i32.store
   (i32.sub
    (local.get $0)
    (i32.const -64)
   )
   (i32.const 4)
  )
 )
 (func $_stbir__calculate_transform (; 442 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 f32)
  (local $2 f32)
  (f32.store offset=32
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=36
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=40
   (local.get $0)
   (f32.const 1)
  )
  (f32.store offset=44
   (local.get $0)
   (f32.const 1)
  )
  (f32.store offset=56
   (local.get $0)
   (f32.div
    (local.tee $1
     (f32.convert_i32_s
      (i32.load offset=20
       (local.get $0)
      )
     )
    )
    (f32.convert_i32_s
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
  (f32.store offset=60
   (local.get $0)
   (f32.div
    (local.tee $2
     (f32.convert_i32_s
      (i32.load offset=24
       (local.get $0)
      )
     )
    )
    (f32.convert_i32_s
     (i32.load offset=8
      (local.get $0)
     )
    )
   )
  )
  (f32.store offset=48
   (local.get $0)
   (f32.mul
    (local.get $1)
    (f32.const 0)
   )
  )
  (f32.store offset=52
   (local.get $0)
   (f32.mul
    (local.get $2)
    (f32.const 0)
   )
  )
 )
 (func $_stbir__choose_filter (; 443 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (select
    (i32.const 4)
    (i32.const 5)
    (call $_stbir__use_upsampling
     (f32.load offset=56
      (local.get $0)
     )
    )
   )
  )
  (local.set $2
   (select
    (i32.const 4)
    (i32.const 5)
    (call $_stbir__use_upsampling
     (f32.load offset=60
      (local.get $0)
     )
    )
   )
  )
  (i32.store offset=80
   (local.get $0)
   (local.get $1)
  )
  (i32.store offset=84
   (local.get $0)
   (local.get $2)
  )
 )
 (func $_stbir__calculate_memory (; 444 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $3
   (call $_stbir__get_filter_pixel_margin
    (i32.load offset=80
     (local.get $0)
    )
    (f32.load offset=56
     (local.get $0)
    )
   )
  )
  (local.set $1
   (call $_stbir__get_filter_pixel_width
    (i32.load offset=84
     (local.get $0)
    )
    (f32.load offset=60
     (local.get $0)
    )
   )
  )
  (i32.store offset=152
   (local.get $0)
   (call $_stbir__get_contributors
    (f32.load offset=56
     (local.get $0)
    )
    (i32.load offset=80
     (local.get $0)
    )
    (i32.load offset=4
     (local.get $0)
    )
    (i32.load offset=20
     (local.get $0)
    )
   )
  )
  (i32.store offset=156
   (local.get $0)
   (call $_stbir__get_contributors
    (f32.load offset=60
     (local.get $0)
    )
    (i32.load offset=84
     (local.get $0)
    )
    (i32.load offset=8
     (local.get $0)
    )
    (i32.load offset=24
     (local.get $0)
    )
   )
  )
  (i32.store offset=164
   (local.get $0)
   (i32.add
    (local.get $1)
    (i32.const 1)
   )
  )
  (i32.store offset=188
   (local.get $0)
   (i32.shl
    (i32.load offset=152
     (local.get $0)
    )
    (i32.const 3)
   )
  )
  (i32.store offset=192
   (local.get $0)
   (i32.shl
    (i32.mul
     (i32.load offset=152
      (local.get $0)
     )
     (call $_stbir__get_coefficient_width
      (i32.load offset=80
       (local.get $0)
      )
      (f32.load offset=56
       (local.get $0)
      )
     )
    )
    (i32.const 2)
   )
  )
  (i32.store offset=196
   (local.get $0)
   (i32.shl
    (i32.load offset=156
     (local.get $0)
    )
    (i32.const 3)
   )
  )
  (i32.store offset=200
   (local.get $0)
   (local.tee $4
    (i32.shl
     (i32.mul
      (i32.load offset=156
       (local.get $0)
      )
      (call $_stbir__get_coefficient_width
       (i32.load offset=84
        (local.get $0)
       )
       (f32.load offset=60
        (local.get $0)
       )
      )
     )
     (i32.const 2)
    )
   )
  )
  (i32.store offset=204
   (local.get $0)
   (local.tee $5
    (i32.mul
     (i32.add
      (i32.load offset=4
       (local.get $0)
      )
      (i32.shl
       (local.get $3)
       (i32.const 1)
      )
     )
     (i32.shl
      (local.tee $1
       (i32.load
        (i32.sub
         (local.get $0)
         (i32.const -64)
        )
       )
      )
      (i32.const 2)
     )
    )
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $0)
     (i32.const 208)
    )
   )
   (local.tee $2
    (i32.shl
     (local.tee $1
      (i32.mul
       (local.get $1)
       (i32.load offset=20
        (local.get $0)
       )
      )
     )
     (i32.const 2)
    )
   )
  )
  (i32.store offset=212
   (local.get $0)
   (local.tee $6
    (i32.mul
     (i32.load offset=164
      (local.get $0)
     )
     (i32.shl
      (local.get $1)
      (i32.const 2)
     )
    )
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $0)
     (i32.const 216)
    )
   )
   (local.get $2)
  )
  (if
   (i32.eqz
    (local.tee $2
     (i32.load offset=80
      (local.get $0)
     )
    )
   )
   (call $___assert_fail
    (i32.const 15464)
    (i32.const 13001)
    (i32.const 2265)
    (i32.const 15493)
   )
  )
  (if
   (i32.ge_u
    (local.get $2)
    (i32.const 6)
   )
   (call $___assert_fail
    (i32.const 13076)
    (i32.const 13001)
    (i32.const 2266)
    (i32.const 15493)
   )
  )
  (if
   (i32.eqz
    (local.tee $2
     (i32.load offset=84
      (local.get $0)
     )
    )
   )
   (call $___assert_fail
    (i32.const 15517)
    (i32.const 13001)
    (i32.const 2267)
    (i32.const 15493)
   )
  )
  (if
   (i32.lt_u
    (local.get $2)
    (i32.const 6)
   )
   (block
    (i32.store
     (select
      (local.get $3)
      (local.get $1)
      (call $_stbir__use_height_upsampling
       (local.get $0)
      )
     )
     (i32.const 0)
    )
    (return
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.add
        (i32.load offset=196
         (local.get $0)
        )
        (i32.add
         (i32.load offset=192
          (local.get $0)
         )
         (i32.add
          (i32.load offset=188
           (local.get $0)
          )
          (i32.add
           (i32.add
            (local.get $4)
            (local.get $5)
           )
           (local.get $6)
          )
         )
        )
       )
      )
     )
    )
   )
   (call $___assert_fail
    (i32.const 13177)
    (i32.const 13001)
    (i32.const 2268)
    (i32.const 15493)
   )
  )
  (i32.const 0)
 )
 (func $_stbir__resize_allocated (; 445 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $6
   (call $_stbir__calculate_memory
    (local.get $0)
   )
  )
  (local.set $7
   (i32.mul
    (i32.load8_u
     (i32.const 12977)
    )
    (i32.mul
     (i32.load
      (i32.sub
       (local.get $0)
       (i32.const -64)
      )
     )
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
  (local.set $8
   (i32.mul
    (i32.load8_u
     (i32.const 12977)
    )
    (i32.mul
     (i32.load
      (i32.sub
       (local.get $0)
       (i32.const -64)
      )
     )
     (i32.load offset=20
      (local.get $0)
     )
    )
   )
  )
  (if
   (i32.le_s
    (local.tee $5
     (i32.load
      (local.tee $9
       (i32.sub
        (local.get $0)
        (i32.const -64)
       )
      )
     )
    )
    (i32.const -1)
   )
   (call $___assert_fail
    (i32.const 12981)
    (i32.const 13001)
    (i32.const 2312)
    (i32.const 13031)
   )
  )
  (if
   (i32.ge_s
    (local.get $5)
    (i32.const 65)
   )
   (call $___assert_fail
    (i32.const 13055)
    (i32.const 13001)
    (i32.const 2313)
    (i32.const 13031)
   )
  )
  (if
   (i32.ge_u
    (i32.load offset=80
     (local.get $0)
    )
    (i32.const 6)
   )
   (call $___assert_fail
    (i32.const 13076)
    (i32.const 13001)
    (i32.const 2318)
    (i32.const 13031)
   )
  )
  (if
   (i32.ge_u
    (i32.load offset=84
     (local.get $0)
    )
    (i32.const 6)
   )
   (call $___assert_fail
    (i32.const 13177)
    (i32.const 13001)
    (i32.const 2319)
    (i32.const 13031)
   )
  )
  (if
   (i32.le_s
    (local.get $5)
    (i32.const -1)
   )
   (return)
  )
  (if
   (i32.eqz
    (local.get $3)
   )
   (call $___assert_fail
    (i32.const 13329)
    (i32.const 13001)
    (i32.const 2336)
    (i32.const 13031)
   )
  )
  (if
   (i32.gt_u
    (local.get $6)
    (local.get $4)
   )
   (call $___assert_fail
    (i32.const 13337)
    (i32.const 13001)
    (i32.const 2341)
    (i32.const 13031)
   )
  )
  (drop
   (call $_memset
    (local.get $3)
    (i32.const 0)
    (local.get $4)
   )
  )
  (i32.store
   (local.get $0)
   (local.get $1)
  )
  (i32.store offset=12
   (local.get $0)
   (local.get $7)
  )
  (i32.store offset=16
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=28
   (local.get $0)
   (local.get $8)
  )
  (i32.store offset=68
   (local.get $0)
   (i32.const -1)
  )
  (i32.store offset=72
   (local.get $0)
   (i32.const 3)
  )
  (i32.store offset=76
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=88
   (local.get $0)
   (i32.const 1)
  )
  (i32.store offset=92
   (local.get $0)
   (i32.const 1)
  )
  (i32.store offset=96
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=128
   (local.get $0)
   (call $_stbir__get_coefficient_width
    (i32.load offset=80
     (local.get $0)
    )
    (f32.load offset=56
     (local.get $0)
    )
   )
  )
  (i32.store offset=132
   (local.get $0)
   (call $_stbir__get_coefficient_width
    (i32.load offset=84
     (local.get $0)
    )
    (f32.load offset=60
     (local.get $0)
    )
   )
  )
  (i32.store offset=136
   (local.get $0)
   (call $_stbir__get_filter_pixel_width
    (i32.load offset=80
     (local.get $0)
    )
    (f32.load offset=56
     (local.get $0)
    )
   )
  )
  (i32.store offset=140
   (local.get $0)
   (call $_stbir__get_filter_pixel_width
    (i32.load offset=84
     (local.get $0)
    )
    (f32.load offset=60
     (local.get $0)
    )
   )
  )
  (i32.store offset=144
   (local.get $0)
   (call $_stbir__get_filter_pixel_margin
    (i32.load offset=80
     (local.get $0)
    )
    (f32.load offset=56
     (local.get $0)
    )
   )
  )
  (i32.store offset=148
   (local.get $0)
   (call $_stbir__get_filter_pixel_margin
    (i32.load offset=84
     (local.get $0)
    )
    (f32.load offset=60
     (local.get $0)
    )
   )
  )
  (i32.store offset=160
   (local.get $0)
   (i32.mul
    (i32.load
     (local.get $9)
    )
    (i32.shl
     (local.tee $2
      (i32.load offset=20
       (local.get $0)
      )
     )
     (i32.const 2)
    )
   )
  )
  (i32.store offset=116
   (local.get $0)
   (i32.add
    (local.tee $5
     (i32.load offset=4
      (local.get $0)
     )
    )
    (i32.shl
     (i32.load offset=144
      (local.get $0)
     )
     (i32.const 1)
    )
   )
  )
  (i32.store offset=100
   (local.get $0)
   (local.get $3)
  )
  (i32.store offset=104
   (local.get $0)
   (local.tee $1
    (i32.add
     (local.get $3)
     (i32.load offset=188
      (local.get $0)
     )
    )
   )
  )
  (i32.store offset=108
   (local.get $0)
   (local.tee $1
    (i32.add
     (i32.load offset=192
      (local.get $0)
     )
     (local.get $1)
    )
   )
  )
  (i32.store offset=112
   (local.get $0)
   (local.tee $1
    (i32.add
     (i32.load offset=196
      (local.get $0)
     )
     (local.get $1)
    )
   )
  )
  (i32.store offset=120
   (local.get $0)
   (local.tee $1
    (i32.add
     (i32.load offset=200
      (local.get $0)
     )
     (local.get $1)
    )
   )
  )
  (if
   (call $_stbir__use_height_upsampling
    (local.get $0)
   )
   (block
    (i32.store offset=124
     (local.get $0)
     (i32.const 0)
    )
    (i32.store offset=180
     (local.get $0)
     (local.tee $1
      (i32.add
       (i32.load offset=204
        (local.get $0)
       )
       (local.get $1)
      )
     )
    )
    (i32.store offset=184
     (local.get $0)
     (local.tee $1
      (i32.add
       (i32.load offset=212
        (local.get $0)
       )
       (local.get $1)
      )
     )
    )
    (if
     (i32.ne
      (i32.add
       (i32.load offset=216
        (local.get $0)
       )
       (local.get $1)
      )
      (i32.add
       (local.get $3)
       (local.get $4)
      )
     )
     (call $___assert_fail
      (i32.const 13378)
      (i32.const 13001)
      (i32.const 2385)
      (i32.const 13031)
     )
    )
   )
   (block
    (i32.store offset=124
     (local.get $0)
     (local.tee $1
      (i32.add
       (i32.load offset=204
        (local.get $0)
       )
       (local.get $1)
      )
     )
    )
    (i32.store offset=180
     (local.get $0)
     (local.tee $1
      (i32.add
       (i32.load offset=208
        (local.get $0)
       )
       (local.get $1)
      )
     )
    )
    (i32.store offset=184
     (local.get $0)
     (i32.const 0)
    )
    (if
     (i32.ne
      (i32.add
       (i32.load offset=212
        (local.get $0)
       )
       (local.get $1)
      )
      (i32.add
       (local.get $3)
       (local.get $4)
      )
     )
     (call $___assert_fail
      (i32.const 13512)
      (i32.const 13001)
      (i32.const 2393)
      (i32.const 13031)
     )
    )
   )
  )
  (i32.store offset=176
   (local.get $0)
   (i32.const -1)
  )
  (call $_stbir__calculate_filters
   (i32.load offset=100
    (local.get $0)
   )
   (i32.load offset=104
    (local.get $0)
   )
   (i32.load offset=80
    (local.get $0)
   )
   (f32.load offset=56
    (local.get $0)
   )
   (f32.load offset=48
    (local.get $0)
   )
   (local.get $5)
   (local.get $2)
  )
  (call $_stbir__calculate_filters
   (i32.load offset=108
    (local.get $0)
   )
   (i32.load offset=112
    (local.get $0)
   )
   (i32.load offset=84
    (local.get $0)
   )
   (f32.load offset=60
    (local.get $0)
   )
   (f32.load offset=52
    (local.get $0)
   )
   (i32.load offset=8
    (local.get $0)
   )
   (i32.load offset=24
    (local.get $0)
   )
  )
  (if
   (call $_stbir__use_height_upsampling
    (local.get $0)
   )
   (call $_stbir__buffer_loop_upsample
    (local.get $0)
   )
   (call $_stbir__buffer_loop_downsample
    (local.get $0)
   )
  )
 )
 (func $_stbir__get_coefficient_width (; 446 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (result i32)
  (local $2 i32)
  (local.set $2
   (i32.eqz
    (call $_stbir__use_upsampling
     (local.get $1)
    )
   )
  )
  (local.set $0
   (i32.load
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 3)
     )
     (i32.const 4948)
    )
   )
  )
  (i32.trunc_f32_s
   (f32.ceil
    (f32.mul
     (call_indirect (type $FUNCSIG$ff)
      (select
       (local.get $1)
       (f32.div
        (f32.const 1)
        (local.get $1)
       )
       (local.get $2)
      )
      (i32.and
       (local.get $0)
       (i32.const 7)
      )
     )
     (f32.const 2)
    )
   )
  )
 )
 (func $_stbir__get_filter_pixel_width (; 447 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (result i32)
  (local $2 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (call $___assert_fail
    (i32.const 15338)
    (i32.const 13001)
    (i32.const 884)
    (i32.const 15350)
   )
  )
  (if
   (i32.ge_u
    (local.get $0)
    (i32.const 6)
   )
   (call $___assert_fail
    (i32.const 15380)
    (i32.const 13001)
    (i32.const 885)
    (i32.const 15350)
   )
  )
  (local.set $2
   (i32.eqz
    (call $_stbir__use_upsampling
     (local.get $1)
    )
   )
  )
  (local.set $0
   (i32.load
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 3)
     )
     (i32.const 4948)
    )
   )
  )
  (if (result i32)
   (local.get $2)
   (i32.trunc_f32_s
    (f32.ceil
     (f32.div
      (f32.mul
       (call_indirect (type $FUNCSIG$ff)
        (local.get $1)
        (i32.and
         (local.get $0)
         (i32.const 7)
        )
       )
       (f32.const 2)
      )
      (local.get $1)
     )
    )
   )
   (i32.trunc_f32_s
    (f32.ceil
     (f32.mul
      (call_indirect (type $FUNCSIG$ff)
       (f32.div
        (f32.const 1)
        (local.get $1)
       )
       (i32.and
        (local.get $0)
        (i32.const 7)
       )
      )
      (f32.const 2)
     )
    )
   )
  )
 )
 (func $_stbir__get_filter_pixel_margin (; 448 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (result i32)
  (i32.div_s
   (call $_stbir__get_filter_pixel_width
    (local.get $0)
    (local.get $1)
   )
   (i32.const 2)
  )
 )
 (func $_stbir__use_height_upsampling (; 449 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (call $_stbir__use_upsampling
   (f32.load offset=60
    (local.get $0)
   )
  )
 )
 (func $_stbir__calculate_filters (; 450 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f32) (param $4 f32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local.set $13
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $9
   (i32.add
    (local.get $7)
    (i32.const 8)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 4)
   )
  )
  (local.set $11
   (local.get $7)
  )
  (local.set $12
   (call $_stbir__get_contributors
    (local.get $3)
    (local.get $2)
    (local.get $5)
    (local.get $6)
   )
  )
  (local.set $7
   (i32.eqz
    (call $_stbir__use_upsampling
     (local.get $3)
    )
   )
  )
  (local.set $14
   (i32.load
    (i32.add
     (i32.shl
      (local.get $2)
      (i32.const 3)
     )
     (i32.const 4948)
    )
   )
  )
  (if
   (local.get $7)
   (block
    (local.set $8
     (f32.div
      (call_indirect (type $FUNCSIG$ff)
       (local.get $3)
       (i32.and
        (local.get $14)
        (i32.const 7)
       )
      )
      (local.get $3)
     )
    )
    (if
     (i32.gt_s
      (local.get $12)
      (i32.const 0)
     )
     (block
      (local.set $7
       (i32.const 0)
      )
      (loop $while-in
       (call $_stbir__calculate_sample_range_downsample
        (i32.sub
         (local.get $7)
         (call $_stbir__get_filter_pixel_margin
          (local.get $2)
          (local.get $3)
         )
        )
        (local.get $8)
        (local.get $3)
        (local.get $4)
        (local.get $10)
        (local.get $11)
        (local.get $9)
       )
       (call $_stbir__calculate_coefficients_downsample
        (local.get $2)
        (local.get $3)
        (i32.load
         (local.get $10)
        )
        (i32.load
         (local.get $11)
        )
        (f32.load
         (local.get $9)
        )
        (call $_stbir__get_contributor
         (local.get $0)
         (local.get $7)
        )
        (call $_stbir__get_coefficient
         (local.get $1)
         (local.get $2)
         (local.get $3)
         (local.get $7)
         (i32.const 0)
        )
       )
       (br_if $while-in
        (i32.ne
         (local.tee $7
          (i32.add
           (local.get $7)
           (i32.const 1)
          )
         )
         (local.get $12)
        )
       )
      )
     )
    )
    (call $_stbir__normalize_downsample_coefficients
     (local.get $0)
     (local.get $1)
     (local.get $2)
     (local.get $3)
     (local.get $5)
     (local.get $6)
    )
   )
   (block
    (local.set $8
     (call_indirect (type $FUNCSIG$ff)
      (f32.div
       (f32.const 1)
       (local.get $3)
      )
      (i32.and
       (local.get $14)
       (i32.const 7)
      )
     )
    )
    (if
     (i32.le_s
      (local.get $12)
      (i32.const 0)
     )
     (block
      (global.set $STACKTOP
       (local.get $13)
      )
      (return)
     )
    )
    (local.set $8
     (f32.mul
      (local.get $8)
      (local.get $3)
     )
    )
    (local.set $5
     (i32.const 0)
    )
    (loop $while-in1
     (call $_stbir__calculate_sample_range_upsample
      (local.get $5)
      (local.get $8)
      (local.get $3)
      (local.get $4)
      (local.get $10)
      (local.get $11)
      (local.get $9)
     )
     (call $_stbir__calculate_coefficients_upsample
      (local.get $2)
      (local.get $3)
      (i32.load
       (local.get $10)
      )
      (i32.load
       (local.get $11)
      )
      (f32.load
       (local.get $9)
      )
      (call $_stbir__get_contributor
       (local.get $0)
       (local.get $5)
      )
      (call $_stbir__get_coefficient
       (local.get $1)
       (local.get $2)
       (local.get $3)
       (local.get $5)
       (i32.const 0)
      )
     )
     (br_if $while-in1
      (i32.ne
       (local.tee $5
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
       )
       (local.get $12)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $13)
  )
 )
 (func $_stbir__buffer_loop_upsample (; 451 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 f32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $7
   (i32.add
    (local.get $1)
    (i32.const 8)
   )
  )
  (local.set $3
   (i32.add
    (local.get $1)
    (i32.const 4)
   )
  )
  (local.set $4
   (local.get $1)
  )
  (local.set $1
   (i32.load
    (i32.add
     (i32.shl
      (i32.load offset=84
       (local.get $0)
      )
      (i32.const 3)
     )
     (i32.const 4948)
    )
   )
  )
  (local.set $10
   (f32.mul
    (local.tee $8
     (f32.load offset=60
      (local.get $0)
     )
    )
    (call_indirect (type $FUNCSIG$ff)
     (f32.div
      (f32.const 1)
      (local.get $8)
     )
     (i32.and
      (local.get $1)
      (i32.const 7)
     )
    )
   )
  )
  (if
   (i32.eqz
    (call $_stbir__use_height_upsampling
     (local.get $0)
    )
   )
   (call $___assert_fail
    (i32.const 14509)
    (i32.const 13001)
    (i32.const 2069)
    (i32.const 14550)
   )
  )
  (if
   (i32.le_s
    (i32.load offset=24
     (local.get $0)
    )
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $6)
    )
    (return)
   )
  )
  (block $__rjto$4
   (block $__rjti$4
    (loop $while-in
     (block $__rjti$3
      (f32.store
       (local.get $7)
       (f32.const 0)
      )
      (i32.store
       (local.get $3)
       (i32.const 0)
      )
      (i32.store
       (local.get $4)
       (i32.const 0)
      )
      (call $_stbir__calculate_sample_range_upsample
       (local.get $2)
       (local.get $10)
       (local.get $8)
       (f32.load offset=52
        (local.get $0)
       )
       (local.get $3)
       (local.get $4)
       (local.get $7)
      )
      (br_if $__rjti$3
       (i32.ge_s
        (i32.sub
         (local.tee $9
          (i32.load
           (local.get $4)
          )
         )
         (local.tee $5
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.tee $11
         (i32.load offset=164
          (local.get $0)
         )
        )
       )
      )
      (block $__rjto$2
       (block $__rjti$2
        (br_if $__rjti$2
         (i32.le_s
          (i32.load offset=176
           (local.get $0)
          )
          (i32.const -1)
         )
        )
        (if
         (i32.gt_s
          (local.get $5)
          (local.tee $1
           (i32.load offset=168
            (local.get $0)
           )
          )
         )
         (block
          (local.set $12
           (i32.load offset=172
            (local.get $0)
           )
          )
          (block $__rjti$1
           (loop $while-in1
            (if
             (i32.ne
              (local.get $1)
              (local.get $12)
             )
             (block
              (i32.store offset=168
               (local.get $0)
               (local.tee $1
                (i32.add
                 (local.get $1)
                 (i32.const 1)
                )
               )
              )
              (i32.store offset=176
               (local.get $0)
               (local.tee $13
                (i32.rem_s
                 (i32.add
                  (i32.load offset=176
                   (local.get $0)
                  )
                  (i32.const 1)
                 )
                 (local.get $11)
                )
               )
              )
              (br_if $while-in1
               (i32.gt_s
                (local.get $5)
                (local.get $1)
               )
              )
              (br $__rjti$1)
             )
            )
           )
           (i32.store offset=176
            (local.get $0)
            (i32.const -1)
           )
           (i32.store offset=168
            (local.get $0)
            (i32.const 0)
           )
           (i32.store offset=172
            (local.get $0)
            (i32.const 0)
           )
           (br $__rjti$2)
          )
          (br_if $__rjti$2
           (i32.lt_s
            (local.get $13)
            (i32.const 0)
           )
          )
         )
        )
        (br $__rjto$2)
       )
       (call $_stbir__decode_and_resample_upsample
        (local.get $0)
        (local.get $5)
       )
      )
      (if
       (i32.gt_s
        (local.get $9)
        (local.tee $1
         (i32.load offset=172
          (local.get $0)
         )
        )
       )
       (loop $while-in3
        (call $_stbir__decode_and_resample_upsample
         (local.get $0)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (br_if $while-in3
         (i32.gt_s
          (local.get $9)
          (local.tee $1
           (i32.load offset=172
            (local.get $0)
           )
          )
         )
        )
       )
      )
      (call $_stbir__resample_vertical_upsample
       (local.get $0)
       (local.get $2)
      )
      (br_if $while-in
       (i32.lt_s
        (local.tee $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.load offset=24
         (local.get $0)
        )
       )
      )
      (br $__rjti$4)
     )
    )
    (call $___assert_fail
     (i32.const 14578)
     (i32.const 13001)
     (i32.const 2078)
     (i32.const 14550)
    )
    (br $__rjto$4)
   )
   (global.set $STACKTOP
    (local.get $6)
   )
  )
 )
 (func $_stbir__buffer_loop_downsample (; 452 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $9
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 4)
   )
  )
  (local.set $10
   (i32.load offset=24
    (local.get $0)
   )
  )
  (local.set $1
   (i32.load
    (i32.add
     (i32.shl
      (i32.load offset=84
       (local.get $0)
      )
      (i32.const 3)
     )
     (i32.const 4948)
    )
   )
  )
  (local.set $11
   (f32.div
    (call_indirect (type $FUNCSIG$ff)
     (local.tee $7
      (f32.load offset=60
       (local.get $0)
      )
     )
     (i32.and
      (local.get $1)
      (i32.const 7)
     )
    )
    (local.get $7)
   )
  )
  (local.set $8
   (i32.add
    (local.tee $1
     (i32.load offset=148
      (local.get $0)
     )
    )
    (i32.load offset=8
     (local.get $0)
    )
   )
  )
  (if
   (call $_stbir__use_height_upsampling
    (local.get $0)
   )
   (call $___assert_fail
    (i32.const 13642)
    (i32.const 13001)
    (i32.const 2170)
    (i32.const 13684)
   )
  )
  (if
   (i32.le_s
    (local.get $8)
    (local.tee $2
     (i32.sub
      (i32.const 0)
      (local.get $1)
     )
    )
   )
   (block
    (call $_stbir__empty_ring_buffer
     (local.get $0)
     (i32.load offset=24
      (local.get $0)
     )
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (loop $while-in
     (block $__rjti$0
      (call $_stbir__calculate_sample_range_downsample
       (local.get $2)
       (local.get $11)
       (local.get $7)
       (f32.load offset=52
        (local.get $0)
       )
       (local.get $6)
       (local.get $3)
       (local.get $9)
      )
      (br_if $__rjti$0
       (i32.ge_s
        (i32.sub
         (local.tee $4
          (i32.load
           (local.get $3)
          )
         )
         (local.tee $1
          (i32.load
           (local.get $6)
          )
         )
        )
        (i32.load offset=164
         (local.get $0)
        )
       )
      )
      (if
       (i32.and
        (i32.lt_s
         (local.get $1)
         (local.get $10)
        )
        (i32.gt_s
         (local.get $4)
         (i32.const -1)
        )
       )
       (block
        (call $_stbir__empty_ring_buffer
         (local.get $0)
         (local.get $1)
        )
        (call $_stbir__decode_and_resample_downsample
         (local.get $0)
         (local.get $2)
        )
        (if
         (i32.lt_s
          (i32.load offset=176
           (local.get $0)
          )
          (i32.const 0)
         )
         (drop
          (call $_stbir__add_empty_ring_buffer_entry
           (local.get $0)
           (local.get $1)
          )
         )
        )
        (if
         (i32.gt_s
          (local.get $4)
          (local.tee $1
           (i32.load offset=172
            (local.get $0)
           )
          )
         )
         (loop $while-in1
          (drop
           (call $_stbir__add_empty_ring_buffer_entry
            (local.get $0)
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
          )
          (br_if $while-in1
           (i32.gt_s
            (local.get $4)
            (local.tee $1
             (i32.load offset=172
              (local.get $0)
             )
            )
           )
          )
         )
        )
        (call $_stbir__resample_vertical_downsample
         (local.get $0)
         (local.get $2)
        )
       )
      )
      (br_if $while-in
       (i32.lt_s
        (local.tee $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (local.get $8)
       )
      )
      (br $__rjti$1)
     )
    )
    (call $___assert_fail
     (i32.const 13714)
     (i32.const 13001)
     (i32.const 2179)
     (i32.const 13684)
    )
    (br $__rjto$1)
   )
   (call $_stbir__empty_ring_buffer
    (local.get $0)
    (i32.load offset=24
     (local.get $0)
    )
   )
   (global.set $STACKTOP
    (local.get $5)
   )
  )
 )
 (func $_stbir__calculate_sample_range_downsample (; 453 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 f32)
  (f32.store
   (local.get $6)
   (f32.sub
    (f32.mul
     (local.tee $7
      (f32.add
       (f32.convert_i32_s
        (local.get $0)
       )
       (f32.const 0.5)
      )
     )
     (local.get $2)
    )
    (local.get $3)
   )
  )
  (i32.store
   (local.get $4)
   (i32.trunc_f64_s
    (f64.floor
     (f64.add
      (f64.promote_f32
       (f32.sub
        (f32.mul
         (f32.sub
          (local.get $7)
          (local.get $1)
         )
         (local.get $2)
        )
        (local.get $3)
       )
      )
      (f64.const 0.5)
     )
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.trunc_f64_s
    (f64.floor
     (f64.add
      (f64.promote_f32
       (f32.sub
        (f32.mul
         (f32.add
          (local.get $7)
          (local.get $1)
         )
         (local.get $2)
        )
        (local.get $3)
       )
      )
      (f64.const -0.5)
     )
    )
   )
  )
 )
 (func $_stbir__empty_ring_buffer (; 454 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $5
   (i32.load offset=28
    (local.get $0)
   )
  )
  (local.set $6
   (i32.load
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
  )
  (local.set $7
   (i32.load offset=68
    (local.get $0)
   )
  )
  (local.set $3
   (i32.load offset=76
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load offset=96
    (local.get $0)
   )
  )
  (local.set $8
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $9
   (i32.load offset=16
    (local.get $0)
   )
  )
  (local.set $10
   (i32.load offset=180
    (local.get $0)
   )
  )
  (local.set $11
   (i32.load offset=160
    (local.get $0)
   )
  )
  (if
   (i32.le_s
    (i32.load offset=176
     (local.get $0)
    )
    (i32.const -1)
   )
   (return)
  )
  (if
   (i32.ge_s
    (local.tee $2
     (i32.load offset=168
      (local.get $0)
     )
    )
    (local.get $1)
   )
   (return)
  )
  (local.set $3
   (i32.add
    (local.get $4)
    (i32.shl
     (local.get $3)
     (i32.const 1)
    )
   )
  )
  (local.set $4
   (i32.shr_u
    (local.get $11)
    (i32.const 2)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in
     (block $while-out
      (if
       (i32.gt_s
        (local.get $2)
        (i32.const -1)
       )
       (if
        (i32.lt_s
         (local.get $2)
         (i32.load offset=24
          (local.get $0)
         )
        )
        (call $_stbir__encode_scanline
         (local.get $0)
         (local.get $8)
         (i32.add
          (local.get $9)
          (i32.mul
           (local.get $2)
           (local.get $5)
          )
         )
         (call $_stbir__get_ring_buffer_entry
          (local.get $10)
          (i32.load offset=176
           (local.get $0)
          )
          (local.get $4)
         )
         (local.get $6)
         (local.get $7)
         (local.get $3)
        )
       )
      )
      (br_if $while-out
       (i32.eq
        (local.tee $2
         (i32.load offset=168
          (local.get $0)
         )
        )
        (i32.load offset=172
         (local.get $0)
        )
       )
      )
      (i32.store offset=168
       (local.get $0)
       (local.tee $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
      )
      (i32.store offset=176
       (local.get $0)
       (i32.rem_s
        (i32.add
         (i32.load offset=176
          (local.get $0)
         )
         (i32.const 1)
        )
        (i32.load offset=164
         (local.get $0)
        )
       )
      )
      (br_if $while-in
       (i32.lt_s
        (local.get $2)
        (local.get $1)
       )
      )
      (br $__rjti$0)
     )
    )
    (br $__rjto$0)
   )
   (return)
  )
  (i32.store offset=176
   (local.get $0)
   (i32.const -1)
  )
  (i32.store offset=168
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=172
   (local.get $0)
   (i32.const 0)
  )
 )
 (func $_stbir__decode_and_resample_downsample (; 455 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (call $_stbir__decode_scanline
   (local.get $0)
   (local.get $1)
  )
  (drop
   (call $_memset
    (i32.load offset=124
     (local.get $0)
    )
    (i32.const 0)
    (i32.mul
     (i32.load
      (i32.sub
       (local.get $0)
       (i32.const -64)
      )
     )
     (i32.shl
      (i32.load offset=20
       (local.get $0)
      )
      (i32.const 2)
     )
    )
   )
  )
  (local.set $2
   (i32.eqz
    (call $_stbir__use_width_upsampling
     (local.get $0)
    )
   )
  )
  (local.set $1
   (i32.load offset=124
    (local.get $0)
   )
  )
  (if
   (local.get $2)
   (call $_stbir__resample_horizontal_downsample
    (local.get $0)
    (local.get $1)
   )
   (call $_stbir__resample_horizontal_upsample
    (local.get $0)
    (local.get $1)
   )
  )
 )
 (func $_stbir__add_empty_ring_buffer_entry (; 456 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (i32.store offset=172
   (local.get $0)
   (local.get $1)
  )
  (if
   (i32.lt_s
    (local.tee $2
     (i32.load offset=176
      (local.get $0)
     )
    )
    (i32.const 0)
   )
   (block
    (i32.store offset=176
     (local.get $0)
     (i32.const 0)
    )
    (i32.store offset=168
     (local.get $0)
     (local.get $1)
    )
   )
   (if
    (i32.eq
     (local.get $2)
     (local.tee $1
      (i32.rem_s
       (i32.sub
        (i32.add
         (local.get $1)
         (local.get $2)
        )
        (i32.load offset=168
         (local.get $0)
        )
       )
       (i32.load offset=164
        (local.get $0)
       )
      )
     )
    )
    (call $___assert_fail
     (i32.const 13832)
     (i32.const 13001)
     (i32.const 1431)
     (i32.const 13889)
    )
    (local.set $3
     (local.get $1)
    )
   )
  )
  (drop
   (call $_memset
    (local.tee $1
     (call $_stbir__get_ring_buffer_entry
      (i32.load offset=180
       (local.get $0)
      )
      (local.get $3)
      (i32.shr_u
       (local.tee $0
        (i32.load offset=160
         (local.get $0)
        )
       )
       (i32.const 2)
      )
     )
    )
    (i32.const 0)
    (local.get $0)
   )
  )
  (local.get $1)
 )
 (func $_stbir__resample_vertical_downsample (; 457 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local.set $7
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $11
   (i32.load offset=112
    (local.get $0)
   )
  )
  (local.set $9
   (i32.load
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
  )
  (local.set $12
   (i32.load offset=164
    (local.get $0)
   )
  )
  (local.set $5
   (i32.load offset=124
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load offset=132
    (local.get $0)
   )
  )
  (local.set $13
   (i32.load offset=180
    (local.get $0)
   )
  )
  (local.set $14
   (i32.load offset=176
    (local.get $0)
   )
  )
  (local.set $15
   (i32.load offset=168
    (local.get $0)
   )
  )
  (local.set $16
   (i32.shr_u
    (i32.load offset=160
     (local.get $0)
    )
    (i32.const 2)
   )
  )
  (local.set $1
   (i32.load
    (i32.add
     (local.tee $10
      (i32.load offset=108
       (local.get $0)
      )
     )
     (i32.shl
      (local.tee $2
       (i32.add
        (local.get $1)
        (i32.load offset=148
         (local.get $0)
        )
       )
      )
      (i32.const 3)
     )
    )
   )
  )
  (local.set $10
   (i32.load offset=4
    (i32.add
     (i32.shl
      (local.get $2)
      (i32.const 3)
     )
     (local.get $10)
    )
   )
  )
  (if
   (call $_stbir__use_height_upsampling
    (local.get $0)
   )
   (call $___assert_fail
    (i32.const 13642)
    (i32.const 13001)
    (i32.const 2004)
    (i32.const 13796)
   )
  )
  (if
   (i32.gt_s
    (local.get $1)
    (local.get $10)
   )
   (return)
  )
  (local.set $17
   (i32.sub
    (i32.mul
     (local.get $2)
     (local.get $4)
    )
    (local.get $1)
   )
  )
  (local.set $18
   (i32.gt_s
    (local.get $7)
    (i32.const 0)
   )
  )
  (local.set $19
   (i32.gt_s
    (local.get $7)
    (i32.const 0)
   )
  )
  (local.set $20
   (i32.gt_s
    (local.get $7)
    (i32.const 0)
   )
  )
  (local.set $21
   (i32.gt_s
    (local.get $7)
    (i32.const 0)
   )
  )
  (local.set $22
   (i32.gt_s
    (local.get $7)
    (i32.const 0)
   )
  )
  (local.set $23
   (i32.gt_s
    (local.get $9)
    (i32.const 0)
   )
  )
  (local.set $0
   (local.get $1)
  )
  (loop $while-in
   (local.set $6
    (f32.load
     (i32.add
      (i32.shl
       (i32.add
        (local.get $0)
        (local.get $17)
       )
       (i32.const 2)
      )
      (local.get $11)
     )
    )
   )
   (local.set $4
    (call $_stbir__get_ring_buffer_scanline
     (local.get $0)
     (local.get $13)
     (local.get $14)
     (local.get $15)
     (local.get $12)
     (local.get $16)
    )
   )
   (block $switch
    (block $switch-default
     (block $switch-case10
      (block $switch-case7
       (block $switch-case4
        (block $switch-case
         (br_table $switch-case $switch-case4 $switch-case7 $switch-case10 $switch-default
          (i32.sub
           (local.get $9)
           (i32.const 1)
          )
         )
        )
        (if
         (local.get $19)
         (block
          (local.set $1
           (i32.const 0)
          )
          (loop $while-in1
           (f32.store
            (local.tee $2
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $4)
             )
            )
            (f32.add
             (f32.load
              (local.get $2)
             )
             (f32.mul
              (local.get $6)
              (f32.load
               (i32.add
                (i32.shl
                 (local.get $1)
                 (i32.const 2)
                )
                (local.get $5)
               )
              )
             )
            )
           )
           (br_if $while-in1
            (i32.ne
             (local.tee $1
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (local.get $7)
            )
           )
          )
         )
        )
        (br $switch)
       )
       (if
        (local.get $20)
        (block
         (local.set $1
          (i32.const 0)
         )
         (loop $while-in3
          (f32.store
           (local.tee $3
            (i32.add
             (i32.shl
              (local.tee $2
               (i32.shl
                (local.get $1)
                (i32.const 1)
               )
              )
              (i32.const 2)
             )
             (local.get $4)
            )
           )
           (f32.add
            (f32.load
             (local.get $3)
            )
            (f32.mul
             (local.get $6)
             (f32.load
              (i32.add
               (i32.shl
                (local.get $2)
                (i32.const 2)
               )
               (local.get $5)
              )
             )
            )
           )
          )
          (f32.store
           (local.tee $3
            (i32.add
             (i32.shl
              (local.tee $2
               (i32.or
                (local.get $2)
                (i32.const 1)
               )
              )
              (i32.const 2)
             )
             (local.get $4)
            )
           )
           (f32.add
            (f32.load
             (local.get $3)
            )
            (f32.mul
             (local.get $6)
             (f32.load
              (i32.add
               (i32.shl
                (local.get $2)
                (i32.const 2)
               )
               (local.get $5)
              )
             )
            )
           )
          )
          (br_if $while-in3
           (i32.ne
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.get $7)
           )
          )
         )
        )
       )
       (br $switch)
      )
      (if
       (local.get $21)
       (block
        (local.set $1
         (i32.const 0)
        )
        (loop $while-in6
         (f32.store
          (local.tee $3
           (i32.add
            (i32.shl
             (local.tee $2
              (i32.mul
               (local.get $1)
               (i32.const 3)
              )
             )
             (i32.const 2)
            )
            (local.get $4)
           )
          )
          (f32.add
           (f32.load
            (local.get $3)
           )
           (f32.mul
            (local.get $6)
            (f32.load
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (local.get $5)
             )
            )
           )
          )
         )
         (f32.store
          (local.tee $8
           (i32.add
            (i32.shl
             (local.tee $3
              (i32.add
               (local.get $2)
               (i32.const 1)
              )
             )
             (i32.const 2)
            )
            (local.get $4)
           )
          )
          (f32.add
           (f32.load
            (local.get $8)
           )
           (f32.mul
            (local.get $6)
            (f32.load
             (i32.add
              (i32.shl
               (local.get $3)
               (i32.const 2)
              )
              (local.get $5)
             )
            )
           )
          )
         )
         (f32.store
          (local.tee $3
           (i32.add
            (i32.shl
             (local.tee $2
              (i32.add
               (local.get $2)
               (i32.const 2)
              )
             )
             (i32.const 2)
            )
            (local.get $4)
           )
          )
          (f32.add
           (f32.load
            (local.get $3)
           )
           (f32.mul
            (local.get $6)
            (f32.load
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (local.get $5)
             )
            )
           )
          )
         )
         (br_if $while-in6
          (i32.ne
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (local.get $7)
          )
         )
        )
       )
      )
      (br $switch)
     )
     (if
      (local.get $22)
      (block
       (local.set $1
        (i32.const 0)
       )
       (loop $while-in9
        (f32.store
         (local.tee $3
          (i32.add
           (i32.shl
            (local.tee $2
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
            )
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (f32.add
          (f32.load
           (local.get $3)
          )
          (f32.mul
           (local.get $6)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $2)
              (i32.const 2)
             )
             (local.get $5)
            )
           )
          )
         )
        )
        (f32.store
         (local.tee $8
          (i32.add
           (i32.shl
            (local.tee $3
             (i32.or
              (local.get $2)
              (i32.const 1)
             )
            )
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (f32.add
          (f32.load
           (local.get $8)
          )
          (f32.mul
           (local.get $6)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 2)
             )
             (local.get $5)
            )
           )
          )
         )
        )
        (f32.store
         (local.tee $8
          (i32.add
           (i32.shl
            (local.tee $3
             (i32.or
              (local.get $2)
              (i32.const 2)
             )
            )
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (f32.add
          (f32.load
           (local.get $8)
          )
          (f32.mul
           (local.get $6)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 2)
             )
             (local.get $5)
            )
           )
          )
         )
        )
        (f32.store
         (local.tee $3
          (i32.add
           (i32.shl
            (local.tee $2
             (i32.or
              (local.get $2)
              (i32.const 3)
             )
            )
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (f32.add
          (f32.load
           (local.get $3)
          )
          (f32.mul
           (local.get $6)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $2)
              (i32.const 2)
             )
             (local.get $5)
            )
           )
          )
         )
        )
        (br_if $while-in9
         (i32.ne
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (local.get $7)
         )
        )
       )
      )
     )
     (br $switch)
    )
    (if
     (local.get $18)
     (block
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in12
       (local.set $3
        (i32.mul
         (local.get $1)
         (local.get $9)
        )
       )
       (if
        (local.get $23)
        (block
         (local.set $2
          (i32.const 0)
         )
         (loop $while-in14
          (f32.store
           (local.tee $24
            (i32.add
             (i32.shl
              (local.tee $8
               (i32.add
                (local.get $2)
                (local.get $3)
               )
              )
              (i32.const 2)
             )
             (local.get $4)
            )
           )
           (f32.add
            (f32.load
             (local.get $24)
            )
            (f32.mul
             (local.get $6)
             (f32.load
              (i32.add
               (i32.shl
                (local.get $8)
                (i32.const 2)
               )
               (local.get $5)
              )
             )
            )
           )
          )
          (br_if $while-in14
           (i32.ne
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (local.get $9)
           )
          )
         )
        )
       )
       (br_if $while-in12
        (i32.ne
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (local.get $7)
        )
       )
      )
     )
    )
   )
   (local.set $1
    (i32.add
     (local.get $0)
     (i32.const 1)
    )
   )
   (if
    (i32.lt_s
     (local.get $0)
     (local.get $10)
    )
    (block
     (local.set $0
      (local.get $1)
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_stbir__get_ring_buffer_scanline (; 458 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (call $_stbir__get_ring_buffer_entry
   (local.get $1)
   (i32.rem_s
    (i32.sub
     (i32.add
      (local.get $0)
      (local.get $2)
     )
     (local.get $3)
    )
    (local.get $4)
   )
   (local.get $5)
  )
 )
 (func $_stbir__get_ring_buffer_entry (; 459 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (i32.add
   (i32.shl
    (i32.mul
     (local.get $1)
     (local.get $2)
    )
    (i32.const 2)
   )
   (local.get $0)
  )
 )
 (func $_stbir__decode_scanline (; 460 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 f32)
  (local $16 i32)
  (local $17 f32)
  (local.set $3
   (i32.load
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
  )
  (local.set $13
   (i32.load offset=68
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load offset=76
    (local.get $0)
   )
  )
  (local.set $5
   (i32.load offset=96
    (local.get $0)
   )
  )
  (local.set $6
   (i32.load offset=4
    (local.get $0)
   )
  )
  (local.set $7
   (i32.load offset=12
    (local.get $0)
   )
  )
  (local.set $8
   (call $_stbir__get_decode_buffer
    (local.get $0)
   )
  )
  (local.set $14
   (i32.load offset=88
    (local.get $0)
   )
  )
  (local.set $10
   (call $_stbir__edge_wrap
    (local.tee $9
     (i32.load offset=92
      (local.get $0)
     )
    )
    (local.get $1)
    (i32.load offset=8
     (local.get $0)
    )
   )
  )
  (local.set $16
   (i32.load
    (local.get $0)
   )
  )
  (local.set $12
   (i32.add
    (local.tee $11
     (i32.load offset=144
      (local.get $0)
     )
    )
    (local.get $6)
   )
  )
  (local.set $2
   (i32.sub
    (i32.const 0)
    (local.get $11)
   )
  )
  (if
   (i32.eq
    (local.get $9)
    (i32.const 4)
   )
   (block $do-once
    (if
     (i32.ge_s
      (local.get $1)
      (i32.const 0)
     )
     (br_if $do-once
      (i32.gt_s
       (i32.load offset=8
        (local.get $0)
       )
       (local.get $1)
      )
     )
    )
    (if
     (i32.le_s
      (local.get $12)
      (local.get $2)
     )
     (return)
    )
    (local.set $1
     (i32.gt_s
      (local.get $3)
      (i32.const 0)
     )
    )
    (local.set $2
     (i32.shl
      (local.get $3)
      (i32.const 2)
     )
    )
    (local.set $6
     (i32.add
      (i32.shl
       (local.get $11)
       (i32.const 1)
      )
      (local.get $6)
     )
    )
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in
     (if
      (local.get $1)
      (drop
       (call $_memset
        (i32.add
         (i32.shl
          (i32.mul
           (local.get $3)
           (i32.sub
            (local.get $0)
            (local.get $11)
           )
          )
          (i32.const 2)
         )
         (local.get $8)
        )
        (i32.const 0)
        (local.get $2)
       )
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.get $6)
      )
     )
    )
    (return)
   )
  )
  (local.set $7
   (i32.add
    (local.get $16)
    (i32.mul
     (local.get $7)
     (local.get $10)
    )
   )
  )
  (block $switch
   (block $switch-default
    (block $switch-case38
     (block $switch-case33
      (block $switch-case28
       (block $switch-case23
        (block $switch-case18
         (block $switch-case13
          (block $switch-case8
           (block $switch-case
            (br_table $switch-case $switch-case8 $switch-case13 $switch-case18 $switch-case23 $switch-case28 $switch-case33 $switch-case38 $switch-default
             (i32.add
              (local.get $5)
              (i32.shl
               (local.get $4)
               (i32.const 1)
              )
             )
            )
           )
           (if
            (i32.gt_s
             (local.get $12)
             (local.get $2)
            )
            (block
             (local.set $4
              (i32.gt_s
               (local.get $3)
               (i32.const 0)
              )
             )
             (local.set $5
              (i32.add
               (local.get $6)
               (local.get $11)
              )
             )
             (loop $while-in1
              (local.set $9
               (i32.mul
                (local.get $2)
                (local.get $3)
               )
              )
              (local.set $10
               (i32.mul
                (call $_stbir__edge_wrap
                 (local.get $14)
                 (local.get $2)
                 (local.get $6)
                )
                (local.get $3)
               )
              )
              (if
               (local.get $4)
               (block
                (local.set $1
                 (i32.const 0)
                )
                (loop $while-in3
                 (f32.store
                  (i32.add
                   (i32.shl
                    (i32.add
                     (local.get $1)
                     (local.get $9)
                    )
                    (i32.const 2)
                   )
                   (local.get $8)
                  )
                  (f32.div
                   (f32.convert_i32_s
                    (i32.load8_u
                     (i32.add
                      (local.get $7)
                      (i32.add
                       (local.get $1)
                       (local.get $10)
                      )
                     )
                    )
                   )
                   (f32.const 255)
                  )
                 )
                 (br_if $while-in3
                  (i32.ne
                   (local.tee $1
                    (i32.add
                     (local.get $1)
                     (i32.const 1)
                    )
                   )
                   (local.get $3)
                  )
                 )
                )
               )
              )
              (br_if $while-in1
               (i32.ne
                (local.tee $2
                 (i32.add
                  (local.get $2)
                  (i32.const 1)
                 )
                )
                (local.get $5)
               )
              )
             )
            )
           )
           (br $switch)
          )
          (if
           (i32.gt_s
            (local.get $12)
            (local.get $2)
           )
           (block
            (local.set $9
             (i32.gt_s
              (local.get $3)
              (i32.const 0)
             )
            )
            (local.set $10
             (i32.add
              (local.get $6)
              (local.get $11)
             )
            )
            (loop $while-in5
             (local.set $4
              (i32.mul
               (local.get $2)
               (local.get $3)
              )
             )
             (local.set $5
              (i32.mul
               (call $_stbir__edge_wrap
                (local.get $14)
                (local.get $2)
                (local.get $6)
               )
               (local.get $3)
              )
             )
             (if
              (local.get $9)
              (block
               (local.set $1
                (i32.const 0)
               )
               (loop $while-in7
                (i32.store
                 (i32.add
                  (i32.shl
                   (i32.add
                    (local.get $1)
                    (local.get $4)
                   )
                   (i32.const 2)
                  )
                  (local.get $8)
                 )
                 (i32.load
                  (i32.add
                   (i32.shl
                    (i32.load8_u
                     (i32.add
                      (local.get $7)
                      (i32.add
                       (local.get $1)
                       (local.get $5)
                      )
                     )
                    )
                    (i32.const 2)
                   )
                   (i32.const 4992)
                  )
                 )
                )
                (br_if $while-in7
                 (i32.ne
                  (local.tee $1
                   (i32.add
                    (local.get $1)
                    (i32.const 1)
                   )
                  )
                  (local.get $3)
                 )
                )
               )
              )
             )
             (if
              (i32.eqz
               (i32.and
                (i32.load offset=72
                 (local.get $0)
                )
                (i32.const 2)
               )
              )
              (f32.store
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $4)
                  (local.get $13)
                 )
                 (i32.const 2)
                )
                (local.get $8)
               )
               (f32.div
                (f32.convert_i32_s
                 (i32.load8_u
                  (i32.add
                   (local.get $7)
                   (i32.add
                    (local.get $5)
                    (local.get $13)
                   )
                  )
                 )
                )
                (f32.const 255)
               )
              )
             )
             (br_if $while-in5
              (i32.ne
               (local.tee $2
                (i32.add
                 (local.get $2)
                 (i32.const 1)
                )
               )
               (local.get $10)
              )
             )
            )
           )
          )
          (br $switch)
         )
         (if
          (i32.gt_s
           (local.get $12)
           (local.get $2)
          )
          (block
           (local.set $4
            (i32.gt_s
             (local.get $3)
             (i32.const 0)
            )
           )
           (local.set $5
            (i32.add
             (local.get $6)
             (local.get $11)
            )
           )
           (loop $while-in10
            (local.set $9
             (i32.mul
              (local.get $2)
              (local.get $3)
             )
            )
            (local.set $10
             (i32.mul
              (call $_stbir__edge_wrap
               (local.get $14)
               (local.get $2)
               (local.get $6)
              )
              (local.get $3)
             )
            )
            (if
             (local.get $4)
             (block
              (local.set $1
               (i32.const 0)
              )
              (loop $while-in12
               (f32.store
                (i32.add
                 (i32.shl
                  (i32.add
                   (local.get $1)
                   (local.get $9)
                  )
                  (i32.const 2)
                 )
                 (local.get $8)
                )
                (f32.div
                 (f32.convert_i32_s
                  (i32.load16_u
                   (i32.add
                    (i32.shl
                     (i32.add
                      (local.get $1)
                      (local.get $10)
                     )
                     (i32.const 1)
                    )
                    (local.get $7)
                   )
                  )
                 )
                 (f32.const 65535)
                )
               )
               (br_if $while-in12
                (i32.ne
                 (local.tee $1
                  (i32.add
                   (local.get $1)
                   (i32.const 1)
                  )
                 )
                 (local.get $3)
                )
               )
              )
             )
            )
            (br_if $while-in10
             (i32.ne
              (local.tee $2
               (i32.add
                (local.get $2)
                (i32.const 1)
               )
              )
              (local.get $5)
             )
            )
           )
          )
         )
         (br $switch)
        )
        (if
         (i32.gt_s
          (local.get $12)
          (local.get $2)
         )
         (block
          (local.set $9
           (i32.gt_s
            (local.get $3)
            (i32.const 0)
           )
          )
          (local.set $10
           (i32.add
            (local.get $6)
            (local.get $11)
           )
          )
          (loop $while-in15
           (local.set $4
            (i32.mul
             (local.get $2)
             (local.get $3)
            )
           )
           (local.set $5
            (i32.mul
             (call $_stbir__edge_wrap
              (local.get $14)
              (local.get $2)
              (local.get $6)
             )
             (local.get $3)
            )
           )
           (if
            (local.get $9)
            (block
             (local.set $1
              (i32.const 0)
             )
             (loop $while-in17
              (f32.store
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $1)
                  (local.get $4)
                 )
                 (i32.const 2)
                )
                (local.get $8)
               )
               (call $_stbir__srgb_to_linear
                (f32.div
                 (f32.convert_i32_s
                  (i32.load16_u
                   (i32.add
                    (i32.shl
                     (i32.add
                      (local.get $1)
                      (local.get $5)
                     )
                     (i32.const 1)
                    )
                    (local.get $7)
                   )
                  )
                 )
                 (f32.const 65535)
                )
               )
              )
              (br_if $while-in17
               (i32.ne
                (local.tee $1
                 (i32.add
                  (local.get $1)
                  (i32.const 1)
                 )
                )
                (local.get $3)
               )
              )
             )
            )
           )
           (if
            (i32.eqz
             (i32.and
              (i32.load offset=72
               (local.get $0)
              )
              (i32.const 2)
             )
            )
            (f32.store
             (i32.add
              (i32.shl
               (i32.add
                (local.get $4)
                (local.get $13)
               )
               (i32.const 2)
              )
              (local.get $8)
             )
             (f32.div
              (f32.convert_i32_s
               (i32.load16_u
                (i32.add
                 (i32.shl
                  (i32.add
                   (local.get $5)
                   (local.get $13)
                  )
                  (i32.const 1)
                 )
                 (local.get $7)
                )
               )
              )
              (f32.const 65535)
             )
            )
           )
           (br_if $while-in15
            (i32.ne
             (local.tee $2
              (i32.add
               (local.get $2)
               (i32.const 1)
              )
             )
             (local.get $10)
            )
           )
          )
         )
        )
        (br $switch)
       )
       (if
        (i32.gt_s
         (local.get $12)
         (local.get $2)
        )
        (block
         (local.set $4
          (i32.gt_s
           (local.get $3)
           (i32.const 0)
          )
         )
         (local.set $5
          (i32.add
           (local.get $6)
           (local.get $11)
          )
         )
         (loop $while-in20
          (local.set $9
           (i32.mul
            (local.get $2)
            (local.get $3)
           )
          )
          (local.set $10
           (i32.mul
            (call $_stbir__edge_wrap
             (local.get $14)
             (local.get $2)
             (local.get $6)
            )
            (local.get $3)
           )
          )
          (if
           (local.get $4)
           (block
            (local.set $1
             (i32.const 0)
            )
            (loop $while-in22
             (f32.store
              (i32.add
               (i32.shl
                (i32.add
                 (local.get $1)
                 (local.get $9)
                )
                (i32.const 2)
               )
               (local.get $8)
              )
              (f32.demote_f64
               (f64.div
                (f64.convert_i32_u
                 (i32.load
                  (i32.add
                   (i32.shl
                    (i32.add
                     (local.get $1)
                     (local.get $10)
                    )
                    (i32.const 2)
                   )
                   (local.get $7)
                  )
                 )
                )
                (f64.const 4294967295)
               )
              )
             )
             (br_if $while-in22
              (i32.ne
               (local.tee $1
                (i32.add
                 (local.get $1)
                 (i32.const 1)
                )
               )
               (local.get $3)
              )
             )
            )
           )
          )
          (br_if $while-in20
           (i32.ne
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (local.get $5)
           )
          )
         )
        )
       )
       (br $switch)
      )
      (if
       (i32.gt_s
        (local.get $12)
        (local.get $2)
       )
       (block
        (local.set $9
         (i32.gt_s
          (local.get $3)
          (i32.const 0)
         )
        )
        (local.set $10
         (i32.add
          (local.get $6)
          (local.get $11)
         )
        )
        (loop $while-in25
         (local.set $4
          (i32.mul
           (local.get $2)
           (local.get $3)
          )
         )
         (local.set $5
          (i32.mul
           (call $_stbir__edge_wrap
            (local.get $14)
            (local.get $2)
            (local.get $6)
           )
           (local.get $3)
          )
         )
         (if
          (local.get $9)
          (block
           (local.set $1
            (i32.const 0)
           )
           (loop $while-in27
            (f32.store
             (i32.add
              (i32.shl
               (i32.add
                (local.get $1)
                (local.get $4)
               )
               (i32.const 2)
              )
              (local.get $8)
             )
             (call $_stbir__srgb_to_linear
              (f32.demote_f64
               (f64.div
                (f64.convert_i32_u
                 (i32.load
                  (i32.add
                   (i32.shl
                    (i32.add
                     (local.get $1)
                     (local.get $5)
                    )
                    (i32.const 2)
                   )
                   (local.get $7)
                  )
                 )
                )
                (f64.const 4294967295)
               )
              )
             )
            )
            (br_if $while-in27
             (i32.ne
              (local.tee $1
               (i32.add
                (local.get $1)
                (i32.const 1)
               )
              )
              (local.get $3)
             )
            )
           )
          )
         )
         (if
          (i32.eqz
           (i32.and
            (i32.load offset=72
             (local.get $0)
            )
            (i32.const 2)
           )
          )
          (f32.store
           (i32.add
            (i32.shl
             (i32.add
              (local.get $4)
              (local.get $13)
             )
             (i32.const 2)
            )
            (local.get $8)
           )
           (f32.demote_f64
            (f64.div
             (f64.convert_i32_u
              (i32.load
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $5)
                  (local.get $13)
                 )
                 (i32.const 2)
                )
                (local.get $7)
               )
              )
             )
             (f64.const 4294967295)
            )
           )
          )
         )
         (br_if $while-in25
          (i32.ne
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (local.get $10)
          )
         )
        )
       )
      )
      (br $switch)
     )
     (if
      (i32.gt_s
       (local.get $12)
       (local.get $2)
      )
      (block
       (local.set $4
        (i32.gt_s
         (local.get $3)
         (i32.const 0)
        )
       )
       (local.set $5
        (i32.add
         (local.get $6)
         (local.get $11)
        )
       )
       (loop $while-in30
        (local.set $9
         (i32.mul
          (local.get $2)
          (local.get $3)
         )
        )
        (local.set $10
         (i32.mul
          (call $_stbir__edge_wrap
           (local.get $14)
           (local.get $2)
           (local.get $6)
          )
          (local.get $3)
         )
        )
        (if
         (local.get $4)
         (block
          (local.set $1
           (i32.const 0)
          )
          (loop $while-in32
           (i32.store
            (i32.add
             (i32.shl
              (i32.add
               (local.get $1)
               (local.get $9)
              )
              (i32.const 2)
             )
             (local.get $8)
            )
            (i32.load
             (i32.add
              (i32.shl
               (i32.add
                (local.get $1)
                (local.get $10)
               )
               (i32.const 2)
              )
              (local.get $7)
             )
            )
           )
           (br_if $while-in32
            (i32.ne
             (local.tee $1
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (local.get $3)
            )
           )
          )
         )
        )
        (br_if $while-in30
         (i32.ne
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (local.get $5)
         )
        )
       )
      )
     )
     (br $switch)
    )
    (if
     (i32.gt_s
      (local.get $12)
      (local.get $2)
     )
     (block
      (local.set $9
       (i32.gt_s
        (local.get $3)
        (i32.const 0)
       )
      )
      (local.set $10
       (i32.add
        (local.get $6)
        (local.get $11)
       )
      )
      (loop $while-in35
       (local.set $4
        (i32.mul
         (local.get $2)
         (local.get $3)
        )
       )
       (local.set $5
        (i32.mul
         (call $_stbir__edge_wrap
          (local.get $14)
          (local.get $2)
          (local.get $6)
         )
         (local.get $3)
        )
       )
       (if
        (local.get $9)
        (block
         (local.set $1
          (i32.const 0)
         )
         (loop $while-in37
          (f32.store
           (i32.add
            (i32.shl
             (i32.add
              (local.get $1)
              (local.get $4)
             )
             (i32.const 2)
            )
            (local.get $8)
           )
           (call $_stbir__srgb_to_linear
            (f32.load
             (i32.add
              (i32.shl
               (i32.add
                (local.get $1)
                (local.get $5)
               )
               (i32.const 2)
              )
              (local.get $7)
             )
            )
           )
          )
          (br_if $while-in37
           (i32.ne
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.get $3)
           )
          )
         )
        )
       )
       (if
        (i32.eqz
         (i32.and
          (i32.load offset=72
           (local.get $0)
          )
          (i32.const 2)
         )
        )
        (i32.store
         (i32.add
          (i32.shl
           (i32.add
            (local.get $4)
            (local.get $13)
           )
           (i32.const 2)
          )
          (local.get $8)
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.add
             (local.get $5)
             (local.get $13)
            )
            (i32.const 2)
           )
           (local.get $7)
          )
         )
        )
       )
       (br_if $while-in35
        (i32.ne
         (local.tee $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (local.get $10)
        )
       )
      )
     )
    )
    (br $switch)
   )
   (call $___assert_fail
    (i32.const 14305)
    (i32.const 13001)
    (i32.const 1368)
    (i32.const 14354)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load offset=72
      (local.get $0)
     )
     (i32.const 1)
    )
   )
   (if
    (i32.gt_s
     (local.get $12)
     (local.tee $1
      (i32.sub
       (i32.const 0)
       (i32.load offset=144
        (local.get $0)
       )
      )
     )
    )
    (block
     (local.set $4
      (i32.gt_s
       (local.get $3)
       (i32.const 0)
      )
     )
     (loop $while-in40
      (local.set $15
       (f32.add
        (local.tee $17
         (f32.load
          (local.tee $2
           (i32.add
            (i32.shl
             (i32.add
              (local.get $13)
              (local.tee $5
               (i32.mul
                (local.get $1)
                (local.get $3)
               )
              )
             )
             (i32.const 2)
            )
            (local.get $8)
           )
          )
         )
        )
        (f32.const 8.271806125530277e-25)
       )
      )
      (if
       (i32.eq
        (i32.load offset=76
         (local.get $0)
        )
        (i32.const 3)
       )
       (local.set $15
        (local.get $17)
       )
       (f32.store
        (local.get $2)
        (local.get $15)
       )
      )
      (if
       (local.get $4)
       (block
        (local.set $2
         (i32.const 0)
        )
        (loop $while-in42
         (local.set $7
          (i32.add
           (i32.shl
            (i32.add
             (local.get $2)
             (local.get $5)
            )
            (i32.const 2)
           )
           (local.get $8)
          )
         )
         (if
          (i32.ne
           (local.get $2)
           (local.get $13)
          )
          (f32.store
           (local.get $7)
           (f32.mul
            (local.get $15)
            (f32.load
             (local.get $7)
            )
           )
          )
         )
         (br_if $while-in42
          (i32.ne
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (local.get $3)
          )
         )
        )
       )
      )
      (br_if $while-in40
       (i32.ne
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (local.get $12)
       )
      )
     )
    )
   )
  )
  (if
   (i32.ne
    (local.get $14)
    (i32.const 4)
   )
   (return)
  )
  (if
   (i32.gt_s
    (local.tee $1
     (i32.load offset=144
      (local.get $0)
     )
    )
    (i32.const 0)
   )
   (block
    (local.set $2
     (i32.gt_s
      (local.get $3)
      (i32.const 0)
     )
    )
    (local.set $7
     (i32.shl
      (local.get $3)
      (i32.const 2)
     )
    )
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in44
     (if
      (local.get $2)
      (drop
       (call $_memset
        (i32.add
         (i32.shl
          (i32.mul
           (local.get $3)
           (i32.sub
            (local.get $0)
            (local.get $1)
           )
          )
          (i32.const 2)
         )
         (local.get $8)
        )
        (i32.const 0)
        (local.get $7)
       )
      )
     )
     (br_if $while-in44
      (i32.ne
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.get $1)
      )
     )
    )
   )
  )
  (if
   (i32.le_s
    (local.get $11)
    (i32.const 0)
   )
   (return)
  )
  (local.set $2
   (i32.gt_s
    (local.get $3)
    (i32.const 0)
   )
  )
  (local.set $11
   (i32.shl
    (local.get $3)
    (i32.const 2)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (local.set $0
   (local.get $6)
  )
  (loop $while-in46
   (if
    (local.get $2)
    (drop
     (call $_memset
      (i32.add
       (i32.shl
        (i32.mul
         (local.get $3)
         (i32.add
          (local.get $1)
          (local.get $6)
         )
        )
        (i32.const 2)
       )
       (local.get $8)
      )
      (i32.const 0)
      (local.get $11)
     )
    )
   )
   (local.set $1
    (i32.add
     (local.get $1)
     (i32.const 1)
    )
   )
   (br_if $while-in46
    (i32.lt_s
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (local.get $12)
    )
   )
  )
 )
 (func $_stbir__use_width_upsampling (; 461 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (call $_stbir__use_upsampling
   (f32.load offset=56
    (local.get $0)
   )
  )
 )
 (func $_stbir__resample_horizontal_upsample (; 462 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local.set $15
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $12
   (i32.load
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
  )
  (local.set $8
   (call $_stbir__get_decode_buffer
    (local.get $0)
   )
  )
  (local.set $16
   (i32.load offset=100
    (local.get $0)
   )
  )
  (local.set $13
   (i32.load offset=104
    (local.get $0)
   )
  )
  (local.set $18
   (i32.load offset=128
    (local.get $0)
   )
  )
  (if
   (i32.le_s
    (local.get $15)
    (i32.const 0)
   )
   (return)
  )
  (local.set $19
   (i32.gt_s
    (local.get $12)
    (i32.const 0)
   )
  )
  (block $switch13
   (block $switch-case23
    (block $switch-case22
     (block $switch-case21
      (block $switch-case20
       (block $switch-case19
        (block $switch-case18
         (block $switch-case17
          (block $switch-case16
           (block $switch-case15
            (block $switch-case14
             (br_table $switch-case14 $switch13 $switch-case15 $switch13 $switch-case16 $switch13 $switch-case17 $switch13 $switch-case18 $switch13 $switch13 $switch13 $switch13 $switch-case19 $switch13 $switch13 $switch13 $switch13 $switch-case20 $switch13 $switch13 $switch13 $switch13 $switch-case21 $switch13 $switch13 $switch13 $switch13 $switch-case22 $switch13 $switch13 $switch13 $switch13 $switch-case23 $switch13
              (i32.sub
               (loop $label$continue$L4 (result i32)
                (block $label$break$L4 (result i32)
                 (drop
                  (br_if $label$break$L4
                   (i32.const 4)
                   (i32.lt_s
                    (local.tee $7
                     (i32.load offset=4
                      (i32.add
                       (i32.shl
                        (local.get $11)
                        (i32.const 3)
                       )
                       (local.get $16)
                      )
                     )
                    )
                    (local.tee $2
                     (i32.load
                      (i32.add
                       (i32.shl
                        (local.get $11)
                        (i32.const 3)
                       )
                       (local.get $16)
                      )
                     )
                    )
                   )
                  )
                 )
                 (drop
                  (br_if $label$break$L4
                   (i32.const 6)
                   (i32.lt_s
                    (local.get $2)
                    (local.tee $5
                     (i32.sub
                      (i32.const 0)
                      (local.tee $3
                       (i32.load offset=144
                        (local.get $0)
                       )
                      )
                     )
                    )
                   )
                  )
                 )
                 (drop
                  (br_if $label$break$L4
                   (i32.const 8)
                   (i32.lt_s
                    (local.get $7)
                    (local.get $5)
                   )
                  )
                 )
                 (drop
                  (br_if $label$break$L4
                   (i32.const 10)
                   (i32.ge_s
                    (local.get $2)
                    (local.tee $3
                     (i32.add
                      (local.get $3)
                      (i32.load offset=4
                       (local.get $0)
                      )
                     )
                    )
                   )
                  )
                 )
                 (drop
                  (br_if $label$break$L4
                   (i32.const 12)
                   (i32.ge_s
                    (local.get $7)
                    (local.get $3)
                   )
                  )
                 )
                 (local.set $4
                  (i32.mul
                   (local.get $11)
                   (local.get $12)
                  )
                 )
                 (local.set $14
                  (i32.mul
                   (local.get $11)
                   (local.get $18)
                  )
                 )
                 (block $switch
                  (block $switch-default
                   (block $switch-case8
                    (block $switch-case5
                     (block $switch-case2
                      (block $switch-case
                       (br_table $switch-case $switch-case2 $switch-case5 $switch-case8 $switch-default
                        (i32.sub
                         (local.get $12)
                         (i32.const 1)
                        )
                       )
                      )
                      (if
                       (i32.le_s
                        (local.get $2)
                        (local.get $7)
                       )
                       (block
                        (local.set $4
                         (i32.add
                          (i32.shl
                           (local.get $4)
                           (i32.const 2)
                          )
                          (local.get $1)
                         )
                        )
                        (local.set $3
                         (i32.const 0)
                        )
                        (loop $while-in
                         (drop
                          (br_if $label$break$L4
                           (i32.const 17)
                           (f32.eq
                            (local.tee $6
                             (f32.load
                              (i32.add
                               (i32.shl
                                (i32.add
                                 (local.get $3)
                                 (local.get $14)
                                )
                                (i32.const 2)
                               )
                               (local.get $13)
                              )
                             )
                            )
                            (f32.const 0)
                           )
                          )
                         )
                         (local.set $3
                          (i32.add
                           (local.get $3)
                           (i32.const 1)
                          )
                         )
                         (f32.store
                          (local.get $4)
                          (f32.add
                           (f32.load
                            (local.get $4)
                           )
                           (f32.mul
                            (local.get $6)
                            (f32.load
                             (i32.add
                              (i32.shl
                               (local.get $2)
                               (i32.const 2)
                              )
                              (local.get $8)
                             )
                            )
                           )
                          )
                         )
                         (local.set $5
                          (i32.add
                           (local.get $2)
                           (i32.const 1)
                          )
                         )
                         (if
                          (i32.lt_s
                           (local.get $2)
                           (local.get $7)
                          )
                          (block
                           (local.set $2
                            (local.get $5)
                           )
                           (br $while-in)
                          )
                         )
                        )
                       )
                      )
                      (br $switch)
                     )
                     (if
                      (i32.le_s
                       (local.get $2)
                       (local.get $7)
                      )
                      (block
                       (local.set $9
                        (i32.add
                         (i32.shl
                          (local.get $4)
                          (i32.const 2)
                         )
                         (local.get $1)
                        )
                       )
                       (local.set $4
                        (i32.add
                         (i32.shl
                          (i32.add
                           (local.get $4)
                           (i32.const 1)
                          )
                          (i32.const 2)
                         )
                         (local.get $1)
                        )
                       )
                       (local.set $3
                        (i32.const 0)
                       )
                       (loop $while-in1
                        (drop
                         (br_if $label$break$L4
                          (i32.const 22)
                          (f32.eq
                           (local.tee $6
                            (f32.load
                             (i32.add
                              (i32.shl
                               (i32.add
                                (local.get $3)
                                (local.get $14)
                               )
                               (i32.const 2)
                              )
                              (local.get $13)
                             )
                            )
                           )
                           (f32.const 0)
                          )
                         )
                        )
                        (local.set $3
                         (i32.add
                          (local.get $3)
                          (i32.const 1)
                         )
                        )
                        (f32.store
                         (local.get $9)
                         (f32.add
                          (f32.load
                           (local.get $9)
                          )
                          (f32.mul
                           (local.get $6)
                           (f32.load
                            (i32.add
                             (i32.shl
                              (local.tee $5
                               (i32.shl
                                (local.get $2)
                                (i32.const 1)
                               )
                              )
                              (i32.const 2)
                             )
                             (local.get $8)
                            )
                           )
                          )
                         )
                        )
                        (f32.store
                         (local.get $4)
                         (f32.add
                          (f32.load
                           (local.get $4)
                          )
                          (f32.mul
                           (local.get $6)
                           (f32.load
                            (i32.add
                             (i32.shl
                              (i32.or
                               (local.get $5)
                               (i32.const 1)
                              )
                              (i32.const 2)
                             )
                             (local.get $8)
                            )
                           )
                          )
                         )
                        )
                        (local.set $5
                         (i32.add
                          (local.get $2)
                          (i32.const 1)
                         )
                        )
                        (if
                         (i32.lt_s
                          (local.get $2)
                          (local.get $7)
                         )
                         (block
                          (local.set $2
                           (local.get $5)
                          )
                          (br $while-in1)
                         )
                        )
                       )
                      )
                     )
                     (br $switch)
                    )
                    (if
                     (i32.le_s
                      (local.get $2)
                      (local.get $7)
                     )
                     (block
                      (local.set $9
                       (i32.add
                        (i32.shl
                         (local.get $4)
                         (i32.const 2)
                        )
                        (local.get $1)
                       )
                      )
                      (local.set $10
                       (i32.add
                        (i32.shl
                         (i32.add
                          (local.get $4)
                          (i32.const 1)
                         )
                         (i32.const 2)
                        )
                        (local.get $1)
                       )
                      )
                      (local.set $4
                       (i32.add
                        (i32.shl
                         (i32.add
                          (local.get $4)
                          (i32.const 2)
                         )
                         (i32.const 2)
                        )
                        (local.get $1)
                       )
                      )
                      (local.set $3
                       (i32.const 0)
                      )
                      (loop $while-in4
                       (drop
                        (br_if $label$break$L4
                         (i32.const 27)
                         (f32.eq
                          (local.tee $6
                           (f32.load
                            (i32.add
                             (i32.shl
                              (i32.add
                               (local.get $3)
                               (local.get $14)
                              )
                              (i32.const 2)
                             )
                             (local.get $13)
                            )
                           )
                          )
                          (f32.const 0)
                         )
                        )
                       )
                       (local.set $3
                        (i32.add
                         (local.get $3)
                         (i32.const 1)
                        )
                       )
                       (f32.store
                        (local.get $9)
                        (f32.add
                         (f32.load
                          (local.get $9)
                         )
                         (f32.mul
                          (local.get $6)
                          (f32.load
                           (i32.add
                            (i32.shl
                             (local.tee $5
                              (i32.mul
                               (local.get $2)
                               (i32.const 3)
                              )
                             )
                             (i32.const 2)
                            )
                            (local.get $8)
                           )
                          )
                         )
                        )
                       )
                       (f32.store
                        (local.get $10)
                        (f32.add
                         (f32.load
                          (local.get $10)
                         )
                         (f32.mul
                          (local.get $6)
                          (f32.load
                           (i32.add
                            (i32.shl
                             (i32.add
                              (local.get $5)
                              (i32.const 1)
                             )
                             (i32.const 2)
                            )
                            (local.get $8)
                           )
                          )
                         )
                        )
                       )
                       (f32.store
                        (local.get $4)
                        (f32.add
                         (f32.load
                          (local.get $4)
                         )
                         (f32.mul
                          (local.get $6)
                          (f32.load
                           (i32.add
                            (i32.shl
                             (i32.add
                              (local.get $5)
                              (i32.const 2)
                             )
                             (i32.const 2)
                            )
                            (local.get $8)
                           )
                          )
                         )
                        )
                       )
                       (local.set $5
                        (i32.add
                         (local.get $2)
                         (i32.const 1)
                        )
                       )
                       (if
                        (i32.lt_s
                         (local.get $2)
                         (local.get $7)
                        )
                        (block
                         (local.set $2
                          (local.get $5)
                         )
                         (br $while-in4)
                        )
                       )
                      )
                     )
                    )
                    (br $switch)
                   )
                   (if
                    (i32.le_s
                     (local.get $2)
                     (local.get $7)
                    )
                    (block
                     (local.set $9
                      (i32.add
                       (i32.shl
                        (local.get $4)
                        (i32.const 2)
                       )
                       (local.get $1)
                      )
                     )
                     (local.set $10
                      (i32.add
                       (i32.shl
                        (i32.add
                         (local.get $4)
                         (i32.const 1)
                        )
                        (i32.const 2)
                       )
                       (local.get $1)
                      )
                     )
                     (local.set $17
                      (i32.add
                       (i32.shl
                        (i32.add
                         (local.get $4)
                         (i32.const 2)
                        )
                        (i32.const 2)
                       )
                       (local.get $1)
                      )
                     )
                     (local.set $4
                      (i32.add
                       (i32.shl
                        (i32.add
                         (local.get $4)
                         (i32.const 3)
                        )
                        (i32.const 2)
                       )
                       (local.get $1)
                      )
                     )
                     (local.set $3
                      (i32.const 0)
                     )
                     (loop $while-in7
                      (drop
                       (br_if $label$break$L4
                        (i32.const 32)
                        (f32.eq
                         (local.tee $6
                          (f32.load
                           (i32.add
                            (i32.shl
                             (i32.add
                              (local.get $3)
                              (local.get $14)
                             )
                             (i32.const 2)
                            )
                            (local.get $13)
                           )
                          )
                         )
                         (f32.const 0)
                        )
                       )
                      )
                      (local.set $3
                       (i32.add
                        (local.get $3)
                        (i32.const 1)
                       )
                      )
                      (f32.store
                       (local.get $9)
                       (f32.add
                        (f32.load
                         (local.get $9)
                        )
                        (f32.mul
                         (local.get $6)
                         (f32.load
                          (i32.add
                           (i32.shl
                            (local.tee $5
                             (i32.shl
                              (local.get $2)
                              (i32.const 2)
                             )
                            )
                            (i32.const 2)
                           )
                           (local.get $8)
                          )
                         )
                        )
                       )
                      )
                      (f32.store
                       (local.get $10)
                       (f32.add
                        (f32.load
                         (local.get $10)
                        )
                        (f32.mul
                         (local.get $6)
                         (f32.load
                          (i32.add
                           (i32.shl
                            (i32.or
                             (local.get $5)
                             (i32.const 1)
                            )
                            (i32.const 2)
                           )
                           (local.get $8)
                          )
                         )
                        )
                       )
                      )
                      (f32.store
                       (local.get $17)
                       (f32.add
                        (f32.load
                         (local.get $17)
                        )
                        (f32.mul
                         (local.get $6)
                         (f32.load
                          (i32.add
                           (i32.shl
                            (i32.or
                             (local.get $5)
                             (i32.const 2)
                            )
                            (i32.const 2)
                           )
                           (local.get $8)
                          )
                         )
                        )
                       )
                      )
                      (f32.store
                       (local.get $4)
                       (f32.add
                        (f32.load
                         (local.get $4)
                        )
                        (f32.mul
                         (local.get $6)
                         (f32.load
                          (i32.add
                           (i32.shl
                            (i32.or
                             (local.get $5)
                             (i32.const 3)
                            )
                            (i32.const 2)
                           )
                           (local.get $8)
                          )
                         )
                        )
                       )
                      )
                      (local.set $5
                       (i32.add
                        (local.get $2)
                        (i32.const 1)
                       )
                      )
                      (if
                       (i32.lt_s
                        (local.get $2)
                        (local.get $7)
                       )
                       (block
                        (local.set $2
                         (local.get $5)
                        )
                        (br $while-in7)
                       )
                      )
                     )
                    )
                   )
                   (br $switch)
                  )
                  (if
                   (i32.le_s
                    (local.get $2)
                    (local.get $7)
                   )
                   (block
                    (local.set $5
                     (i32.const 0)
                    )
                    (loop $while-in10
                     (drop
                      (br_if $label$break$L4
                       (i32.const 37)
                       (f32.eq
                        (local.tee $6
                         (f32.load
                          (i32.add
                           (i32.shl
                            (i32.add
                             (local.get $5)
                             (local.get $14)
                            )
                            (i32.const 2)
                           )
                           (local.get $13)
                          )
                         )
                        )
                        (f32.const 0)
                       )
                      )
                     )
                     (local.set $9
                      (i32.mul
                       (local.get $2)
                       (local.get $12)
                      )
                     )
                     (if
                      (local.get $19)
                      (block
                       (local.set $3
                        (i32.const 0)
                       )
                       (loop $while-in12
                        (f32.store
                         (local.tee $10
                          (i32.add
                           (i32.shl
                            (i32.add
                             (local.get $3)
                             (local.get $4)
                            )
                            (i32.const 2)
                           )
                           (local.get $1)
                          )
                         )
                         (f32.add
                          (f32.load
                           (local.get $10)
                          )
                          (f32.mul
                           (local.get $6)
                           (f32.load
                            (i32.add
                             (i32.shl
                              (i32.add
                               (local.get $3)
                               (local.get $9)
                              )
                              (i32.const 2)
                             )
                             (local.get $8)
                            )
                           )
                          )
                         )
                        )
                        (br_if $while-in12
                         (i32.ne
                          (local.tee $3
                           (i32.add
                            (local.get $3)
                            (i32.const 1)
                           )
                          )
                          (local.get $12)
                         )
                        )
                       )
                      )
                     )
                     (local.set $5
                      (i32.add
                       (local.get $5)
                       (i32.const 1)
                      )
                     )
                     (local.set $3
                      (i32.add
                       (local.get $2)
                       (i32.const 1)
                      )
                     )
                     (if
                      (i32.lt_s
                       (local.get $2)
                       (local.get $7)
                      )
                      (block
                       (local.set $2
                        (local.get $3)
                       )
                       (br $while-in10)
                      )
                     )
                    )
                   )
                  )
                 )
                 (br_if $label$continue$L4
                  (i32.lt_s
                   (local.tee $11
                    (i32.add
                     (local.get $11)
                     (i32.const 1)
                    )
                   )
                   (local.get $15)
                  )
                 )
                 (i32.const 43)
                )
               )
               (i32.const 4)
              )
             )
            )
            (call $___assert_fail
             (i32.const 14020)
             (i32.const 13001)
             (i32.const 1460)
             (i32.const 14029)
            )
            (br $switch13)
           )
           (call $___assert_fail
            (i32.const 14065)
            (i32.const 13001)
            (i32.const 1461)
            (i32.const 14029)
           )
           (br $switch13)
          )
          (call $___assert_fail
           (i32.const 14115)
           (i32.const 13001)
           (i32.const 1462)
           (i32.const 14029)
          )
          (br $switch13)
         )
         (call $___assert_fail
          (i32.const 14165)
          (i32.const 13001)
          (i32.const 1463)
          (i32.const 14029)
         )
         (br $switch13)
        )
        (call $___assert_fail
         (i32.const 14235)
         (i32.const 13001)
         (i32.const 1464)
         (i32.const 14029)
        )
        (br $switch13)
       )
       (call $___assert_fail
        (i32.const 14003)
        (i32.const 13001)
        (i32.const 1472)
        (i32.const 14029)
       )
       (br $switch13)
      )
      (call $___assert_fail
       (i32.const 14003)
       (i32.const 13001)
       (i32.const 1481)
       (i32.const 14029)
      )
      (br $switch13)
     )
     (call $___assert_fail
      (i32.const 14003)
      (i32.const 13001)
      (i32.const 1491)
      (i32.const 14029)
     )
     (br $switch13)
    )
    (call $___assert_fail
     (i32.const 14003)
     (i32.const 13001)
     (i32.const 1502)
     (i32.const 14029)
    )
    (br $switch13)
   )
   (call $___assert_fail
    (i32.const 14003)
    (i32.const 13001)
    (i32.const 1515)
    (i32.const 14029)
   )
  )
 )
 (func $_stbir__resample_horizontal_downsample (; 463 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local.set $3
   (i32.load offset=4
    (local.get $0)
   )
  )
  (local.set $5
   (i32.load
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
  )
  (local.set $6
   (call $_stbir__get_decode_buffer
    (local.get $0)
   )
  )
  (local.set $7
   (i32.load offset=100
    (local.get $0)
   )
  )
  (local.set $15
   (i32.load offset=104
    (local.get $0)
   )
  )
  (local.set $16
   (i32.load offset=128
    (local.get $0)
   )
  )
  (local.set $8
   (i32.add
    (local.get $3)
    (i32.shl
     (local.tee $17
      (i32.load offset=144
       (local.get $0)
      )
     )
     (i32.const 1)
    )
   )
  )
  (if
   (call $_stbir__use_width_upsampling
    (local.get $0)
   )
   (call $___assert_fail
    (i32.const 13924)
    (i32.const 13001)
    (i32.const 1536)
    (i32.const 13965)
   )
  )
  (block $switch
   (block $switch-default
    (block $switch-case8
     (block $switch-case5
      (block $switch-case2
       (block $switch-case
        (br_table $switch-case $switch-case2 $switch-case5 $switch-case8 $switch-default
         (i32.sub
          (local.get $5)
          (i32.const 1)
         )
        )
       )
       (if
        (i32.le_s
         (local.get $8)
         (i32.const 0)
        )
        (return)
       )
       (local.set $3
        (i32.const 0)
       )
       (if
        (i32.eq
         (local.tee $0
          (loop $label$continue$L29 (result i32)
           (block $label$break$L29 (result i32)
            (if
             (i32.le_s
              (local.tee $0
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $3)
                  (i32.const 3)
                 )
                 (local.get $7)
                )
               )
              )
              (local.tee $5
               (i32.load offset=4
                (i32.add
                 (i32.shl
                  (local.get $3)
                  (i32.const 3)
                 )
                 (local.get $7)
                )
               )
              )
             )
             (block
              (local.set $9
               (i32.sub
                (i32.mul
                 (local.get $3)
                 (local.get $16)
                )
                (local.get $0)
               )
              )
              (local.set $10
               (i32.add
                (i32.shl
                 (i32.sub
                  (local.get $3)
                  (local.get $17)
                 )
                 (i32.const 2)
                )
                (local.get $6)
               )
              )
              (loop $while-in
               (drop
                (br_if $label$break$L29
                 (i32.const 9)
                 (f32.eq
                  (local.tee $4
                   (f32.load
                    (i32.add
                     (i32.shl
                      (i32.add
                       (local.get $0)
                       (local.get $9)
                      )
                      (i32.const 2)
                     )
                     (local.get $15)
                    )
                   )
                  )
                  (f32.const 0)
                 )
                )
               )
               (f32.store
                (local.tee $2
                 (i32.add
                  (i32.shl
                   (local.get $0)
                   (i32.const 2)
                  )
                  (local.get $1)
                 )
                )
                (f32.add
                 (f32.load
                  (local.get $2)
                 )
                 (f32.mul
                  (local.get $4)
                  (f32.load
                   (local.get $10)
                  )
                 )
                )
               )
               (local.set $2
                (i32.add
                 (local.get $0)
                 (i32.const 1)
                )
               )
               (if
                (i32.lt_s
                 (local.get $0)
                 (local.get $5)
                )
                (block
                 (local.set $0
                  (local.get $2)
                 )
                 (br $while-in)
                )
               )
              )
             )
            )
            (br_if $label$continue$L29
             (i32.lt_s
              (local.tee $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (local.get $8)
             )
            )
            (i32.const 47)
           )
          )
         )
         (i32.const 9)
        )
        (call $___assert_fail
         (i32.const 14003)
         (i32.const 13001)
         (i32.const 1554)
         (i32.const 13965)
        )
        (if
         (i32.eq
          (local.get $0)
          (i32.const 47)
         )
         (return)
        )
       )
       (br $switch)
      )
      (if
       (i32.le_s
        (local.get $8)
        (i32.const 0)
       )
       (return)
      )
      (local.set $3
       (i32.const 0)
      )
      (if
       (i32.eq
        (local.tee $0
         (loop $label$continue$L44 (result i32)
          (block $label$break$L44 (result i32)
           (local.set $2
            (i32.shl
             (i32.sub
              (local.get $3)
              (local.get $17)
             )
             (i32.const 1)
            )
           )
           (if
            (i32.le_s
             (local.tee $0
              (i32.load
               (i32.add
                (i32.shl
                 (local.get $3)
                 (i32.const 3)
                )
                (local.get $7)
               )
              )
             )
             (local.tee $5
              (i32.load offset=4
               (i32.add
                (i32.shl
                 (local.get $3)
                 (i32.const 3)
                )
                (local.get $7)
               )
              )
             )
            )
            (block
             (local.set $9
              (i32.sub
               (i32.mul
                (local.get $3)
                (local.get $16)
               )
               (local.get $0)
              )
             )
             (local.set $10
              (i32.add
               (i32.shl
                (local.get $2)
                (i32.const 2)
               )
               (local.get $6)
              )
             )
             (local.set $11
              (i32.add
               (i32.shl
                (i32.or
                 (local.get $2)
                 (i32.const 1)
                )
                (i32.const 2)
               )
               (local.get $6)
              )
             )
             (loop $while-in1
              (drop
               (br_if $label$break$L44
                (i32.const 17)
                (f32.eq
                 (local.tee $4
                  (f32.load
                   (i32.add
                    (i32.shl
                     (i32.add
                      (local.get $0)
                      (local.get $9)
                     )
                     (i32.const 2)
                    )
                    (local.get $15)
                   )
                  )
                 )
                 (f32.const 0)
                )
               )
              )
              (f32.store
               (local.tee $12
                (i32.add
                 (i32.shl
                  (local.tee $2
                   (i32.shl
                    (local.get $0)
                    (i32.const 1)
                   )
                  )
                  (i32.const 2)
                 )
                 (local.get $1)
                )
               )
               (f32.add
                (f32.load
                 (local.get $12)
                )
                (f32.mul
                 (local.get $4)
                 (f32.load
                  (local.get $10)
                 )
                )
               )
              )
              (f32.store
               (local.tee $2
                (i32.add
                 (i32.shl
                  (i32.or
                   (local.get $2)
                   (i32.const 1)
                  )
                  (i32.const 2)
                 )
                 (local.get $1)
                )
               )
               (f32.add
                (f32.load
                 (local.get $2)
                )
                (f32.mul
                 (local.get $4)
                 (f32.load
                  (local.get $11)
                 )
                )
               )
              )
              (local.set $2
               (i32.add
                (local.get $0)
                (i32.const 1)
               )
              )
              (if
               (i32.lt_s
                (local.get $0)
                (local.get $5)
               )
               (block
                (local.set $0
                 (local.get $2)
                )
                (br $while-in1)
               )
              )
             )
            )
           )
           (br_if $label$continue$L44
            (i32.lt_s
             (local.tee $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (local.get $8)
            )
           )
           (i32.const 47)
          )
         )
        )
        (i32.const 17)
       )
       (call $___assert_fail
        (i32.const 14003)
        (i32.const 13001)
        (i32.const 1575)
        (i32.const 13965)
       )
       (if
        (i32.eq
         (local.get $0)
         (i32.const 47)
        )
        (return)
       )
      )
      (br $switch)
     )
     (if
      (i32.le_s
       (local.get $8)
       (i32.const 0)
      )
      (return)
     )
     (local.set $3
      (i32.const 0)
     )
     (if
      (i32.eq
       (local.tee $0
        (loop $label$continue$L59 (result i32)
         (block $label$break$L59 (result i32)
          (local.set $2
           (i32.mul
            (i32.sub
             (local.get $3)
             (local.get $17)
            )
            (i32.const 3)
           )
          )
          (if
           (i32.le_s
            (local.tee $0
             (i32.load
              (i32.add
               (i32.shl
                (local.get $3)
                (i32.const 3)
               )
               (local.get $7)
              )
             )
            )
            (local.tee $5
             (i32.load offset=4
              (i32.add
               (i32.shl
                (local.get $3)
                (i32.const 3)
               )
               (local.get $7)
              )
             )
            )
           )
           (block
            (local.set $9
             (i32.sub
              (i32.mul
               (local.get $3)
               (local.get $16)
              )
              (local.get $0)
             )
            )
            (local.set $10
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (local.get $6)
             )
            )
            (local.set $11
             (i32.add
              (i32.shl
               (i32.add
                (local.get $2)
                (i32.const 1)
               )
               (i32.const 2)
              )
              (local.get $6)
             )
            )
            (local.set $12
             (i32.add
              (i32.shl
               (i32.add
                (local.get $2)
                (i32.const 2)
               )
               (i32.const 2)
              )
              (local.get $6)
             )
            )
            (loop $while-in4
             (drop
              (br_if $label$break$L59
               (i32.const 25)
               (f32.eq
                (local.tee $4
                 (f32.load
                  (i32.add
                   (i32.shl
                    (i32.add
                     (local.get $0)
                     (local.get $9)
                    )
                    (i32.const 2)
                   )
                   (local.get $15)
                  )
                 )
                )
                (f32.const 0)
               )
              )
             )
             (f32.store
              (local.tee $13
               (i32.add
                (i32.shl
                 (local.tee $2
                  (i32.mul
                   (local.get $0)
                   (i32.const 3)
                  )
                 )
                 (i32.const 2)
                )
                (local.get $1)
               )
              )
              (f32.add
               (f32.load
                (local.get $13)
               )
               (f32.mul
                (local.get $4)
                (f32.load
                 (local.get $10)
                )
               )
              )
             )
             (f32.store
              (local.tee $13
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $2)
                  (i32.const 1)
                 )
                 (i32.const 2)
                )
                (local.get $1)
               )
              )
              (f32.add
               (f32.load
                (local.get $13)
               )
               (f32.mul
                (local.get $4)
                (f32.load
                 (local.get $11)
                )
               )
              )
             )
             (f32.store
              (local.tee $2
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $2)
                  (i32.const 2)
                 )
                 (i32.const 2)
                )
                (local.get $1)
               )
              )
              (f32.add
               (f32.load
                (local.get $2)
               )
               (f32.mul
                (local.get $4)
                (f32.load
                 (local.get $12)
                )
               )
              )
             )
             (local.set $2
              (i32.add
               (local.get $0)
               (i32.const 1)
              )
             )
             (if
              (i32.lt_s
               (local.get $0)
               (local.get $5)
              )
              (block
               (local.set $0
                (local.get $2)
               )
               (br $while-in4)
              )
             )
            )
           )
          )
          (br_if $label$continue$L59
           (i32.lt_s
            (local.tee $3
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
            (local.get $8)
           )
          )
          (i32.const 47)
         )
        )
       )
       (i32.const 25)
      )
      (call $___assert_fail
       (i32.const 14003)
       (i32.const 13001)
       (i32.const 1597)
       (i32.const 13965)
      )
      (if
       (i32.eq
        (local.get $0)
        (i32.const 47)
       )
       (return)
      )
     )
     (br $switch)
    )
    (if
     (i32.le_s
      (local.get $8)
      (i32.const 0)
     )
     (return)
    )
    (local.set $3
     (i32.const 0)
    )
    (if
     (i32.eq
      (local.tee $0
       (loop $label$continue$L74 (result i32)
        (block $label$break$L74 (result i32)
         (local.set $2
          (i32.shl
           (i32.sub
            (local.get $3)
            (local.get $17)
           )
           (i32.const 2)
          )
         )
         (if
          (i32.le_s
           (local.tee $0
            (i32.load
             (i32.add
              (i32.shl
               (local.get $3)
               (i32.const 3)
              )
              (local.get $7)
             )
            )
           )
           (local.tee $5
            (i32.load offset=4
             (i32.add
              (i32.shl
               (local.get $3)
               (i32.const 3)
              )
              (local.get $7)
             )
            )
           )
          )
          (block
           (local.set $9
            (i32.sub
             (i32.mul
              (local.get $3)
              (local.get $16)
             )
             (local.get $0)
            )
           )
           (local.set $10
            (i32.add
             (i32.shl
              (local.get $2)
              (i32.const 2)
             )
             (local.get $6)
            )
           )
           (local.set $11
            (i32.add
             (i32.shl
              (i32.or
               (local.get $2)
               (i32.const 1)
              )
              (i32.const 2)
             )
             (local.get $6)
            )
           )
           (local.set $12
            (i32.add
             (i32.shl
              (i32.or
               (local.get $2)
               (i32.const 2)
              )
              (i32.const 2)
             )
             (local.get $6)
            )
           )
           (local.set $13
            (i32.add
             (i32.shl
              (i32.or
               (local.get $2)
               (i32.const 3)
              )
              (i32.const 2)
             )
             (local.get $6)
            )
           )
           (loop $while-in7
            (drop
             (br_if $label$break$L74
              (i32.const 33)
              (f32.eq
               (local.tee $4
                (f32.load
                 (i32.add
                  (i32.shl
                   (i32.add
                    (local.get $0)
                    (local.get $9)
                   )
                   (i32.const 2)
                  )
                  (local.get $15)
                 )
                )
               )
               (f32.const 0)
              )
             )
            )
            (f32.store
             (local.tee $14
              (i32.add
               (i32.shl
                (local.tee $2
                 (i32.shl
                  (local.get $0)
                  (i32.const 2)
                 )
                )
                (i32.const 2)
               )
               (local.get $1)
              )
             )
             (f32.add
              (f32.load
               (local.get $14)
              )
              (f32.mul
               (local.get $4)
               (f32.load
                (local.get $10)
               )
              )
             )
            )
            (f32.store
             (local.tee $14
              (i32.add
               (i32.shl
                (i32.or
                 (local.get $2)
                 (i32.const 1)
                )
                (i32.const 2)
               )
               (local.get $1)
              )
             )
             (f32.add
              (f32.load
               (local.get $14)
              )
              (f32.mul
               (local.get $4)
               (f32.load
                (local.get $11)
               )
              )
             )
            )
            (f32.store
             (local.tee $14
              (i32.add
               (i32.shl
                (i32.or
                 (local.get $2)
                 (i32.const 2)
                )
                (i32.const 2)
               )
               (local.get $1)
              )
             )
             (f32.add
              (f32.load
               (local.get $14)
              )
              (f32.mul
               (local.get $4)
               (f32.load
                (local.get $12)
               )
              )
             )
            )
            (f32.store
             (local.tee $2
              (i32.add
               (i32.shl
                (i32.or
                 (local.get $2)
                 (i32.const 3)
                )
                (i32.const 2)
               )
               (local.get $1)
              )
             )
             (f32.add
              (f32.load
               (local.get $2)
              )
              (f32.mul
               (local.get $4)
               (f32.load
                (local.get $13)
               )
              )
             )
            )
            (local.set $2
             (i32.add
              (local.get $0)
              (i32.const 1)
             )
            )
            (if
             (i32.lt_s
              (local.get $0)
              (local.get $5)
             )
             (block
              (local.set $0
               (local.get $2)
              )
              (br $while-in7)
             )
            )
           )
          )
         )
         (br_if $label$continue$L74
          (i32.lt_s
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
           (local.get $8)
          )
         )
         (i32.const 47)
        )
       )
      )
      (i32.const 33)
     )
     (call $___assert_fail
      (i32.const 14003)
      (i32.const 13001)
      (i32.const 1620)
      (i32.const 13965)
     )
     (if
      (i32.eq
       (local.get $0)
       (i32.const 47)
      )
      (return)
     )
    )
    (br $switch)
   )
   (if
    (i32.le_s
     (local.get $8)
     (i32.const 0)
    )
    (return)
   )
   (local.set $9
    (i32.gt_s
     (local.get $5)
     (i32.const 0)
    )
   )
   (local.set $3
    (i32.const 0)
   )
   (if
    (i32.eq
     (loop $label$continue$L9 (result i32)
      (block $label$break$L9 (result i32)
       (local.set $10
        (i32.mul
         (local.get $5)
         (i32.sub
          (local.get $3)
          (local.get $17)
         )
        )
       )
       (if
        (i32.le_s
         (local.tee $0
          (i32.load
           (i32.add
            (i32.shl
             (local.get $3)
             (i32.const 3)
            )
            (local.get $7)
           )
          )
         )
         (local.tee $11
          (i32.load offset=4
           (i32.add
            (i32.shl
             (local.get $3)
             (i32.const 3)
            )
            (local.get $7)
           )
          )
         )
        )
        (block
         (local.set $12
          (i32.sub
           (i32.mul
            (local.get $3)
            (local.get $16)
           )
           (local.get $0)
          )
         )
         (loop $while-in10
          (drop
           (br_if $label$break$L9
            (i32.const 41)
            (f32.eq
             (local.tee $4
              (f32.load
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $0)
                  (local.get $12)
                 )
                 (i32.const 2)
                )
                (local.get $15)
               )
              )
             )
             (f32.const 0)
            )
           )
          )
          (local.set $13
           (i32.mul
            (local.get $0)
            (local.get $5)
           )
          )
          (if
           (local.get $9)
           (block
            (local.set $2
             (i32.const 0)
            )
            (loop $while-in12
             (f32.store
              (local.tee $14
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $2)
                  (local.get $13)
                 )
                 (i32.const 2)
                )
                (local.get $1)
               )
              )
              (f32.add
               (f32.load
                (local.get $14)
               )
               (f32.mul
                (local.get $4)
                (f32.load
                 (i32.add
                  (i32.shl
                   (i32.add
                    (local.get $2)
                    (local.get $10)
                   )
                   (i32.const 2)
                  )
                  (local.get $6)
                 )
                )
               )
              )
             )
             (br_if $while-in12
              (i32.ne
               (local.tee $2
                (i32.add
                 (local.get $2)
                 (i32.const 1)
                )
               )
               (local.get $5)
              )
             )
            )
           )
          )
          (local.set $2
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
          (if
           (i32.lt_s
            (local.get $0)
            (local.get $11)
           )
           (block
            (local.set $0
             (local.get $2)
            )
            (br $while-in10)
           )
          )
         )
        )
       )
       (br_if $label$continue$L9
        (i32.lt_s
         (local.tee $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (local.get $8)
        )
       )
       (i32.const 47)
      )
     )
     (i32.const 41)
    )
    (call $___assert_fail
     (i32.const 14003)
     (i32.const 13001)
     (i32.const 1645)
     (i32.const 13965)
    )
   )
  )
 )
 (func $_stbir__get_decode_buffer (; 464 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.add
   (i32.load offset=120
    (local.get $0)
   )
   (i32.shl
    (i32.mul
     (i32.load offset=144
      (local.get $0)
     )
     (i32.load
      (i32.sub
       (local.get $0)
       (i32.const -64)
      )
     )
    )
    (i32.const 2)
   )
  )
 )
 (func $_stbir__use_upsampling (; 465 ;) (; has Stack IR ;) (param $0 f32) (result i32)
  (f32.gt
   (local.get $0)
   (f32.const 1)
  )
 )
 (func $_stbir__edge_wrap (; 466 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i32.and
    (i32.lt_s
     (local.get $1)
     (local.get $2)
    )
    (i32.gt_s
     (local.get $1)
     (i32.const -1)
    )
   )
   (return
    (local.get $1)
   )
  )
  (call $_stbir__edge_wrap_slow
   (local.get $0)
   (local.get $1)
   (local.get $2)
  )
 )
 (func $_stbir__srgb_to_linear (; 467 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (if (result f32)
   (f32.le
    (local.get $0)
    (f32.const 0.040449999272823334)
   )
   (f32.div
    (local.get $0)
    (f32.const 12.920000076293945)
   )
   (f32.demote_f64
    (call $_pow
     (f64.promote_f32
      (f32.div
       (f32.add
        (local.get $0)
        (f32.const 0.054999999701976776)
       )
       (f32.const 1.0549999475479126)
      )
     )
     (f64.const 2.4000000953674316)
    )
   )
  )
 )
 (func $_stbir__edge_wrap_slow (; 468 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local.set $3
   (i32.sub
    (i32.const 0)
    (local.get $1)
   )
  )
  (block $switch-default
   (block $switch-case2
    (block $switch-case1
     (block $switch-case0
      (block $switch-case
       (br_table $switch-case $switch-case0 $switch-case1 $switch-case2 $switch-default
        (i32.sub
         (local.get $0)
         (i32.const 1)
        )
       )
      )
      (if
       (i32.lt_s
        (local.get $1)
        (i32.const 0)
       )
       (return
        (i32.const 0)
       )
       (return
        (select
         (local.get $1)
         (i32.add
          (local.get $2)
          (i32.const -1)
         )
         (i32.lt_s
          (local.get $1)
          (local.get $2)
         )
        )
       )
      )
     )
     (local.set $0
      (i32.lt_s
       (local.get $1)
       (local.get $2)
      )
     )
     (if
      (i32.lt_s
       (local.get $1)
       (i32.const 0)
      )
      (return
       (select
        (local.get $3)
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
        (local.get $0)
       )
      )
      (return
       (select
        (local.get $1)
        (select
         (i32.add
          (local.tee $2
           (i32.shl
            (local.get $2)
            (i32.const 1)
           )
          )
          (i32.xor
           (local.get $1)
           (i32.const -1)
          )
         )
         (i32.const 0)
         (i32.gt_s
          (local.get $2)
          (local.get $1)
         )
        )
        (local.get $0)
       )
      )
     )
    )
    (if
     (i32.gt_s
      (local.get $1)
      (i32.const -1)
     )
     (return
      (i32.rem_s
       (local.get $1)
       (local.get $2)
      )
     )
     (return
      (select
       (i32.sub
        (local.get $2)
        (local.tee $0
         (i32.rem_s
          (i32.sub
           (i32.const 0)
           (local.get $1)
          )
          (local.get $2)
         )
        )
       )
       (i32.const 0)
       (local.get $0)
      )
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (call $___assert_fail
   (i32.const 14377)
   (i32.const 13001)
   (i32.const 994)
   (i32.const 14404)
  )
  (i32.const 0)
 )
 (func $_stbir__encode_scanline (; 469 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 f32)
  (local $15 i32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 128)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 128)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (i32.load offset=72
       (local.get $0)
      )
      (i32.const 1)
     )
    )
    (i32.gt_s
     (local.get $1)
     (i32.const 0)
    )
   )
   (block
    (local.set $12
     (i32.gt_s
      (local.get $4)
      (i32.const 0)
     )
    )
    (loop $while-in
     (local.set $14
      (select
       (f32.div
        (f32.const 1)
        (local.tee $14
         (f32.load
          (i32.add
           (i32.shl
            (i32.add
             (local.get $5)
             (local.tee $13
              (i32.mul
               (local.get $4)
               (local.get $8)
              )
             )
            )
            (i32.const 2)
           )
           (local.get $3)
          )
         )
        )
       )
       (f32.const 0)
       (f32.ne
        (local.get $14)
        (f32.const 0)
       )
      )
     )
     (if
      (local.get $12)
      (block
       (local.set $7
        (i32.const 0)
       )
       (loop $while-in1
        (local.set $9
         (i32.add
          (i32.shl
           (i32.add
            (local.get $7)
            (local.get $13)
           )
           (i32.const 2)
          )
          (local.get $3)
         )
        )
        (if
         (i32.ne
          (local.get $5)
          (local.get $7)
         )
         (f32.store
          (local.get $9)
          (f32.mul
           (local.get $14)
           (f32.load
            (local.get $9)
           )
          )
         )
        )
        (br_if $while-in1
         (i32.ne
          (local.tee $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
          (local.get $4)
         )
        )
       )
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $8
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
       (local.get $1)
      )
     )
    )
   )
  )
  (local.set $8
   (if (result i32)
    (i32.gt_s
     (local.get $4)
     (i32.const 0)
    )
    (block (result i32)
     (local.set $7
      (i32.const 0)
     )
     (local.set $8
      (i32.const 0)
     )
     (loop $while-in3 (result i32)
      (block $__rjto$0
       (block $__rjti$0
        (br_if $__rjti$0
         (i32.ne
          (local.get $5)
          (local.get $8)
         )
        )
        (br_if $__rjti$0
         (i32.and
          (i32.load offset=72
           (local.get $0)
          )
          (i32.const 2)
         )
        )
        (br $__rjto$0)
       )
       (i32.store16
        (i32.add
         (i32.shl
          (local.get $7)
          (i32.const 1)
         )
         (local.get $11)
        )
        (local.get $8)
       )
       (local.set $7
        (i32.add
         (local.get $7)
         (i32.const 1)
        )
       )
      )
      (br_if $while-in3
       (i32.ne
        (local.tee $8
         (i32.add
          (local.get $8)
          (i32.const 1)
         )
        )
        (local.get $4)
       )
      )
      (local.get $7)
     )
    )
    (i32.const 0)
   )
  )
  (block $folding-inner0
   (block $switch-default
    (block $switch-case42
     (block $switch-case37
      (block $switch-case32
       (block $switch-case27
        (block $switch-case22
         (block $switch-case17
          (block $switch-case12
           (block $switch-case
            (br_table $switch-case $switch-case12 $switch-case17 $switch-case22 $switch-case27 $switch-case32 $switch-case37 $switch-case42 $switch-default
             (local.get $6)
            )
           )
           (br_if $folding-inner0
            (i32.le_s
             (local.get $1)
             (i32.const 0)
            )
           )
           (local.set $6
            (i32.gt_s
             (local.get $4)
             (i32.const 0)
            )
           )
           (local.set $0
            (i32.const 0)
           )
           (loop $while-in5
            (local.set $7
             (i32.mul
              (local.get $0)
              (local.get $4)
             )
            )
            (if
             (local.get $6)
             (block
              (local.set $5
               (i32.const 0)
              )
              (loop $while-in7
               (local.set $11
                (i32.and
                 (i32.trunc_f64_s
                  (f64.add
                   (f64.promote_f32
                    (f32.mul
                     (call $_stbir__saturate
                      (f32.load
                       (i32.add
                        (i32.shl
                         (local.tee $8
                          (i32.add
                           (local.get $5)
                           (local.get $7)
                          )
                         )
                         (i32.const 2)
                        )
                        (local.get $3)
                       )
                      )
                     )
                     (f32.const 255)
                    )
                   )
                   (f64.const 0.5)
                  )
                 )
                 (i32.const 255)
                )
               )
               (i32.store8
                (i32.add
                 (local.get $2)
                 (local.get $8)
                )
                (local.get $11)
               )
               (br_if $while-in7
                (i32.ne
                 (local.tee $5
                  (i32.add
                   (local.get $5)
                   (i32.const 1)
                  )
                 )
                 (local.get $4)
                )
               )
              )
             )
            )
            (br_if $while-in5
             (i32.ne
              (local.tee $0
               (i32.add
                (local.get $0)
                (i32.const 1)
               )
              )
              (local.get $1)
             )
            )
           )
           (br $folding-inner0)
          )
          (br_if $folding-inner0
           (i32.le_s
            (local.get $1)
            (i32.const 0)
           )
          )
          (local.set $12
           (i32.gt_s
            (local.get $8)
            (i32.const 0)
           )
          )
          (local.set $6
           (i32.const 0)
          )
          (loop $while-in9
           (local.set $9
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (if
            (local.get $12)
            (block
             (local.set $7
              (i32.const 0)
             )
             (loop $while-in11
              (local.set $15
               (call $_stbir__linear_to_srgb_uchar
                (f32.load
                 (i32.add
                  (i32.shl
                   (local.tee $13
                    (i32.add
                     (i32.load16_u
                      (i32.add
                       (i32.shl
                        (local.get $7)
                        (i32.const 1)
                       )
                       (local.get $11)
                      )
                     )
                     (local.get $9)
                    )
                   )
                   (i32.const 2)
                  )
                  (local.get $3)
                 )
                )
               )
              )
              (i32.store8
               (i32.add
                (local.get $2)
                (local.get $13)
               )
               (local.get $15)
              )
              (br_if $while-in11
               (i32.ne
                (local.get $8)
                (local.tee $7
                 (i32.add
                  (local.get $7)
                  (i32.const 1)
                 )
                )
               )
              )
             )
            )
           )
           (if
            (i32.eqz
             (i32.and
              (i32.load offset=72
               (local.get $0)
              )
              (i32.const 2)
             )
            )
            (block
             (local.set $9
              (i32.and
               (i32.trunc_f64_s
                (f64.add
                 (f64.promote_f32
                  (f32.mul
                   (call $_stbir__saturate
                    (f32.load
                     (i32.add
                      (i32.shl
                       (local.tee $7
                        (i32.add
                         (local.get $5)
                         (local.get $9)
                        )
                       )
                       (i32.const 2)
                      )
                      (local.get $3)
                     )
                    )
                   )
                   (f32.const 255)
                  )
                 )
                 (f64.const 0.5)
                )
               )
               (i32.const 255)
              )
             )
             (i32.store8
              (i32.add
               (local.get $2)
               (local.get $7)
              )
              (local.get $9)
             )
            )
           )
           (br_if $while-in9
            (i32.ne
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const 1)
              )
             )
             (local.get $1)
            )
           )
          )
          (br $folding-inner0)
         )
         (br_if $folding-inner0
          (i32.le_s
           (local.get $1)
           (i32.const 0)
          )
         )
         (local.set $6
          (i32.gt_s
           (local.get $4)
           (i32.const 0)
          )
         )
         (local.set $0
          (i32.const 0)
         )
         (loop $while-in14
          (local.set $7
           (i32.mul
            (local.get $0)
            (local.get $4)
           )
          )
          (if
           (local.get $6)
           (block
            (local.set $5
             (i32.const 0)
            )
            (loop $while-in16
             (local.set $11
              (i32.and
               (i32.trunc_f64_s
                (f64.add
                 (f64.promote_f32
                  (f32.mul
                   (call $_stbir__saturate
                    (f32.load
                     (i32.add
                      (i32.shl
                       (local.tee $8
                        (i32.add
                         (local.get $5)
                         (local.get $7)
                        )
                       )
                       (i32.const 2)
                      )
                      (local.get $3)
                     )
                    )
                   )
                   (f32.const 65535)
                  )
                 )
                 (f64.const 0.5)
                )
               )
               (i32.const 65535)
              )
             )
             (i32.store16
              (i32.add
               (i32.shl
                (local.get $8)
                (i32.const 1)
               )
               (local.get $2)
              )
              (local.get $11)
             )
             (br_if $while-in16
              (i32.ne
               (local.tee $5
                (i32.add
                 (local.get $5)
                 (i32.const 1)
                )
               )
               (local.get $4)
              )
             )
            )
           )
          )
          (br_if $while-in14
           (i32.ne
            (local.tee $0
             (i32.add
              (local.get $0)
              (i32.const 1)
             )
            )
            (local.get $1)
           )
          )
         )
         (br $folding-inner0)
        )
        (br_if $folding-inner0
         (i32.le_s
          (local.get $1)
          (i32.const 0)
         )
        )
        (local.set $12
         (i32.gt_s
          (local.get $8)
          (i32.const 0)
         )
        )
        (local.set $6
         (i32.const 0)
        )
        (loop $while-in19
         (local.set $9
          (i32.mul
           (local.get $4)
           (local.get $6)
          )
         )
         (if
          (local.get $12)
          (block
           (local.set $7
            (i32.const 0)
           )
           (loop $while-in21
            (local.set $15
             (i32.and
              (i32.trunc_f64_s
               (f64.add
                (f64.promote_f32
                 (f32.mul
                  (call $_stbir__linear_to_srgb
                   (call $_stbir__saturate
                    (f32.load
                     (i32.add
                      (i32.shl
                       (local.tee $13
                        (i32.add
                         (i32.load16_u
                          (i32.add
                           (i32.shl
                            (local.get $7)
                            (i32.const 1)
                           )
                           (local.get $11)
                          )
                         )
                         (local.get $9)
                        )
                       )
                       (i32.const 2)
                      )
                      (local.get $3)
                     )
                    )
                   )
                  )
                  (f32.const 65535)
                 )
                )
                (f64.const 0.5)
               )
              )
              (i32.const 65535)
             )
            )
            (i32.store16
             (i32.add
              (i32.shl
               (local.get $13)
               (i32.const 1)
              )
              (local.get $2)
             )
             (local.get $15)
            )
            (br_if $while-in21
             (i32.ne
              (local.get $8)
              (local.tee $7
               (i32.add
                (local.get $7)
                (i32.const 1)
               )
              )
             )
            )
           )
          )
         )
         (if
          (i32.eqz
           (i32.and
            (i32.load offset=72
             (local.get $0)
            )
            (i32.const 2)
           )
          )
          (block
           (local.set $9
            (i32.and
             (i32.trunc_f64_s
              (f64.add
               (f64.promote_f32
                (f32.mul
                 (call $_stbir__saturate
                  (f32.load
                   (i32.add
                    (i32.shl
                     (local.tee $7
                      (i32.add
                       (local.get $5)
                       (local.get $9)
                      )
                     )
                     (i32.const 2)
                    )
                    (local.get $3)
                   )
                  )
                 )
                 (f32.const 65535)
                )
               )
               (f64.const 0.5)
              )
             )
             (i32.const 65535)
            )
           )
           (i32.store16
            (i32.add
             (i32.shl
              (local.get $7)
              (i32.const 1)
             )
             (local.get $2)
            )
            (local.get $9)
           )
          )
         )
         (br_if $while-in19
          (i32.ne
           (local.tee $6
            (i32.add
             (local.get $6)
             (i32.const 1)
            )
           )
           (local.get $1)
          )
         )
        )
        (br $folding-inner0)
       )
       (br_if $folding-inner0
        (i32.le_s
         (local.get $1)
         (i32.const 0)
        )
       )
       (local.set $6
        (i32.gt_s
         (local.get $4)
         (i32.const 0)
        )
       )
       (local.set $0
        (i32.const 0)
       )
       (loop $while-in24
        (local.set $7
         (i32.mul
          (local.get $0)
          (local.get $4)
         )
        )
        (if
         (local.get $6)
         (block
          (local.set $5
           (i32.const 0)
          )
          (loop $while-in26
           (local.set $11
            (i32.trunc_f64_u
             (f64.add
              (f64.mul
               (f64.promote_f32
                (call $_stbir__saturate
                 (f32.load
                  (i32.add
                   (i32.shl
                    (local.tee $8
                     (i32.add
                      (local.get $5)
                      (local.get $7)
                     )
                    )
                    (i32.const 2)
                   )
                   (local.get $3)
                  )
                 )
                )
               )
               (f64.const 4294967295)
              )
              (f64.const 0.5)
             )
            )
           )
           (i32.store
            (i32.add
             (i32.shl
              (local.get $8)
              (i32.const 2)
             )
             (local.get $2)
            )
            (local.get $11)
           )
           (br_if $while-in26
            (i32.ne
             (local.tee $5
              (i32.add
               (local.get $5)
               (i32.const 1)
              )
             )
             (local.get $4)
            )
           )
          )
         )
        )
        (br_if $while-in24
         (i32.ne
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
          (local.get $1)
         )
        )
       )
       (br $folding-inner0)
      )
      (br_if $folding-inner0
       (i32.le_s
        (local.get $1)
        (i32.const 0)
       )
      )
      (local.set $12
       (i32.gt_s
        (local.get $8)
        (i32.const 0)
       )
      )
      (local.set $6
       (i32.const 0)
      )
      (loop $while-in29
       (local.set $9
        (i32.mul
         (local.get $4)
         (local.get $6)
        )
       )
       (if
        (local.get $12)
        (block
         (local.set $7
          (i32.const 0)
         )
         (loop $while-in31
          (local.set $15
           (i32.trunc_f64_u
            (f64.add
             (f64.mul
              (f64.promote_f32
               (call $_stbir__linear_to_srgb
                (call $_stbir__saturate
                 (f32.load
                  (i32.add
                   (i32.shl
                    (local.tee $13
                     (i32.add
                      (i32.load16_u
                       (i32.add
                        (i32.shl
                         (local.get $7)
                         (i32.const 1)
                        )
                        (local.get $11)
                       )
                      )
                      (local.get $9)
                     )
                    )
                    (i32.const 2)
                   )
                   (local.get $3)
                  )
                 )
                )
               )
              )
              (f64.const 4294967295)
             )
             (f64.const 0.5)
            )
           )
          )
          (i32.store
           (i32.add
            (i32.shl
             (local.get $13)
             (i32.const 2)
            )
            (local.get $2)
           )
           (local.get $15)
          )
          (br_if $while-in31
           (i32.ne
            (local.get $8)
            (local.tee $7
             (i32.add
              (local.get $7)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
       )
       (if
        (i32.eqz
         (i32.and
          (i32.load offset=72
           (local.get $0)
          )
          (i32.const 2)
         )
        )
        (block
         (local.set $9
          (i32.trunc_f64_s
           (f64.add
            (f64.mul
             (f64.promote_f32
              (call $_stbir__saturate
               (f32.load
                (i32.add
                 (i32.shl
                  (local.tee $7
                   (i32.add
                    (local.get $5)
                    (local.get $9)
                   )
                  )
                  (i32.const 2)
                 )
                 (local.get $3)
                )
               )
              )
             )
             (f64.const 4294967295)
            )
            (f64.const 0.5)
           )
          )
         )
         (i32.store
          (i32.add
           (i32.shl
            (local.get $7)
            (i32.const 2)
           )
           (local.get $2)
          )
          (local.get $9)
         )
        )
       )
       (br_if $while-in29
        (i32.ne
         (local.tee $6
          (i32.add
           (local.get $6)
           (i32.const 1)
          )
         )
         (local.get $1)
        )
       )
      )
      (br $folding-inner0)
     )
     (br_if $folding-inner0
      (i32.le_s
       (local.get $1)
       (i32.const 0)
      )
     )
     (local.set $6
      (i32.gt_s
       (local.get $4)
       (i32.const 0)
      )
     )
     (local.set $0
      (i32.const 0)
     )
     (loop $while-in34
      (local.set $7
       (i32.mul
        (local.get $0)
        (local.get $4)
       )
      )
      (if
       (local.get $6)
       (block
        (local.set $5
         (i32.const 0)
        )
        (loop $while-in36
         (i32.store
          (i32.add
           (i32.shl
            (local.tee $8
             (i32.add
              (local.get $5)
              (local.get $7)
             )
            )
            (i32.const 2)
           )
           (local.get $2)
          )
          (i32.load
           (i32.add
            (i32.shl
             (local.get $8)
             (i32.const 2)
            )
            (local.get $3)
           )
          )
         )
         (br_if $while-in36
          (i32.ne
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (local.get $4)
          )
         )
        )
       )
      )
      (br_if $while-in34
       (i32.ne
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (local.get $1)
       )
      )
     )
     (br $folding-inner0)
    )
    (br_if $folding-inner0
     (i32.le_s
      (local.get $1)
      (i32.const 0)
     )
    )
    (local.set $12
     (i32.gt_s
      (local.get $8)
      (i32.const 0)
     )
    )
    (local.set $6
     (i32.const 0)
    )
    (loop $while-in39
     (local.set $9
      (i32.mul
       (local.get $4)
       (local.get $6)
      )
     )
     (if
      (local.get $12)
      (block
       (local.set $7
        (i32.const 0)
       )
       (loop $while-in41
        (local.set $14
         (call $_stbir__linear_to_srgb
          (f32.load
           (i32.add
            (i32.shl
             (local.tee $13
              (i32.add
               (i32.load16_u
                (i32.add
                 (i32.shl
                  (local.get $7)
                  (i32.const 1)
                 )
                 (local.get $11)
                )
               )
               (local.get $9)
              )
             )
             (i32.const 2)
            )
            (local.get $3)
           )
          )
         )
        )
        (f32.store
         (i32.add
          (i32.shl
           (local.get $13)
           (i32.const 2)
          )
          (local.get $2)
         )
         (local.get $14)
        )
        (br_if $while-in41
         (i32.ne
          (local.get $8)
          (local.tee $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
     )
     (local.set $7
      (i32.add
       (local.get $5)
       (local.get $9)
      )
     )
     (if
      (i32.eqz
       (i32.and
        (i32.load offset=72
         (local.get $0)
        )
        (i32.const 2)
       )
      )
      (i32.store
       (i32.add
        (i32.shl
         (local.get $7)
         (i32.const 2)
        )
        (local.get $2)
       )
       (i32.load
        (i32.add
         (i32.shl
          (local.get $7)
          (i32.const 2)
         )
         (local.get $3)
        )
       )
      )
     )
     (br_if $while-in39
      (i32.ne
       (local.tee $6
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.get $1)
      )
     )
    )
    (br $folding-inner0)
   )
   (call $___assert_fail
    (i32.const 14305)
    (i32.const 13001)
    (i32.const 1861)
    (i32.const 14426)
   )
   (return)
  )
  (global.set $STACKTOP
   (local.get $10)
  )
 )
 (func $_stbir__saturate (; 470 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (select
   (f32.const 0)
   (select
    (f32.const 1)
    (local.get $0)
    (f32.gt
     (local.get $0)
     (f32.const 1)
    )
   )
   (f32.lt
    (local.get $0)
    (f32.const 0)
   )
  )
 )
 (func $_stbir__linear_to_srgb_uchar (; 471 ;) (; has Stack IR ;) (param $0 f32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (i32.and
   (i32.shr_u
    (i32.add
     (i32.mul
      (i32.and
       (local.tee $2
        (i32.load
         (i32.add
          (i32.shl
           (i32.shr_u
            (i32.add
             (local.tee $1
              (i32.reinterpret_f32
               (select
                (f32.const 0.9999999403953552)
                (local.tee $0
                 (select
                  (local.get $0)
                  (f32.const 0.0001220703125)
                  (f32.gt
                   (local.get $0)
                   (f32.const 0.0001220703125)
                  )
                 )
                )
                (f32.gt
                 (local.get $0)
                 (f32.const 0.9999999403953552)
                )
               )
              )
             )
             (i32.const -956301312)
            )
            (i32.const 20)
           )
           (i32.const 2)
          )
          (i32.const 6016)
         )
        )
       )
       (i32.const 65535)
      )
      (i32.and
       (i32.shr_u
        (local.get $1)
        (i32.const 12)
       )
       (i32.const 255)
      )
     )
     (i32.shl
      (i32.shr_u
       (local.get $2)
       (i32.const 16)
      )
      (i32.const 9)
     )
    )
    (i32.const 16)
   )
   (i32.const 255)
  )
 )
 (func $_stbir__linear_to_srgb (; 472 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (if (result f32)
   (f32.le
    (local.get $0)
    (f32.const 3.1308000907301903e-03)
   )
   (f32.mul
    (local.get $0)
    (f32.const 12.920000076293945)
   )
   (f32.add
    (f32.mul
     (f32.demote_f64
      (call $_pow
       (f64.promote_f32
        (local.get $0)
       )
       (f64.const 0.4166666567325592)
      )
     )
     (f32.const 1.0549999475479126)
    )
    (f32.const -0.054999999701976776)
   )
  )
 )
 (func $_stbir__support_zero (; 473 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (f32.const 0)
 )
 (func $_stbir__filter_trapezoid (; 474 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (result f32)
  (local $2 f32)
  (local $3 f32)
  (if
   (i32.eqz
    (f32.le
     (local.get $1)
     (f32.const 1)
    )
   )
   (call $___assert_fail
    (i32.const 14449)
    (i32.const 13001)
    (i32.const 762)
    (i32.const 14485)
   )
  )
  (if
   (f32.ge
    (local.tee $0
     (f32.abs
      (local.get $0)
     )
    )
    (local.tee $3
     (f32.add
      (local.tee $2
       (f32.mul
        (local.get $1)
        (f32.const 0.5)
       )
      )
      (f32.const 0.5)
     )
    )
   )
   (return
    (f32.const 0)
   )
  )
  (if
   (f32.le
    (local.get $0)
    (f32.sub
     (f32.const 0.5)
     (local.get $2)
    )
   )
   (return
    (f32.const 1)
   )
  )
  (f32.div
   (f32.sub
    (local.get $3)
    (local.get $0)
   )
   (local.get $1)
  )
 )
 (func $_stbir__support_trapezoid (; 475 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (if
   (f32.le
    (local.get $0)
    (f32.const 1)
   )
   (return
    (f32.add
     (f32.mul
      (local.get $0)
      (f32.const 0.5)
     )
     (f32.const 0.5)
    )
   )
   (call $___assert_fail
    (i32.const 14449)
    (i32.const 13001)
    (i32.const 780)
    (i32.const 14460)
   )
  )
  (f32.const 0)
 )
 (func $_stbir__filter_triangle (; 476 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (result f32)
  (select
   (f32.sub
    (f32.const 1)
    (local.tee $0
     (f32.abs
      (local.get $0)
     )
    )
   )
   (f32.const 0)
   (f32.le
    (local.get $0)
    (f32.const 1)
   )
  )
 )
 (func $_stbir__support_one (; 477 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (f32.const 1)
 )
 (func $_stbir__filter_cubic (; 478 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (result f32)
  (if
   (f32.lt
    (local.tee $1
     (f32.abs
      (local.get $0)
     )
    )
    (f32.const 1)
   )
   (return
    (f32.div
     (f32.add
      (f32.mul
       (f32.mul
        (local.get $0)
        (local.get $0)
       )
       (f32.add
        (f32.mul
         (local.get $1)
         (f32.const 3)
        )
        (f32.const -6)
       )
      )
      (f32.const 4)
     )
     (f32.const 6)
    )
   )
  )
  (if
   (i32.eqz
    (f32.lt
     (local.get $1)
     (f32.const 2)
    )
   )
   (return
    (f32.const 0)
   )
  )
  (f32.div
   (f32.add
    (f32.mul
     (local.get $1)
     (f32.add
      (f32.mul
       (local.get $1)
       (f32.sub
        (f32.const 6)
        (local.get $1)
       )
      )
      (f32.const -12)
     )
    )
    (f32.const 8)
   )
   (f32.const 6)
  )
 )
 (func $_stbir__support_two (; 479 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (f32.const 2)
 )
 (func $_stbir__filter_catmullrom (; 480 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (result f32)
  (if
   (f32.lt
    (local.tee $1
     (f32.abs
      (local.get $0)
     )
    )
    (f32.const 1)
   )
   (return
    (f32.sub
     (f32.const 1)
     (f32.mul
      (f32.mul
       (local.get $0)
       (local.get $0)
      )
      (f32.sub
       (f32.const 2.5)
       (f32.mul
        (local.get $1)
        (f32.const 1.5)
       )
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (f32.lt
     (local.get $1)
     (f32.const 2)
    )
   )
   (return
    (f32.const 0)
   )
  )
  (f32.sub
   (f32.const 2)
   (f32.mul
    (local.get $1)
    (f32.add
     (f32.mul
      (local.get $1)
      (f32.add
       (f32.mul
        (local.get $1)
        (f32.const 0.5)
       )
       (f32.const -2.5)
      )
     )
     (f32.const 4)
    )
   )
  )
 )
 (func $_stbir__filter_mitchell (; 481 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (result f32)
  (if
   (f32.lt
    (local.tee $1
     (f32.abs
      (local.get $0)
     )
    )
    (f32.const 1)
   )
   (return
    (f32.div
     (f32.add
      (f32.mul
       (f32.mul
        (local.get $0)
        (local.get $0)
       )
       (f32.add
        (f32.mul
         (local.get $1)
         (f32.const 21)
        )
        (f32.const -36)
       )
      )
      (f32.const 16)
     )
     (f32.const 18)
    )
   )
  )
  (if
   (i32.eqz
    (f32.lt
     (local.get $1)
     (f32.const 2)
    )
   )
   (return
    (f32.const 0)
   )
  )
  (f32.div
   (f32.add
    (f32.mul
     (local.get $1)
     (f32.add
      (f32.mul
       (local.get $1)
       (f32.sub
        (f32.const 36)
        (f32.mul
         (local.get $1)
         (f32.const 7)
        )
       )
      )
      (f32.const -60)
     )
    )
    (f32.const 32)
   )
   (f32.const 18)
  )
 )
 (func $_stbir__calculate_sample_range_upsample (; 482 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 f32)
  (f32.store
   (local.get $6)
   (f32.div
    (f32.add
     (local.tee $7
      (f32.add
       (f32.convert_i32_s
        (local.get $0)
       )
       (f32.const 0.5)
      )
     )
     (local.get $3)
    )
    (local.get $2)
   )
  )
  (i32.store
   (local.get $4)
   (i32.trunc_f64_s
    (f64.floor
     (f64.add
      (f64.promote_f32
       (f32.div
        (f32.add
         (f32.sub
          (local.get $7)
          (local.get $1)
         )
         (local.get $3)
        )
        (local.get $2)
       )
      )
      (f64.const 0.5)
     )
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.trunc_f64_s
    (f64.floor
     (f64.add
      (f64.promote_f32
       (f32.div
        (f32.add
         (f32.add
          (local.get $7)
          (local.get $1)
         )
         (local.get $3)
        )
        (local.get $2)
       )
      )
      (f64.const -0.5)
     )
    )
   )
  )
 )
 (func $_stbir__decode_and_resample_upsample (; 483 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (call $_stbir__decode_scanline
   (local.get $0)
   (local.get $1)
  )
  (local.set $2
   (i32.eqz
    (call $_stbir__use_width_upsampling
     (local.get $0)
    )
   )
  )
  (local.set $1
   (call $_stbir__add_empty_ring_buffer_entry
    (local.get $0)
    (local.get $1)
   )
  )
  (if
   (local.get $2)
   (call $_stbir__resample_horizontal_downsample
    (local.get $0)
    (local.get $1)
   )
   (call $_stbir__resample_horizontal_upsample
    (local.get $0)
    (local.get $1)
   )
  )
 )
 (func $_stbir__resample_vertical_upsample (; 484 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local.set $5
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $18
   (i32.load offset=112
    (local.get $0)
   )
  )
  (local.set $8
   (i32.load
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
  )
  (local.set $11
   (i32.load offset=68
    (local.get $0)
   )
  )
  (local.set $19
   (i32.load offset=164
    (local.get $0)
   )
  )
  (local.set $12
   (i32.load offset=16
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load offset=184
    (local.get $0)
   )
  )
  (local.set $13
   (i32.add
    (i32.load offset=96
     (local.get $0)
    )
    (i32.shl
     (i32.load offset=76
      (local.get $0)
     )
     (i32.const 1)
    )
   )
  )
  (local.set $20
   (i32.load offset=180
    (local.get $0)
   )
  )
  (local.set $21
   (i32.load offset=176
    (local.get $0)
   )
  )
  (local.set $22
   (i32.load offset=168
    (local.get $0)
   )
  )
  (local.set $23
   (i32.shr_u
    (i32.load offset=160
     (local.get $0)
    )
    (i32.const 2)
   )
  )
  (local.set $24
   (i32.mul
    (local.get $1)
    (i32.load offset=132
     (local.get $0)
    )
   )
  )
  (local.set $2
   (i32.load
    (i32.add
     (local.tee $9
      (i32.load offset=108
       (local.get $0)
      )
     )
     (i32.shl
      (local.get $1)
      (i32.const 3)
     )
    )
   )
  )
  (local.set $14
   (i32.load offset=4
    (i32.add
     (i32.shl
      (local.get $1)
      (i32.const 3)
     )
     (local.get $9)
    )
   )
  )
  (local.set $15
   (i32.mul
    (local.get $1)
    (i32.load offset=28
     (local.get $0)
    )
   )
  )
  (if
   (i32.eqz
    (call $_stbir__use_height_upsampling
     (local.get $0)
    )
   )
   (call $___assert_fail
    (i32.const 14509)
    (i32.const 13001)
    (i32.const 1897)
    (i32.const 14658)
   )
  )
  (drop
   (call $_memset
    (local.get $4)
    (i32.const 0)
    (i32.mul
     (local.get $8)
     (i32.shl
      (local.get $5)
      (i32.const 2)
     )
    )
   )
  )
  (block $folding-inner0
   (block $switch-default
    (block $switch-case16
     (block $switch-case11
      (block $switch-case6
       (block $switch-case
        (br_table $switch-case $switch-case6 $switch-case11 $switch-case16 $switch-default
         (i32.sub
          (local.get $8)
          (i32.const 1)
         )
        )
       )
       (br_if $folding-inner0
        (i32.gt_s
         (local.get $2)
         (local.get $14)
        )
       )
       (local.set $6
        (i32.gt_s
         (local.get $5)
         (i32.const 0)
        )
       )
       (local.set $1
        (i32.const 0)
       )
       (loop $while-in
        (local.set $9
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (local.set $3
         (call $_stbir__get_ring_buffer_scanline
          (local.get $2)
          (local.get $20)
          (local.get $21)
          (local.get $22)
          (local.get $19)
          (local.get $23)
         )
        )
        (local.set $10
         (f32.load
          (i32.add
           (i32.shl
            (i32.add
             (local.get $1)
             (local.get $24)
            )
            (i32.const 2)
           )
           (local.get $18)
          )
         )
        )
        (if
         (local.get $6)
         (block
          (local.set $1
           (i32.const 0)
          )
          (loop $while-in1
           (f32.store
            (local.tee $16
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $4)
             )
            )
            (f32.add
             (f32.load
              (local.get $16)
             )
             (f32.mul
              (local.get $10)
              (f32.load
               (i32.add
                (i32.shl
                 (local.get $1)
                 (i32.const 2)
                )
                (local.get $3)
               )
              )
             )
            )
           )
           (br_if $while-in1
            (i32.ne
             (local.tee $1
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (local.get $5)
            )
           )
          )
         )
        )
        (local.set $3
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (if
         (i32.lt_s
          (local.get $2)
          (local.get $14)
         )
         (block
          (local.set $1
           (local.get $9)
          )
          (local.set $2
           (local.get $3)
          )
          (br $while-in)
         )
        )
       )
       (br $folding-inner0)
      )
      (br_if $folding-inner0
       (i32.gt_s
        (local.get $2)
        (local.get $14)
       )
      )
      (local.set $16
       (i32.gt_s
        (local.get $5)
        (i32.const 0)
       )
      )
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in3
       (local.set $9
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $3
        (call $_stbir__get_ring_buffer_scanline
         (local.get $2)
         (local.get $20)
         (local.get $21)
         (local.get $22)
         (local.get $19)
         (local.get $23)
        )
       )
       (local.set $10
        (f32.load
         (i32.add
          (i32.shl
           (i32.add
            (local.get $1)
            (local.get $24)
           )
           (i32.const 2)
          )
          (local.get $18)
         )
        )
       )
       (if
        (local.get $16)
        (block
         (local.set $1
          (i32.const 0)
         )
         (loop $while-in5
          (f32.store
           (local.tee $7
            (i32.add
             (i32.shl
              (local.tee $6
               (i32.shl
                (local.get $1)
                (i32.const 1)
               )
              )
              (i32.const 2)
             )
             (local.get $4)
            )
           )
           (f32.add
            (f32.load
             (local.get $7)
            )
            (f32.mul
             (local.get $10)
             (f32.load
              (i32.add
               (i32.shl
                (local.get $6)
                (i32.const 2)
               )
               (local.get $3)
              )
             )
            )
           )
          )
          (f32.store
           (local.tee $7
            (i32.add
             (i32.shl
              (local.tee $6
               (i32.or
                (local.get $6)
                (i32.const 1)
               )
              )
              (i32.const 2)
             )
             (local.get $4)
            )
           )
           (f32.add
            (f32.load
             (local.get $7)
            )
            (f32.mul
             (local.get $10)
             (f32.load
              (i32.add
               (i32.shl
                (local.get $6)
                (i32.const 2)
               )
               (local.get $3)
              )
             )
            )
           )
          )
          (br_if $while-in5
           (i32.ne
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.get $5)
           )
          )
         )
        )
       )
       (local.set $3
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (if
        (i32.lt_s
         (local.get $2)
         (local.get $14)
        )
        (block
         (local.set $1
          (local.get $9)
         )
         (local.set $2
          (local.get $3)
         )
         (br $while-in3)
        )
       )
      )
      (br $folding-inner0)
     )
     (br_if $folding-inner0
      (i32.gt_s
       (local.get $2)
       (local.get $14)
      )
     )
     (local.set $16
      (i32.gt_s
       (local.get $5)
       (i32.const 0)
      )
     )
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in8
      (local.set $9
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
      (local.set $3
       (call $_stbir__get_ring_buffer_scanline
        (local.get $2)
        (local.get $20)
        (local.get $21)
        (local.get $22)
        (local.get $19)
        (local.get $23)
       )
      )
      (local.set $10
       (f32.load
        (i32.add
         (i32.shl
          (i32.add
           (local.get $1)
           (local.get $24)
          )
          (i32.const 2)
         )
         (local.get $18)
        )
       )
      )
      (if
       (local.get $16)
       (block
        (local.set $1
         (i32.const 0)
        )
        (loop $while-in10
         (f32.store
          (local.tee $7
           (i32.add
            (i32.shl
             (local.tee $6
              (i32.mul
               (local.get $1)
               (i32.const 3)
              )
             )
             (i32.const 2)
            )
            (local.get $4)
           )
          )
          (f32.add
           (f32.load
            (local.get $7)
           )
           (f32.mul
            (local.get $10)
            (f32.load
             (i32.add
              (i32.shl
               (local.get $6)
               (i32.const 2)
              )
              (local.get $3)
             )
            )
           )
          )
         )
         (f32.store
          (local.tee $17
           (i32.add
            (i32.shl
             (local.tee $7
              (i32.add
               (local.get $6)
               (i32.const 1)
              )
             )
             (i32.const 2)
            )
            (local.get $4)
           )
          )
          (f32.add
           (f32.load
            (local.get $17)
           )
           (f32.mul
            (local.get $10)
            (f32.load
             (i32.add
              (i32.shl
               (local.get $7)
               (i32.const 2)
              )
              (local.get $3)
             )
            )
           )
          )
         )
         (f32.store
          (local.tee $7
           (i32.add
            (i32.shl
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const 2)
              )
             )
             (i32.const 2)
            )
            (local.get $4)
           )
          )
          (f32.add
           (f32.load
            (local.get $7)
           )
           (f32.mul
            (local.get $10)
            (f32.load
             (i32.add
              (i32.shl
               (local.get $6)
               (i32.const 2)
              )
              (local.get $3)
             )
            )
           )
          )
         )
         (br_if $while-in10
          (i32.ne
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (local.get $5)
          )
         )
        )
       )
      )
      (local.set $3
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
      )
      (if
       (i32.lt_s
        (local.get $2)
        (local.get $14)
       )
       (block
        (local.set $1
         (local.get $9)
        )
        (local.set $2
         (local.get $3)
        )
        (br $while-in8)
       )
      )
     )
     (br $folding-inner0)
    )
    (br_if $folding-inner0
     (i32.gt_s
      (local.get $2)
      (local.get $14)
     )
    )
    (local.set $16
     (i32.gt_s
      (local.get $5)
      (i32.const 0)
     )
    )
    (local.set $1
     (i32.const 0)
    )
    (loop $while-in13
     (local.set $9
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $3
      (call $_stbir__get_ring_buffer_scanline
       (local.get $2)
       (local.get $20)
       (local.get $21)
       (local.get $22)
       (local.get $19)
       (local.get $23)
      )
     )
     (local.set $10
      (f32.load
       (i32.add
        (i32.shl
         (i32.add
          (local.get $1)
          (local.get $24)
         )
         (i32.const 2)
        )
        (local.get $18)
       )
      )
     )
     (if
      (local.get $16)
      (block
       (local.set $1
        (i32.const 0)
       )
       (loop $while-in15
        (f32.store
         (local.tee $7
          (i32.add
           (i32.shl
            (local.tee $6
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
            )
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (f32.add
          (f32.load
           (local.get $7)
          )
          (f32.mul
           (local.get $10)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $6)
              (i32.const 2)
             )
             (local.get $3)
            )
           )
          )
         )
        )
        (f32.store
         (local.tee $17
          (i32.add
           (i32.shl
            (local.tee $7
             (i32.or
              (local.get $6)
              (i32.const 1)
             )
            )
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (f32.add
          (f32.load
           (local.get $17)
          )
          (f32.mul
           (local.get $10)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $7)
              (i32.const 2)
             )
             (local.get $3)
            )
           )
          )
         )
        )
        (f32.store
         (local.tee $17
          (i32.add
           (i32.shl
            (local.tee $7
             (i32.or
              (local.get $6)
              (i32.const 2)
             )
            )
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (f32.add
          (f32.load
           (local.get $17)
          )
          (f32.mul
           (local.get $10)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $7)
              (i32.const 2)
             )
             (local.get $3)
            )
           )
          )
         )
        )
        (f32.store
         (local.tee $7
          (i32.add
           (i32.shl
            (local.tee $6
             (i32.or
              (local.get $6)
              (i32.const 3)
             )
            )
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (f32.add
          (f32.load
           (local.get $7)
          )
          (f32.mul
           (local.get $10)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $6)
              (i32.const 2)
             )
             (local.get $3)
            )
           )
          )
         )
        )
        (br_if $while-in15
         (i32.ne
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (local.get $5)
         )
        )
       )
      )
     )
     (local.set $3
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (if
      (i32.lt_s
       (local.get $2)
       (local.get $14)
      )
      (block
       (local.set $1
        (local.get $9)
       )
       (local.set $2
        (local.get $3)
       )
       (br $while-in13)
      )
     )
    )
    (br $folding-inner0)
   )
   (br_if $folding-inner0
    (i32.gt_s
     (local.get $2)
     (local.get $14)
    )
   )
   (local.set $6
    (i32.gt_s
     (local.get $5)
     (i32.const 0)
    )
   )
   (local.set $16
    (i32.gt_s
     (local.get $8)
     (i32.const 0)
    )
   )
   (local.set $1
    (i32.const 0)
   )
   (loop $while-in18
    (local.set $3
     (i32.add
      (local.get $1)
      (i32.const 1)
     )
    )
    (local.set $7
     (call $_stbir__get_ring_buffer_scanline
      (local.get $2)
      (local.get $20)
      (local.get $21)
      (local.get $22)
      (local.get $19)
      (local.get $23)
     )
    )
    (local.set $10
     (f32.load
      (i32.add
       (i32.shl
        (i32.add
         (local.get $1)
         (local.get $24)
        )
        (i32.const 2)
       )
       (local.get $18)
      )
     )
    )
    (if
     (local.get $6)
     (block
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in20
       (local.set $17
        (i32.mul
         (local.get $1)
         (local.get $8)
        )
       )
       (if
        (local.get $16)
        (block
         (local.set $9
          (i32.const 0)
         )
         (loop $while-in22
          (f32.store
           (local.tee $26
            (i32.add
             (i32.shl
              (local.tee $25
               (i32.add
                (local.get $9)
                (local.get $17)
               )
              )
              (i32.const 2)
             )
             (local.get $4)
            )
           )
           (f32.add
            (f32.load
             (local.get $26)
            )
            (f32.mul
             (local.get $10)
             (f32.load
              (i32.add
               (i32.shl
                (local.get $25)
                (i32.const 2)
               )
               (local.get $7)
              )
             )
            )
           )
          )
          (br_if $while-in22
           (i32.ne
            (local.tee $9
             (i32.add
              (local.get $9)
              (i32.const 1)
             )
            )
            (local.get $8)
           )
          )
         )
        )
       )
       (br_if $while-in20
        (i32.ne
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (local.get $5)
        )
       )
      )
     )
    )
    (local.set $9
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (if
     (i32.lt_s
      (local.get $2)
      (local.get $14)
     )
     (block
      (local.set $1
       (local.get $3)
      )
      (local.set $2
       (local.get $9)
      )
      (br $while-in18)
     )
    )
   )
   (call $_stbir__encode_scanline
    (local.get $0)
    (local.get $5)
    (i32.add
     (local.get $12)
     (local.get $15)
    )
    (local.get $4)
    (local.get $8)
    (local.get $11)
    (local.get $13)
   )
   (return)
  )
  (call $_stbir__encode_scanline
   (local.get $0)
   (local.get $5)
   (i32.add
    (local.get $12)
    (local.get $15)
   )
   (local.get $4)
   (local.get $8)
   (local.get $11)
   (local.get $13)
  )
 )
 (func $_stbir__get_contributors (; 485 ;) (; has Stack IR ;) (param $0 f32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (if
   (call $_stbir__use_upsampling
    (local.get $0)
   )
   (return
    (local.get $3)
   )
  )
  (i32.add
   (local.get $2)
   (i32.shl
    (call $_stbir__get_filter_pixel_margin
     (local.get $1)
     (local.get $0)
    )
    (i32.const 1)
   )
  )
 )
 (func $_stbir__get_contributor (; 486 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (i32.add
   (i32.shl
    (local.get $1)
    (i32.const 3)
   )
   (local.get $0)
  )
 )
 (func $_stbir__get_coefficient (; 487 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32) (param $3 i32) (param $4 i32) (result i32)
  (i32.add
   (i32.shl
    (i32.add
     (local.get $4)
     (i32.mul
      (call $_stbir__get_coefficient_width
       (local.get $1)
       (local.get $2)
      )
      (local.get $3)
     )
    )
    (i32.const 2)
   )
   (local.get $0)
  )
 )
 (func $_stbir__calculate_coefficients_upsample (; 488 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 i32) (param $3 i32) (param $4 f32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (local $10 f32)
  (local.set $8
   (i32.add
    (i32.shl
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 4944)
   )
  )
  (local.set $0
   (i32.load
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 3)
     )
     (i32.const 4948)
    )
   )
  )
  (if
   (i32.gt_s
    (i32.sub
     (local.get $3)
     (local.get $2)
    )
    (i32.trunc_f32_s
     (f32.ceil
      (f32.mul
       (call_indirect (type $FUNCSIG$ff)
        (local.tee $9
         (f32.div
          (f32.const 1)
          (local.get $1)
         )
        )
        (i32.and
         (local.get $0)
         (i32.const 7)
        )
       )
       (f32.const 2)
      )
     )
    )
   )
   (call $___assert_fail
    (i32.const 15053)
    (i32.const 13001)
    (i32.const 1043)
    (i32.const 15152)
   )
  )
  (i32.store
   (local.get $5)
   (local.get $2)
  )
  (i32.store offset=4
   (local.get $5)
   (local.get $3)
  )
  (if
   (i32.lt_s
    (local.get $3)
    (local.get $2)
   )
   (call $___assert_fail
    (i32.const 14905)
    (i32.const 13001)
    (i32.const 1048)
    (i32.const 15152)
   )
  )
  (if
   (i32.lt_s
    (local.tee $0
     (i32.sub
      (local.get $3)
      (local.get $2)
     )
    )
    (i32.const 0)
   )
   (local.set $1
    (f32.const 0)
   )
   (block
    (local.set $0
     (i32.const 0)
    )
    (local.set $1
     (f32.const 0)
    )
    (local.set $0
     (loop $while-in (result i32)
      (local.set $7
       (i32.load
        (local.get $8)
       )
      )
      (f32.store
       (i32.add
        (i32.shl
         (local.get $0)
         (i32.const 2)
        )
        (local.get $6)
       )
       (local.tee $10
        (call_indirect (type $FUNCSIG$fff)
         (f32.sub
          (local.get $4)
          (f32.add
           (f32.convert_i32_s
            (i32.add
             (local.get $0)
             (local.get $2)
            )
           )
           (f32.const 0.5)
          )
         )
         (local.get $9)
         (i32.add
          (i32.and
           (local.get $7)
           (i32.const 7)
          )
          (i32.const 8)
         )
        )
       )
      )
      (local.set $0
       (i32.add
        (local.tee $7
         (if (result i32)
          (i32.or
           (f32.ne
            (local.get $10)
            (f32.const 0)
           )
           (local.get $0)
          )
          (block (result i32)
           (local.set $1
            (f32.add
             (local.get $1)
             (local.get $10)
            )
           )
           (local.get $0)
          )
          (block (result i32)
           (i32.store
            (local.get $5)
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
           )
           (i32.const -1)
          )
         )
        )
        (i32.const 1)
       )
      )
      (br_if $while-in
       (i32.lt_s
        (local.get $7)
        (local.tee $7
         (i32.sub
          (local.get $3)
          (local.get $2)
         )
        )
       )
      )
      (local.get $7)
     )
    )
   )
  )
  (local.set $2
   (i32.load
    (local.get $8)
   )
  )
  (if
   (f32.ne
    (call_indirect (type $FUNCSIG$fff)
     (f32.sub
      (f32.add
       (f32.convert_i32_s
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (f32.const 0.5)
      )
      (local.get $4)
     )
     (local.get $9)
     (i32.add
      (i32.and
       (local.get $2)
       (i32.const 7)
      )
      (i32.const 8)
     )
    )
    (f32.const 0)
   )
   (call $___assert_fail
    (i32.const 15191)
    (i32.const 13001)
    (i32.const 1066)
    (i32.const 15152)
   )
  )
  (if
   (i32.eqz
    (f64.gt
     (f64.promote_f32
      (local.get $1)
     )
     (f64.const 0.9)
    )
   )
   (call $___assert_fail
    (i32.const 15299)
    (i32.const 13001)
    (i32.const 1068)
    (i32.const 15152)
   )
  )
  (if
   (i32.eqz
    (f32.lt
     (local.get $1)
     (f32.const 1.100000023841858)
    )
   )
   (call $___assert_fail
    (i32.const 15318)
    (i32.const 13001)
    (i32.const 1069)
    (i32.const 15152)
   )
  )
  (if
   (i32.lt_s
    (local.get $0)
    (i32.const 0)
   )
   (return)
  )
  (local.set $1
   (f32.div
    (f32.const 1)
    (local.get $1)
   )
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in1
   (f32.store
    (local.tee $3
     (i32.add
      (i32.shl
       (local.get $2)
       (i32.const 2)
      )
      (local.get $6)
     )
    )
    (f32.mul
     (local.get $1)
     (f32.load
      (local.get $3)
     )
    )
   )
   (local.set $3
    (i32.add
     (local.get $2)
     (i32.const 1)
    )
   )
   (if
    (i32.ne
     (local.get $0)
     (local.get $2)
    )
    (block
     (local.set $2
      (local.get $3)
     )
     (br $while-in1)
    )
   )
  )
  (if
   (i32.le_s
    (local.get $0)
    (i32.const -1)
   )
   (return)
  )
  (loop $while-in3
   (if
    (f32.eq
     (f32.load
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $6)
      )
     )
     (f32.const 0)
    )
    (block
     (i32.store offset=4
      (local.get $5)
      (i32.add
       (i32.load
        (local.get $5)
       )
       (i32.add
        (local.get $0)
        (i32.const -1)
       )
      )
     )
     (local.set $2
      (i32.add
       (local.get $0)
       (i32.const -1)
      )
     )
     (if
      (i32.gt_s
       (local.get $0)
       (i32.const 0)
      )
      (block
       (local.set $0
        (local.get $2)
       )
       (br $while-in3)
      )
     )
    )
   )
  )
 )
 (func $_stbir__calculate_coefficients_downsample (; 489 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 i32) (param $3 i32) (param $4 f32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $8
   (i32.add
    (i32.shl
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 4944)
   )
  )
  (local.set $0
   (i32.load
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 3)
     )
     (i32.const 4948)
    )
   )
  )
  (if
   (i32.gt_s
    (local.tee $7
     (i32.sub
      (local.get $3)
      (local.get $2)
     )
    )
    (i32.trunc_f32_s
     (f32.ceil
      (f32.mul
       (call_indirect (type $FUNCSIG$ff)
        (local.get $1)
        (i32.and
         (local.get $0)
         (i32.const 7)
        )
       )
       (f32.const 2)
      )
     )
    )
   )
   (call $___assert_fail
    (i32.const 14759)
    (i32.const 13001)
    (i32.const 1091)
    (i32.const 14864)
   )
  )
  (i32.store
   (local.get $5)
   (local.get $2)
  )
  (i32.store offset=4
   (local.get $5)
   (local.get $3)
  )
  (if
   (i32.lt_s
    (local.get $3)
    (local.get $2)
   )
   (call $___assert_fail
    (i32.const 14905)
    (i32.const 13001)
    (i32.const 1096)
    (i32.const 14864)
   )
  )
  (if
   (i32.ge_s
    (local.get $7)
    (i32.const 0)
   )
   (block
    (local.set $9
     (i32.sub
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
      (local.get $2)
     )
    )
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in
     (local.set $10
      (i32.load
       (local.get $8)
      )
     )
     (f32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $6)
      )
      (f32.mul
       (call_indirect (type $FUNCSIG$fff)
        (f32.sub
         (f32.add
          (f32.convert_i32_s
           (i32.add
            (local.get $0)
            (local.get $2)
           )
          )
          (f32.const 0.5)
         )
         (local.get $4)
        )
        (local.get $1)
        (i32.add
         (i32.and
          (local.get $10)
          (i32.const 7)
         )
         (i32.const 8)
        )
       )
       (local.get $1)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.get $9)
      )
     )
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $8)
   )
  )
  (if
   (f32.ne
    (call_indirect (type $FUNCSIG$fff)
     (f32.sub
      (f32.add
       (f32.convert_i32_s
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (f32.const 0.5)
      )
      (local.get $4)
     )
     (local.get $1)
     (i32.add
      (i32.and
       (local.get $0)
       (i32.const 7)
      )
      (i32.const 8)
     )
    )
    (f32.const 0)
   )
   (call $___assert_fail
    (i32.const 14940)
    (i32.const 13001)
    (i32.const 1105)
    (i32.const 14864)
   )
  )
  (if
   (i32.le_s
    (local.get $7)
    (i32.const -1)
   )
   (return)
  )
  (local.set $0
   (local.get $7)
  )
  (loop $while-in1
   (if
    (f32.eq
     (f32.load
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $6)
      )
     )
     (f32.const 0)
    )
    (block
     (i32.store offset=4
      (local.get $5)
      (i32.add
       (i32.load
        (local.get $5)
       )
       (i32.add
        (local.get $0)
        (i32.const -1)
       )
      )
     )
     (local.set $2
      (i32.add
       (local.get $0)
       (i32.const -1)
      )
     )
     (if
      (i32.gt_s
       (local.get $0)
       (i32.const 0)
      )
      (block
       (local.set $0
        (local.get $2)
       )
       (br $while-in1)
      )
     )
    )
   )
  )
 )
 (func $_stbir__normalize_downsample_coefficients (; 490 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local $12 i32)
  (local $13 i32)
  (local.set $9
   (call $_stbir__get_contributors
    (local.get $3)
    (local.get $2)
    (local.get $4)
    (local.get $5)
   )
  )
  (local.set $13
   (call $_stbir__get_coefficient_width
    (local.get $2)
    (local.get $3)
   )
  )
  (if
   (i32.gt_s
    (local.get $5)
    (i32.const 0)
   )
   (block $label$break$L1
    (local.set $8
     (i32.gt_s
      (local.get $9)
      (i32.const 0)
     )
    )
    (local.set $10
     (i32.gt_s
      (local.get $9)
      (i32.const 0)
     )
    )
    (local.set $4
     (i32.const 0)
    )
    (block $__rjto$1
     (block $__rjti$1
      (loop $while-in
       (block $__rjti$0
        (br_if $__rjti$0
         (i32.eqz
          (local.get $8)
         )
        )
        (local.set $6
         (i32.const 0)
        )
        (local.set $11
         (f32.const 0)
        )
        (loop $while-in1
         (if
          (i32.ge_s
           (local.get $4)
           (local.tee $7
            (i32.load
             (i32.add
              (i32.shl
               (local.get $6)
               (i32.const 3)
              )
              (local.get $0)
             )
            )
           )
          )
          (block
           (if
            (i32.le_s
             (local.get $4)
             (i32.load offset=4
              (i32.add
               (i32.shl
                (local.get $6)
                (i32.const 3)
               )
               (local.get $0)
              )
             )
            )
            (local.set $11
             (f32.add
              (local.get $11)
              (f32.load
               (call $_stbir__get_coefficient
                (local.get $1)
                (local.get $2)
                (local.get $3)
                (local.get $6)
                (i32.sub
                 (local.get $4)
                 (local.get $7)
                )
               )
              )
             )
            )
           )
           (br_if $while-in1
            (i32.lt_s
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const 1)
              )
             )
             (local.get $9)
            )
           )
          )
         )
        )
        (br_if $__rjti$0
         (i32.eqz
          (f32.gt
           (local.get $11)
           (f32.const 0.8999999761581421)
          )
         )
        )
        (br_if $__rjti$1
         (i32.eqz
          (f32.lt
           (local.get $11)
           (f32.const 1.100000023841858)
          )
         )
        )
        (local.set $11
         (f32.div
          (f32.const 1)
          (local.get $11)
         )
        )
        (if
         (local.get $10)
         (block $label$break$L15
          (local.set $6
           (i32.const 0)
          )
          (loop $while-in4
           (br_if $label$break$L15
            (i32.lt_s
             (local.get $4)
             (local.tee $7
              (i32.load
               (i32.add
                (i32.shl
                 (local.get $6)
                 (i32.const 3)
                )
                (local.get $0)
               )
              )
             )
            )
           )
           (if
            (i32.le_s
             (local.get $4)
             (i32.load offset=4
              (i32.add
               (i32.shl
                (local.get $6)
                (i32.const 3)
               )
               (local.get $0)
              )
             )
            )
            (f32.store
             (local.tee $7
              (call $_stbir__get_coefficient
               (local.get $1)
               (local.get $2)
               (local.get $3)
               (local.get $6)
               (i32.sub
                (local.get $4)
                (local.get $7)
               )
              )
             )
             (f32.mul
              (local.get $11)
              (f32.load
               (local.get $7)
              )
             )
            )
           )
           (br_if $while-in4
            (i32.lt_s
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const 1)
              )
             )
             (local.get $9)
            )
           )
          )
         )
        )
        (br_if $while-in
         (i32.lt_s
          (local.tee $4
           (i32.add
            (local.get $4)
            (i32.const 1)
           )
          )
          (local.get $5)
         )
        )
        (br $label$break$L1)
       )
      )
      (call $___assert_fail
       (i32.const 14692)
       (i32.const 13001)
       (i32.const 1140)
       (i32.const 14705)
      )
      (br $__rjto$1)
     )
     (call $___assert_fail
      (i32.const 14746)
      (i32.const 13001)
      (i32.const 1141)
      (i32.const 14705)
     )
    )
   )
  )
  (if
   (i32.le_s
    (local.get $9)
    (i32.const 0)
   )
   (return)
  )
  (local.set $4
   (i32.const 0)
  )
  (loop $while-in6
   (local.set $6
    (i32.const 0)
   )
   (loop $while-in8
    (local.set $10
     (f32.eq
      (f32.load
       (call $_stbir__get_coefficient
        (local.get $1)
        (local.get $2)
        (local.get $3)
        (local.get $4)
        (local.get $6)
       )
      )
      (f32.const 0)
     )
    )
    (local.set $8
     (i32.add
      (local.get $6)
      (i32.const 1)
     )
    )
    (if
     (local.get $10)
     (block
      (local.set $6
       (local.get $8)
      )
      (br $while-in8)
     )
    )
   )
   (local.set $8
    (i32.lt_s
     (local.tee $10
      (i32.add
       (local.tee $12
        (i32.load
         (local.tee $7
          (i32.add
           (i32.shl
            (local.get $4)
            (i32.const 3)
           )
           (local.get $0)
          )
         )
        )
       )
       (local.get $6)
      )
     )
     (i32.const 0)
    )
   )
   (local.set $12
    (select
     (i32.sub
      (i32.const 0)
      (local.get $12)
     )
     (local.get $6)
     (local.get $8)
    )
   )
   (i32.store
    (local.get $7)
    (select
     (i32.const 0)
     (local.get $10)
     (local.get $8)
    )
   )
   (local.set $8
    (call $_stbir__min
     (local.get $13)
     (i32.add
      (i32.load offset=4
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 3)
        )
        (local.get $0)
       )
      )
      (select
       (i32.const 1)
       (i32.sub
        (i32.const 1)
        (local.get $10)
       )
       (local.get $8)
      )
     )
    )
   )
   (local.set $10
    (call $_stbir__get_coefficient_width
     (local.get $2)
     (local.get $3)
    )
   )
   (if
    (i32.gt_s
     (local.get $8)
     (i32.const 0)
    )
    (block $label$break$L37
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in11
      (br_if $label$break$L37
       (i32.ge_s
        (local.tee $7
         (i32.add
          (local.get $6)
          (local.get $12)
         )
        )
        (local.get $10)
       )
      )
      (local.set $7
       (i32.load
        (call $_stbir__get_coefficient
         (local.get $1)
         (local.get $2)
         (local.get $3)
         (local.get $4)
         (local.get $7)
        )
       )
      )
      (i32.store
       (call $_stbir__get_coefficient
        (local.get $1)
        (local.get $2)
        (local.get $3)
        (local.get $4)
        (local.get $6)
       )
       (local.get $7)
      )
      (br_if $while-in11
       (i32.lt_s
        (local.tee $6
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
        (local.get $8)
       )
      )
     )
    )
   )
   (br_if $while-in6
    (i32.ne
     (local.tee $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.get $9)
    )
   )
  )
  (if
   (i32.le_s
    (local.get $9)
    (i32.const 0)
   )
   (return)
  )
  (local.set $2
   (i32.add
    (local.get $5)
    (i32.const -1)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (loop $while-in13
   (i32.store offset=4
    (local.tee $4
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 3)
      )
      (local.get $0)
     )
    )
    (call $_stbir__min
     (i32.load offset=4
      (local.get $4)
     )
     (local.get $2)
    )
   )
   (br_if $while-in13
    (i32.ne
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.get $9)
    )
   )
  )
 )
 (func $_stbir__min (; 491 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (select
   (local.get $0)
   (local.get $1)
   (i32.lt_s
    (local.get $0)
    (local.get $1)
   )
  )
 )
 (func $_ErrorCallback (; 492 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $0)
  )
  (i32.store offset=4
   (local.get $2)
   (local.get $1)
  )
  (call $_TraceLog
   (i32.const 4)
   (i32.const 16464)
   (local.get $2)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_WindowSizeCallback (; 493 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (call $_SetupViewport
   (local.get $1)
   (local.get $2)
  )
  (i32.store
   (i32.const 27948)
   (local.get $1)
  )
  (i32.store
   (i32.const 27952)
   (local.get $2)
  )
 )
 (func $_CursorEnterCallback (; 494 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (nop)
 )
 (func $_KeyCallback (; 495 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 576)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 576)
   )
  )
  (if
   (i32.and
    (local.tee $6
     (i32.eq
      (local.get $3)
      (i32.const 1)
     )
    )
    (i32.eq
     (local.get $1)
     (i32.const 256)
    )
   )
   (block
    (call $_glfwSetWindowShouldClose
     (local.get $0)
     (i32.const 1)
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.get $6)
     (i32.eq
      (local.get $1)
      (i32.const 301)
     )
    )
   )
   (block
    (i32.store8
     (i32.add
      (local.get $1)
      (i32.const 22640)
     )
     (local.get $3)
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (local.set $0
   (i32.add
    (local.get $2)
    (i32.const 568)
   )
  )
  (if
   (i32.ne
    (local.get $4)
    (i32.const 2)
   )
   (block
    (i32.store
     (local.get $0)
     (i32.load
      (i32.const 28092)
     )
    )
    (call $_TakeScreenshot
     (call $_TextFormat
      (i32.const 15904)
      (local.get $0)
     )
    )
    (i32.store
     (i32.const 28092)
     (i32.add
      (i32.load
       (i32.const 28092)
      )
      (i32.const 1)
     )
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (local.set $1
   (i32.add
    (local.get $2)
    (i32.const 560)
   )
  )
  (local.set $3
   (i32.add
    (local.get $2)
    (i32.const 552)
   )
  )
  (local.set $4
   (i32.add
    (local.get $2)
    (i32.const 544)
   )
  )
  (local.set $8
   (i32.add
    (local.get $2)
    (i32.const 536)
   )
  )
  (local.set $0
   (i32.add
    (local.get $2)
    (i32.const 528)
   )
  )
  (local.set $6
   (i32.add
    (local.get $2)
    (i32.const 520)
   )
  )
  (local.set $7
   (i32.add
    (local.get $2)
    (i32.const 512)
   )
  )
  (if
   (i32.load8_s
    (i32.const 28844)
   )
   (block
    (call $_GifEnd)
    (i32.store8
     (i32.const 28844)
     (i32.const 0)
    )
    (i32.store
     (local.get $7)
     (i32.add
      (i32.load
       (i32.const 28092)
      )
      (i32.const -1)
     )
    )
    (local.set $1
     (call $_TextFormat
      (i32.const 15771)
      (local.get $7)
     )
    )
    (i32.store
     (local.get $6)
     (i32.add
      (i32.load
       (i32.const 28092)
      )
      (i32.const -1)
     )
    )
    (local.set $2
     (call $_TextFormat
      (i32.const 15771)
      (local.get $6)
     )
    )
    (i32.store
     (local.get $0)
     (local.get $1)
    )
    (i32.store offset=4
     (local.get $0)
     (local.get $2)
    )
    (call $_emscripten_run_script
     (call $_TextFormat
      (i32.const 15789)
      (local.get $0)
     )
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 15824)
     (local.get $8)
    )
   )
   (block
    (i32.store8
     (i32.const 28844)
     (i32.const 1)
    )
    (i32.store
     (i32.const 28096)
     (i32.const 0)
    )
    (drop
     (call $_memset
      (local.get $2)
      (i32.const 0)
      (i32.const 512)
     )
    )
    (i32.store
     (local.get $4)
     (i32.load
      (i32.const 28092)
     )
    )
    (call $_strcpy
     (local.get $2)
     (call $_TextFormat
      (i32.const 15851)
      (local.get $4)
     )
    )
    (call $_GifBegin
     (local.get $2)
     (i32.load
      (i32.const 27948)
     )
     (i32.load
      (i32.const 27952)
     )
     (i32.trunc_f32_s
      (f32.mul
       (f32.demote_f64
        (f64.load
         (i32.const 27632)
        )
       )
       (f32.const 10)
      )
     )
    )
    (i32.store
     (i32.const 28092)
     (local.tee $0
      (i32.add
       (i32.load
        (i32.const 28092)
       )
       (i32.const 1)
      )
     )
    )
    (i32.store
     (local.get $3)
     (local.get $0)
    )
    (i32.store
     (local.get $1)
     (call $_TextFormat
      (i32.const 15771)
      (local.get $3)
     )
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 15871)
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_MouseButtonCallback (; 496 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 128)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 128)
   )
  )
  (local.set $4
   (i32.sub
    (local.get $0)
    (i32.const -64)
   )
  )
  (local.set $3
   (local.get $0)
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 28838)
   )
   (local.get $2)
  )
  (block $__rjto$0
   (block $__rjti$0
    (if
     (i32.and
      (i32.ne
       (local.tee $1
        (i32.load8_s
         (i32.const 28838)
        )
       )
       (i32.load8_s
        (i32.const 28841)
       )
      )
      (i32.eq
       (local.get $1)
       (i32.const 1)
      )
     )
     (block
      (local.set $1
       (i32.const 1)
      )
      (br $__rjti$0)
     )
     (if
      (i32.and
       (i32.ne
        (local.tee $1
         (i32.load8_s
          (i32.const 28838)
         )
        )
        (i32.load8_s
         (i32.const 28841)
        )
       )
       (i32.eqz
        (local.get $1)
       )
      )
      (block
       (local.set $1
        (i32.const 0)
       )
       (br $__rjti$0)
      )
     )
    )
    (br $__rjto$0)
   )
   (i32.store offset=8
    (local.get $0)
    (local.get $1)
   )
  )
  (i32.store offset=16
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 1)
  )
  (local.set $6
   (f32.add
    (f32.load
     (i32.const 27936)
    )
    (f32.const 0)
   )
  )
  (f32.store
   (local.get $3)
   (f32.add
    (f32.load
     (i32.const 27932)
    )
    (f32.const 0)
   )
  )
  (f32.store offset=4
   (local.get $3)
   (local.get $6)
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load
    (local.get $3)
   )
  )
  (f32.store offset=32
   (local.get $0)
   (f32.div
    (f32.load offset=32
     (local.get $0)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 27948)
     )
    )
   )
  )
  (f32.store offset=36
   (local.get $0)
   (f32.div
    (f32.load offset=36
     (local.get $0)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 27952)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store offset=16 align=4
   (local.get $4)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store offset=24 align=4
   (local.get $4)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store offset=32 align=4
   (local.get $4)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store offset=40 align=4
   (local.get $4)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (i64.store offset=48 align=4
   (local.get $4)
   (i64.load offset=56 align=4
    (local.get $0)
   )
  )
  (call $_ProcessGestureEvent
   (local.get $4)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_MouseCursorPosCallback (; 497 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 112)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 112)
   )
  )
  (i32.store
   (local.get $0)
   (i32.const 2)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 1)
  )
  (f32.store offset=24
   (local.get $0)
   (f32.demote_f64
    (local.get $1)
   )
  )
  (f32.store offset=28
   (local.get $0)
   (local.tee $5
    (f32.demote_f64
     (local.get $2)
    )
   )
  )
  (f32.store offset=24
   (local.get $0)
   (f32.div
    (f32.load offset=24
     (local.get $0)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 27948)
     )
    )
   )
  )
  (f32.store offset=28
   (local.get $0)
   (f32.div
    (local.get $5)
    (f32.convert_i32_s
     (i32.load
      (i32.const 27952)
     )
    )
   )
  )
  (i64.store align=4
   (local.tee $3
    (i32.add
     (local.get $0)
     (i32.const 56)
    )
   )
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (call $_ProcessGestureEvent
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_ScrollCallback (; 498 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 f64)
  (i32.store
   (i32.const 28088)
   (i32.trunc_f64_s
    (local.get $2)
   )
  )
 )
 (func $_WindowIconifyCallback (; 499 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $0)
   (i32.const 0)
  )
  (i32.store8
   (local.get $0)
   (i32.ne
    (local.get $1)
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_WindowDropCallback (; 500 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (call $_ClearDroppedFiles)
  (i32.store
   (i32.const 28080)
   (call $_malloc
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
   )
  )
  (if
   (i32.le_s
    (local.get $1)
    (i32.const 0)
   )
   (block
    (i32.store
     (i32.const 28084)
     (local.get $1)
    )
    (return)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (local.set $3
    (call $_malloc
     (i32.const 512)
    )
   )
   (i32.store
    (i32.add
     (i32.load
      (i32.const 28080)
     )
     (i32.shl
      (local.get $0)
      (i32.const 2)
     )
    )
    (local.get $3)
   )
   (call $_strcpy
    (local.get $3)
    (i32.load
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 2)
      )
      (local.get $2)
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (local.get $1)
    )
   )
  )
  (i32.store
   (i32.const 28084)
   (local.get $1)
  )
 )
 (func $_SetupViewport (; 501 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (i32.store
   (i32.const 28064)
   (local.get $0)
  )
  (i32.store
   (i32.const 28068)
   (local.get $1)
  )
  (call $_rlViewport
   (i32.div_s
    (local.tee $2
     (i32.load
      (i32.const 28072)
     )
    )
    (i32.const 2)
   )
   (i32.div_s
    (local.tee $3
     (i32.load
      (i32.const 28076)
     )
    )
    (i32.const 2)
   )
   (i32.sub
    (local.get $0)
    (local.get $2)
   )
   (i32.sub
    (local.get $1)
    (local.get $3)
   )
  )
  (call $_rlMatrixMode
   (i32.const 5889)
  )
  (call $_rlLoadIdentity)
  (call $_rlOrtho
   (f64.convert_i32_s
    (i32.load
     (i32.const 28064)
    )
   )
   (f64.convert_i32_s
    (i32.load
     (i32.const 28068)
    )
   )
  )
  (call $_rlMatrixMode
   (i32.const 5888)
  )
  (call $_rlLoadIdentity)
 )
 (func $_ClearBackground (; 502 ;) (; has Stack IR ;) (param $0 i32)
  (call $_rlClearColor
   (i32.load8_s
    (local.get $0)
   )
   (i32.load8_s offset=1
    (local.get $0)
   )
   (i32.load8_s offset=2
    (local.get $0)
   )
   (i32.load8_s offset=3
    (local.get $0)
   )
  )
  (call $_glClear
   (i32.const 16640)
  )
 )
 (func $_ClearDroppedFiles (; 503 ;) (; has Stack IR ;)
  (local $0 i32)
  (if
   (i32.le_s
    (i32.load
     (i32.const 28084)
    )
    (i32.const 0)
   )
   (return)
  )
  (if
   (i32.gt_s
    (i32.load
     (i32.const 28084)
    )
    (i32.const 0)
   )
   (loop $while-in
    (call $_free
     (i32.load
      (i32.add
       (i32.load
        (i32.const 28080)
       )
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
      )
     )
    )
    (br_if $while-in
     (i32.lt_s
      (local.tee $0
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (i32.load
       (i32.const 28084)
      )
     )
    )
   )
  )
  (call $_free
   (i32.load
    (i32.const 28080)
   )
  )
  (i32.store
   (i32.const 28084)
   (i32.const 0)
  )
 )
 (func $_TextFormat (; 504 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $1)
  )
  (drop
   (call $_vsnprintf
    (i32.const 23152)
    (i32.const 2147483647)
    (local.get $0)
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (i32.const 23152)
 )
 (func $_TakeScreenshot (; 505 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 576)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 576)
   )
  )
  (local.set $2
   (i32.add
    (local.get $1)
    (i32.const 544)
   )
  )
  (local.set $4
   (i32.add
    (local.get $1)
    (i32.const 520)
   )
  )
  (local.set $3
   (i32.add
    (local.get $1)
    (i32.const 512)
   )
  )
  (i32.store offset=524
   (local.get $1)
   (local.tee $6
    (call $_rlReadScreenPixels
     (i32.load
      (i32.const 28064)
     )
     (i32.load
      (i32.const 28068)
     )
    )
   )
  )
  (i32.store offset=528
   (local.get $1)
   (i32.load
    (i32.const 28064)
   )
  )
  (i32.store offset=532
   (local.get $1)
   (i32.load
    (i32.const 28068)
   )
  )
  (i32.store offset=536
   (local.get $1)
   (i32.const 1)
  )
  (i32.store offset=540
   (local.get $1)
   (i32.const 7)
  )
  (drop
   (call $_memset
    (local.get $1)
    (i32.const 0)
    (i32.const 512)
   )
  )
  (call $_strcpy
   (local.get $1)
   (local.get $0)
  )
  (i64.store align=4
   (local.get $2)
   (i64.load offset=524 align=4
    (local.get $1)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load offset=532 align=4
    (local.get $1)
   )
  )
  (i32.store offset=16
   (local.get $2)
   (i32.load offset=540
    (local.get $1)
   )
  )
  (call $_ExportImage
   (local.get $2)
   (local.get $1)
  )
  (call $_free
   (local.get $6)
  )
  (i32.store
   (local.get $3)
   (local.tee $0
    (call $_GetFileName
     (local.get $1)
    )
   )
  )
  (i32.store offset=4
   (local.get $3)
   (local.get $0)
  )
  (call $_emscripten_run_script
   (call $_TextFormat
    (i32.const 15789)
    (local.get $3)
   )
  )
  (i32.store
   (local.get $4)
   (local.get $1)
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 15923)
   (local.get $4)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_ExportImage (; 506 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (local.set $6
   (i32.add
    (local.get $2)
    (i32.const 8)
   )
  )
  (local.set $5
   (local.get $2)
  )
  (i64.store align=4
   (local.tee $2
    (i32.add
     (local.get $2)
     (i32.const 12)
    )
   )
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i32.store offset=16
   (local.get $2)
   (i32.load offset=16
    (local.get $0)
   )
  )
  (local.set $3
   (call $_GetImageData
    (local.get $2)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (if
     (call $_IsFileExtension
      (local.get $1)
      (i32.const 15947)
     )
     (block
      (local.set $0
       (call $_stbi_write_png
        (local.get $1)
        (local.tee $2
         (i32.load offset=4
          (local.get $0)
         )
        )
        (i32.load offset=8
         (local.get $0)
        )
        (local.get $3)
        (i32.shl
         (local.get $2)
         (i32.const 2)
        )
       )
      )
      (br $__rjti$0)
     )
     (block
      (if
       (call $_IsFileExtension
        (local.get $1)
        (i32.const 15952)
       )
       (block
        (i64.store align=4
         (local.get $2)
         (i64.load align=4
          (local.get $0)
         )
        )
        (i64.store offset=8 align=4
         (local.get $2)
         (i64.load offset=8 align=4
          (local.get $0)
         )
        )
        (i32.store offset=16
         (local.get $2)
         (i32.load offset=16
          (local.get $0)
         )
        )
        (local.set $0
         (call $_SaveKTX
          (local.get $2)
          (local.get $1)
         )
        )
        (br $__rjti$0)
       )
      )
      (if
       (call $_IsFileExtension
        (local.get $1)
        (i32.const 15957)
       )
       (block
        (local.set $2
         (call $_fopen
          (local.get $1)
         )
        )
        (local.set $0
         (call $_fwrite
          (i32.load
           (local.get $0)
          )
          (call $_GetPixelDataSize
           (i32.load offset=4
            (local.get $0)
           )
           (i32.load offset=8
            (local.get $0)
           )
           (i32.load offset=16
            (local.get $0)
           )
          )
          (i32.const 1)
          (local.get $2)
         )
        )
        (call $_fclose
         (local.get $2)
        )
        (br $__rjti$0)
       )
       (call $_free
        (local.get $3)
       )
      )
     )
    )
    (br $__rjto$0)
   )
   (call $_free
    (local.get $3)
   )
   (if
    (local.get $0)
    (block
     (i32.store
      (local.get $5)
      (local.get $1)
     )
     (call $_TraceLog
      (i32.const 3)
      (i32.const 15965)
      (local.get $5)
     )
     (global.set $STACKTOP
      (local.get $4)
     )
     (return)
    )
   )
  )
  (call $_TraceLog
   (i32.const 4)
   (i32.const 15997)
   (local.get $6)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_GetFileName (; 507 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (select
   (local.get $0)
   (i32.add
    (local.tee $1
     (if (result i32)
      (local.get $0)
      (call $_strprbrk
       (local.get $0)
      )
      (i32.const 0)
     )
    )
    (i32.const 1)
   )
   (i32.or
    (i32.eqz
     (local.get $1)
    )
    (i32.eq
     (local.get $0)
     (local.get $1)
    )
   )
  )
 )
 (func $_strprbrk (; 508 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (loop $while-in
   (local.set $0
    (i32.add
     (local.tee $1
      (select
       (local.tee $0
        (i32.add
         (call $_strcspn
          (local.get $0)
         )
         (local.get $0)
        )
       )
       (i32.const 0)
       (i32.load8_s
        (local.get $0)
       )
      )
     )
     (i32.const 1)
    )
   )
   (if
    (local.get $1)
    (block
     (local.set $2
      (local.get $1)
     )
     (br $while-in)
    )
   )
  )
  (local.get $2)
 )
 (func $_IsFileExtension (; 509 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (local.tee $0
    (call $___memrchr
     (local.get $0)
     (i32.add
      (call $_strlen
       (local.get $0)
      )
      (i32.const 1)
     )
    )
   )
   (i32.eqz
    (call $_strcmp
     (local.get $0)
     (local.get $1)
    )
   )
   (i32.const 0)
  )
 )
 (func $_stbi_write_png (; 510 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $0
   (if (result i32)
    (local.tee $1
     (call $_stbi_write_png_to_mem
      (local.get $3)
      (local.get $4)
      (local.get $1)
      (local.get $2)
      (local.get $5)
     )
    )
    (if (result i32)
     (local.tee $0
      (call $_fopen
       (local.get $0)
      )
     )
     (block (result i32)
      (drop
       (call $_fwrite
        (local.get $1)
        (i32.const 1)
        (i32.load
         (local.get $5)
        )
        (local.get $0)
       )
      )
      (call $_fclose
       (local.get $0)
      )
      (call $_free
       (local.get $1)
      )
      (i32.const 1)
     )
     (block (result i32)
      (call $_free
       (local.get $1)
      )
      (i32.const 0)
     )
    )
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $_SaveKTX (; 511 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 80)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 80)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
  )
  (local.set $4
   (local.get $3)
  )
  (local.set $2
   (i32.add
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $7
   (i32.add
    (local.get $3)
    (i32.const 12)
   )
  )
  (if
   (i32.eqz
    (local.tee $5
     (call $_fopen
      (local.get $1)
     )
    )
   )
   (block
    (i32.store
     (local.get $4)
     (local.get $1)
    )
    (call $_TraceLog
     (i32.const 4)
     (i32.const 16026)
     (local.get $4)
    )
    (global.set $STACKTOP
     (local.get $9)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (i64.store align=1
   (local.get $2)
   (i64.load align=1
    (i32.const 16067)
   )
  )
  (i32.store offset=8 align=1
   (local.get $2)
   (i32.load align=1
    (i32.const 16075)
   )
  )
  (i32.store offset=12
   (local.get $2)
   (i32.const 0)
  )
  (i32.store
   (local.tee $8
    (i32.add
     (local.get $2)
     (i32.const 16)
    )
   )
   (i32.const 0)
  )
  (i32.store offset=20
   (local.get $2)
   (i32.const 1)
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $2)
     (i32.const 24)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (local.tee $11
    (i32.add
     (local.get $2)
     (i32.const 28)
    )
   )
   (i32.const 0)
  )
  (i32.store offset=32
   (local.get $2)
   (i32.const 0)
  )
  (i32.store offset=36
   (local.get $2)
   (local.tee $1
    (i32.load offset=4
     (local.get $0)
    )
   )
  )
  (i32.store offset=40
   (local.get $2)
   (local.tee $4
    (i32.load offset=8
     (local.get $0)
    )
   )
  )
  (i32.store offset=44
   (local.get $2)
   (i32.const 0)
  )
  (i32.store offset=48
   (local.get $2)
   (i32.const 0)
  )
  (i32.store offset=52
   (local.get $2)
   (i32.const 1)
  )
  (i32.store offset=56
   (local.get $2)
   (local.tee $10
    (i32.load offset=12
     (local.get $0)
    )
   )
  )
  (i32.store offset=60
   (local.get $2)
   (i32.const 0)
  )
  (call $_rlGetGlTextureFormats
   (local.tee $12
    (i32.load offset=16
     (local.get $0)
    )
   )
   (local.get $11)
   (local.get $3)
   (local.get $8)
  )
  (i32.store offset=32
   (local.get $2)
   (local.tee $3
    (i32.load
     (local.get $3)
    )
   )
  )
  (local.set $0
   (if (result i32)
    (i32.eq
     (local.get $3)
     (i32.const -1)
    )
    (block (result i32)
     (call $_TraceLog
      (i32.const 4)
      (i32.const 16079)
      (local.get $6)
     )
     (i32.const 0)
    )
    (block (result i32)
     (local.set $3
      (call $_fwrite
       (local.get $2)
       (i32.const 64)
       (i32.const 1)
       (local.get $5)
      )
     )
     (if (result i32)
      (i32.gt_s
       (local.get $10)
       (i32.const 0)
      )
      (block (result i32)
       (local.set $6
        (i32.load
         (local.get $0)
        )
       )
       (local.set $3
        (i32.const 0)
       )
       (local.set $0
        (local.get $4)
       )
       (local.set $4
        (i32.const 0)
       )
       (loop $while-in (result i32)
        (i32.store
         (local.get $7)
         (call $_GetPixelDataSize
          (local.get $1)
          (local.get $0)
          (local.get $12)
         )
        )
        (drop
         (call $_fwrite
          (local.get $7)
          (i32.const 4)
          (i32.const 1)
          (local.get $5)
         )
        )
        (local.set $2
         (call $_fwrite
          (i32.add
           (local.get $3)
           (local.get $6)
          )
          (local.tee $8
           (i32.load
            (local.get $7)
           )
          )
          (i32.const 1)
          (local.get $5)
         )
        )
        (local.set $1
         (i32.div_s
          (local.get $1)
          (i32.const 2)
         )
        )
        (local.set $0
         (i32.div_s
          (local.get $0)
          (i32.const 2)
         )
        )
        (local.set $3
         (i32.add
          (local.get $3)
          (local.get $8)
         )
        )
        (br_if $while-in
         (i32.ne
          (local.tee $4
           (i32.add
            (local.get $4)
            (i32.const 1)
           )
          )
          (local.get $10)
         )
        )
        (local.get $2)
       )
      )
      (local.get $3)
     )
    )
   )
  )
  (call $_fclose
   (local.get $5)
  )
  (global.set $STACKTOP
   (local.get $9)
  )
  (local.get $0)
 )
 (func $_stbi_write_png_to_mem (; 512 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $16
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $12
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $6
   (i32.add
    (local.get $12)
    (i32.const 4)
   )
  )
  (local.set $11
   (select
    (local.get $1)
    (local.tee $9
     (i32.shl
      (local.get $2)
      (i32.const 2)
     )
    )
    (local.get $1)
   )
  )
  (block $folding-inner0
   (br_if $folding-inner0
    (i32.eqz
     (local.tee $15
      (call $_malloc
       (local.tee $18
        (i32.mul
         (local.get $3)
         (local.tee $17
          (i32.add
           (local.get $9)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
   )
   (if
    (i32.eqz
     (local.tee $7
      (call $_malloc
       (local.get $9)
      )
     )
    )
    (block
     (call $_free
      (local.get $15)
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.gt_s
     (local.get $3)
     (i32.const 0)
    )
    (block
     (local.set $13
      (i32.gt_s
       (local.get $9)
       (i32.const 0)
      )
     )
     (loop $while-in
      (call $_stbiw__encode_png_line
       (local.get $0)
       (local.get $11)
       (local.get $2)
       (local.get $10)
       (i32.const 0)
       (local.get $7)
      )
      (if
       (local.get $13)
       (block
        (local.set $1
         (i32.const 0)
        )
        (local.set $5
         (i32.const 0)
        )
        (loop $while-in1
         (local.set $1
          (i32.add
           (local.get $1)
           (select
            (local.tee $1
             (i32.load8_s
              (i32.add
               (local.get $5)
               (local.get $7)
              )
             )
            )
            (i32.sub
             (i32.const 0)
             (local.get $1)
            )
            (i32.gt_s
             (local.get $1)
             (i32.const -1)
            )
           )
          )
         )
         (br_if $while-in1
          (i32.ne
           (local.get $9)
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
          )
         )
        )
        (call $_stbiw__encode_png_line
         (local.get $0)
         (local.get $11)
         (local.get $2)
         (local.get $10)
         (i32.const 1)
         (local.get $7)
        )
        (if
         (local.get $13)
         (block
          (local.set $5
           (i32.const 0)
          )
          (local.set $8
           (i32.const 0)
          )
          (loop $while-in3
           (local.set $5
            (i32.add
             (local.get $5)
             (select
              (local.tee $5
               (i32.load8_s
                (i32.add
                 (local.get $7)
                 (local.get $8)
                )
               )
              )
              (i32.sub
               (i32.const 0)
               (local.get $5)
              )
              (i32.gt_s
               (local.get $5)
               (i32.const -1)
              )
             )
            )
           )
           (br_if $while-in3
            (i32.ne
             (local.get $9)
             (local.tee $8
              (i32.add
               (local.get $8)
               (i32.const 1)
              )
             )
            )
           )
          )
         )
         (local.set $5
          (i32.const 0)
         )
        )
       )
       (block
        (call $_stbiw__encode_png_line
         (local.get $0)
         (local.get $11)
         (local.get $2)
         (local.get $10)
         (i32.const 1)
         (local.get $7)
        )
        (local.set $5
         (i32.const 0)
        )
        (local.set $1
         (i32.const 0)
        )
       )
      )
      (local.set $14
       (local.tee $8
        (i32.lt_s
         (local.get $5)
         (local.get $1)
        )
       )
      )
      (local.set $8
       (select
        (local.get $5)
        (local.get $1)
        (local.get $8)
       )
      )
      (call $_stbiw__encode_png_line
       (local.get $0)
       (local.get $11)
       (local.get $2)
       (local.get $10)
       (i32.const 2)
       (local.get $7)
      )
      (if
       (local.get $13)
       (block
        (local.set $1
         (i32.const 0)
        )
        (local.set $5
         (i32.const 0)
        )
        (loop $while-in5
         (local.set $1
          (i32.add
           (local.get $1)
           (select
            (local.tee $1
             (i32.load8_s
              (i32.add
               (local.get $5)
               (local.get $7)
              )
             )
            )
            (i32.sub
             (i32.const 0)
             (local.get $1)
            )
            (i32.gt_s
             (local.get $1)
             (i32.const -1)
            )
           )
          )
         )
         (br_if $while-in5
          (i32.ne
           (local.get $9)
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
       (local.set $1
        (i32.const 0)
       )
      )
      (local.set $14
       (select
        (i32.const 2)
        (local.get $14)
        (local.tee $5
         (i32.lt_s
          (local.get $1)
          (local.get $8)
         )
        )
       )
      )
      (local.set $8
       (select
        (local.get $1)
        (local.get $8)
        (local.get $5)
       )
      )
      (call $_stbiw__encode_png_line
       (local.get $0)
       (local.get $11)
       (local.get $2)
       (local.get $10)
       (i32.const 3)
       (local.get $7)
      )
      (if
       (local.get $13)
       (block
        (local.set $1
         (i32.const 0)
        )
        (local.set $5
         (i32.const 0)
        )
        (loop $while-in7
         (local.set $1
          (i32.add
           (local.get $1)
           (select
            (local.tee $1
             (i32.load8_s
              (i32.add
               (local.get $5)
               (local.get $7)
              )
             )
            )
            (i32.sub
             (i32.const 0)
             (local.get $1)
            )
            (i32.gt_s
             (local.get $1)
             (i32.const -1)
            )
           )
          )
         )
         (br_if $while-in7
          (i32.ne
           (local.get $9)
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
       (local.set $1
        (i32.const 0)
       )
      )
      (local.set $14
       (select
        (i32.const 3)
        (local.get $14)
        (local.tee $5
         (i32.lt_s
          (local.get $1)
          (local.get $8)
         )
        )
       )
      )
      (local.set $8
       (select
        (local.get $1)
        (local.get $8)
        (local.get $5)
       )
      )
      (call $_stbiw__encode_png_line
       (local.get $0)
       (local.get $11)
       (local.get $2)
       (local.get $10)
       (i32.const 4)
       (local.get $7)
      )
      (if
       (local.get $13)
       (block
        (local.set $1
         (i32.const 0)
        )
        (local.set $5
         (i32.const 0)
        )
        (loop $while-in9
         (local.set $1
          (i32.add
           (local.get $1)
           (select
            (local.tee $1
             (i32.load8_s
              (i32.add
               (local.get $5)
               (local.get $7)
              )
             )
            )
            (i32.sub
             (i32.const 0)
             (local.get $1)
            )
            (i32.gt_s
             (local.get $1)
             (i32.const -1)
            )
           )
          )
         )
         (br_if $while-in9
          (i32.ne
           (local.get $9)
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
       (local.set $1
        (i32.const 0)
       )
      )
      (call $_stbiw__encode_png_line
       (local.get $0)
       (local.get $11)
       (local.get $2)
       (local.get $10)
       (local.tee $1
        (select
         (i32.const 4)
         (local.get $14)
         (i32.lt_s
          (local.get $1)
          (local.get $8)
         )
        )
       )
       (local.get $7)
      )
      (i32.store8
       (local.tee $5
        (i32.add
         (local.get $15)
         (i32.mul
          (local.get $10)
          (local.get $17)
         )
        )
       )
       (local.get $1)
      )
      (drop
       (call $_memcpy
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
        (local.get $7)
        (local.get $9)
       )
      )
      (br_if $while-in
       (i32.ne
        (local.tee $10
         (i32.add
          (local.get $10)
          (i32.const 1)
         )
        )
        (local.get $3)
       )
      )
     )
    )
   )
   (call $_free
    (local.get $7)
   )
   (local.set $5
    (call $_stbi_zlib_compress
     (local.get $15)
     (local.get $18)
     (local.get $12)
    )
   )
   (call $_free
    (local.get $15)
   )
   (br_if $folding-inner0
    (i32.eqz
     (local.get $5)
    )
   )
   (br_if $folding-inner0
    (i32.eqz
     (local.tee $0
      (call $_malloc
       (local.tee $12
        (i32.add
         (local.tee $1
          (i32.load
           (local.get $12)
          )
         )
         (i32.const 57)
        )
       )
      )
     )
    )
   )
   (i32.store
    (local.get $4)
    (local.get $12)
   )
   (i64.store align=1
    (local.get $0)
    (i64.const 727905341920923785)
   )
   (i32.store8 offset=8
    (local.get $0)
    (i32.const 0)
   )
   (i32.store8 offset=9
    (local.get $0)
    (i32.const 0)
   )
   (i32.store8 offset=10
    (local.get $0)
    (i32.const 0)
   )
   (i32.store8 offset=11
    (local.get $0)
    (i32.const 13)
   )
   (i32.store8 offset=12
    (local.get $0)
    (i32.const 73)
   )
   (i32.store8 offset=13
    (local.get $0)
    (i32.const 72)
   )
   (i32.store8 offset=14
    (local.get $0)
    (i32.const 68)
   )
   (i32.store8 offset=15
    (local.get $0)
    (i32.const 82)
   )
   (i32.store
    (local.get $6)
    (i32.add
     (local.get $0)
     (i32.const 16)
    )
   )
   (i32.store8 offset=16
    (local.get $0)
    (i32.shr_u
     (local.get $2)
     (i32.const 24)
    )
   )
   (i32.store8 offset=17
    (local.get $0)
    (i32.shr_u
     (local.get $2)
     (i32.const 16)
    )
   )
   (i32.store8 offset=18
    (local.get $0)
    (i32.shr_u
     (local.get $2)
     (i32.const 8)
    )
   )
   (i32.store8 offset=3
    (i32.load
     (local.get $6)
    )
    (local.get $2)
   )
   (i32.store
    (local.get $6)
    (i32.add
     (local.tee $2
      (i32.load
       (local.get $6)
      )
     )
     (i32.const 4)
    )
   )
   (i32.store8 offset=4
    (local.get $2)
    (i32.shr_u
     (local.get $3)
     (i32.const 24)
    )
   )
   (i32.store8 offset=5
    (local.get $2)
    (i32.shr_u
     (local.get $3)
     (i32.const 16)
    )
   )
   (i32.store8 offset=6
    (local.get $2)
    (i32.shr_u
     (local.get $3)
     (i32.const 8)
    )
   )
   (i32.store8 offset=3
    (i32.load
     (local.get $6)
    )
    (local.get $3)
   )
   (i32.store8 offset=4
    (local.tee $2
     (i32.load
      (local.get $6)
     )
    )
    (i32.const 8)
   )
   (i32.store8 offset=5
    (local.get $2)
    (i32.load
     (i32.const 6448)
    )
   )
   (i32.store8 offset=6
    (local.get $2)
    (i32.const 0)
   )
   (i32.store8 offset=7
    (local.get $2)
    (i32.const 0)
   )
   (i32.store
    (local.get $6)
    (i32.add
     (local.get $2)
     (i32.const 9)
    )
   )
   (i32.store8 offset=8
    (local.get $2)
    (i32.const 0)
   )
   (call $_stbiw__wpcrc
    (local.get $6)
    (i32.const 13)
   )
   (i32.store8
    (i32.load
     (local.get $6)
    )
    (i32.shr_u
     (local.get $1)
     (i32.const 24)
    )
   )
   (i32.store8 offset=1
    (i32.load
     (local.get $6)
    )
    (i32.shr_u
     (local.get $1)
     (i32.const 16)
    )
   )
   (i32.store8 offset=2
    (i32.load
     (local.get $6)
    )
    (i32.shr_u
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.store8 offset=3
    (i32.load
     (local.get $6)
    )
    (local.get $1)
   )
   (i32.store8 offset=4
    (local.tee $2
     (i32.load
      (local.get $6)
     )
    )
    (i32.const 73)
   )
   (i32.store8 offset=5
    (local.get $2)
    (i32.const 68)
   )
   (i32.store8 offset=6
    (local.get $2)
    (i32.const 65)
   )
   (i32.store8 offset=7
    (local.get $2)
    (i32.const 84)
   )
   (drop
    (call $_memmove
     (local.tee $2
      (i32.add
       (local.get $2)
       (i32.const 8)
      )
     )
     (local.get $5)
     (local.get $1)
    )
   )
   (i32.store
    (local.get $6)
    (i32.add
     (local.get $1)
     (local.get $2)
    )
   )
   (call $_free
    (local.get $5)
   )
   (call $_stbiw__wpcrc
    (local.get $6)
    (local.get $1)
   )
   (i32.store8
    (i32.load
     (local.get $6)
    )
    (i32.const 0)
   )
   (i32.store8 offset=1
    (i32.load
     (local.get $6)
    )
    (i32.const 0)
   )
   (i32.store8 offset=2
    (i32.load
     (local.get $6)
    )
    (i32.const 0)
   )
   (i32.store8 offset=3
    (i32.load
     (local.get $6)
    )
    (i32.const 0)
   )
   (i32.store8 offset=4
    (local.tee $1
     (i32.load
      (local.get $6)
     )
    )
    (i32.const 73)
   )
   (i32.store8 offset=5
    (local.get $1)
    (i32.const 69)
   )
   (i32.store8 offset=6
    (local.get $1)
    (i32.const 78)
   )
   (i32.store8 offset=7
    (local.get $1)
    (i32.const 68)
   )
   (i32.store
    (local.get $6)
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (call $_stbiw__wpcrc
    (local.get $6)
    (i32.const 0)
   )
   (if
    (i32.eq
     (i32.load
      (local.get $6)
     )
     (i32.add
      (i32.load
       (local.get $4)
      )
      (local.get $0)
     )
    )
    (block
     (global.set $STACKTOP
      (local.get $16)
     )
     (return
      (local.get $0)
     )
    )
    (call $___assert_fail
     (i32.const 16122)
     (i32.const 16142)
     (i32.const 1155)
     (i32.const 16171)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $16)
  )
  (i32.const 0)
 )
 (func $_stbiw__encode_png_line (; 513 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $7
   (i32.const 4)
  )
  (local.set $6
   (i32.add
    (local.get $0)
    (i32.mul
     (local.get $1)
     (local.get $3)
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $3
     (i32.load
      (i32.add
       (i32.shl
        (local.get $4)
        (i32.const 2)
       )
       (select
        (i32.const 7712)
        (i32.const 7680)
        (local.get $3)
       )
      )
     )
    )
   )
   (block
    (drop
     (call $_memcpy
      (local.get $5)
      (local.get $6)
      (i32.shl
       (local.get $2)
       (i32.const 2)
      )
     )
    )
    (return)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (block $__rjto$0
    (i32.store8
     (i32.add
      (local.get $0)
      (local.get $5)
     )
     (block $__rjti$0 (result i32)
      (block $switch-case4
       (block $switch-case3
        (block $switch-case2
         (block $switch-case1
          (block $switch-case0
           (block $switch-case
            (br_table $switch-case $switch-case0 $switch-case1 $switch-case2 $switch-case3 $switch-case4 $__rjto$0
             (i32.sub
              (local.get $3)
              (i32.const 1)
             )
            )
           )
           (br $__rjti$0
            (i32.load8_s
             (i32.add
              (local.get $0)
              (local.get $6)
             )
            )
           )
          )
          (br $__rjti$0
           (i32.and
            (i32.sub
             (i32.load8_u
              (i32.add
               (local.get $0)
               (local.get $6)
              )
             )
             (i32.load8_u
              (i32.add
               (local.get $6)
               (i32.sub
                (local.get $0)
                (local.get $1)
               )
              )
             )
            )
            (i32.const 255)
           )
          )
         )
         (br $__rjti$0
          (i32.and
           (i32.sub
            (i32.load8_u
             (i32.add
              (local.get $0)
              (local.get $6)
             )
            )
            (i32.shr_u
             (i32.load8_u
              (i32.add
               (local.get $6)
               (i32.sub
                (local.get $0)
                (local.get $1)
               )
              )
             )
             (i32.const 1)
            )
           )
           (i32.const 255)
          )
         )
        )
        (br $__rjti$0
         (i32.and
          (i32.sub
           (i32.load8_u
            (i32.add
             (local.get $0)
             (local.get $6)
            )
           )
           (i32.and
            (call $_stbiw__paeth
             (i32.const 0)
             (i32.load8_u
              (i32.add
               (local.get $6)
               (i32.sub
                (local.get $0)
                (local.get $1)
               )
              )
             )
             (i32.const 0)
            )
            (i32.const 255)
           )
          )
          (i32.const 255)
         )
        )
       )
       (br $__rjti$0
        (i32.load8_s
         (i32.add
          (local.get $0)
          (local.get $6)
         )
        )
       )
      )
      (i32.load8_s
       (i32.add
        (local.get $0)
        (local.get $6)
       )
      )
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 4)
    )
   )
  )
  (block $switch5
   (block $switch-case23
    (block $switch-case20
     (block $switch-case17
      (block $switch-case14
       (block $switch-case11
        (block $switch-case8
         (br_table $switch-case8 $switch-case11 $switch-case14 $switch-case17 $switch-case20 $switch-case23 $switch5
          (i32.sub
           (local.get $3)
           (i32.const 1)
          )
         )
        )
        (if
         (i32.le_s
          (local.tee $1
           (i32.shl
            (local.get $2)
            (i32.const 2)
           )
          )
          (i32.const 4)
         )
         (return)
        )
        (local.set $0
         (i32.const 4)
        )
        (loop $while-in7
         (i32.store8
          (i32.add
           (local.get $0)
           (local.get $5)
          )
          (i32.sub
           (i32.load8_u
            (i32.add
             (local.get $0)
             (local.get $6)
            )
           )
           (i32.load8_u
            (i32.add
             (local.get $6)
             (i32.sub
              (local.get $0)
              (i32.const 4)
             )
            )
           )
          )
         )
         (br_if $while-in7
          (i32.ne
           (local.get $1)
           (local.tee $0
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
          )
         )
        )
        (return)
       )
       (if
        (i32.le_s
         (local.tee $0
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
         )
         (i32.const 4)
        )
        (return)
       )
       (loop $while-in10
        (i32.store8
         (i32.add
          (local.get $5)
          (local.get $7)
         )
         (i32.sub
          (i32.load8_u
           (i32.add
            (local.get $6)
            (local.get $7)
           )
          )
          (i32.load8_u
           (i32.add
            (local.get $6)
            (i32.sub
             (local.get $7)
             (local.get $1)
            )
           )
          )
         )
        )
        (br_if $while-in10
         (i32.ne
          (local.get $0)
          (local.tee $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
         )
        )
       )
       (return)
      )
      (if
       (i32.le_s
        (local.tee $2
         (i32.shl
          (local.get $2)
          (i32.const 2)
         )
        )
        (i32.const 4)
       )
       (return)
      )
      (local.set $0
       (i32.const 4)
      )
      (loop $while-in13
       (i32.store8
        (i32.add
         (local.get $0)
         (local.get $5)
        )
        (i32.sub
         (i32.load8_u
          (i32.add
           (local.get $0)
           (local.get $6)
          )
         )
         (i32.shr_u
          (i32.add
           (i32.load8_u
            (i32.add
             (local.get $6)
             (i32.sub
              (local.get $0)
              (i32.const 4)
             )
            )
           )
           (i32.load8_u
            (i32.add
             (local.get $6)
             (i32.sub
              (local.get $0)
              (local.get $1)
             )
            )
           )
          )
          (i32.const 1)
         )
        )
       )
       (br_if $while-in13
        (i32.ne
         (local.get $2)
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
        )
       )
      )
      (return)
     )
     (if
      (i32.le_s
       (local.tee $2
        (i32.shl
         (local.get $2)
         (i32.const 2)
        )
       )
       (i32.const 4)
      )
      (return)
     )
     (local.set $0
      (i32.const 4)
     )
     (loop $while-in16
      (i32.store8
       (i32.add
        (local.get $0)
        (local.get $5)
       )
       (i32.sub
        (i32.load8_u
         (i32.add
          (local.get $0)
          (local.get $6)
         )
        )
        (i32.and
         (call $_stbiw__paeth
          (i32.load8_u
           (i32.add
            (local.get $6)
            (i32.sub
             (local.get $0)
             (i32.const 4)
            )
           )
          )
          (i32.load8_u
           (i32.add
            (local.get $6)
            (local.tee $3
             (i32.sub
              (local.get $0)
              (local.get $1)
             )
            )
           )
          )
          (i32.load8_u
           (i32.add
            (local.get $6)
            (i32.sub
             (local.get $3)
             (i32.const 4)
            )
           )
          )
         )
         (i32.const 255)
        )
       )
      )
      (br_if $while-in16
       (i32.ne
        (local.get $2)
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
       )
      )
     )
     (return)
    )
    (if
     (i32.le_s
      (local.tee $1
       (i32.shl
        (local.get $2)
        (i32.const 2)
       )
      )
      (i32.const 4)
     )
     (return)
    )
    (local.set $0
     (i32.const 4)
    )
    (loop $while-in19
     (i32.store8
      (i32.add
       (local.get $0)
       (local.get $5)
      )
      (i32.sub
       (i32.load8_u
        (i32.add
         (local.get $0)
         (local.get $6)
        )
       )
       (i32.shr_u
        (i32.load8_u
         (i32.add
          (local.get $6)
          (i32.sub
           (local.get $0)
           (i32.const 4)
          )
         )
        )
        (i32.const 1)
       )
      )
     )
     (br_if $while-in19
      (i32.ne
       (local.get $1)
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
      )
     )
    )
    (return)
   )
   (if
    (i32.le_s
     (local.tee $1
      (i32.shl
       (local.get $2)
       (i32.const 2)
      )
     )
     (i32.const 4)
    )
    (return)
   )
   (local.set $0
    (i32.const 4)
   )
   (loop $while-in22
    (i32.store8
     (i32.add
      (local.get $0)
      (local.get $5)
     )
     (i32.sub
      (i32.load8_u
       (i32.add
        (local.get $0)
        (local.get $6)
       )
      )
      (i32.and
       (call $_stbiw__paeth
        (i32.load8_u
         (i32.add
          (local.get $6)
          (i32.sub
           (local.get $0)
           (i32.const 4)
          )
         )
        )
        (i32.const 0)
        (i32.const 0)
       )
       (i32.const 255)
      )
     )
    )
    (br_if $while-in22
     (i32.ne
      (local.get $1)
      (local.tee $0
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
     )
    )
   )
  )
 )
 (func $_stbi_zlib_compress (; 514 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local.set $20
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $6
    (i32.add
     (local.get $5)
     (i32.const 8)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $5)
     (i32.const 4)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (local.get $5)
   (i32.const 0)
  )
  (if
   (i32.eqz
    (local.tee $13
     (call $_malloc
      (i32.const 65536)
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $20)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (call $_stbiw__sbgrowf
   (local.get $5)
   (i32.const 1)
  )
  (local.set $3
   (i32.load
    (local.tee $14
     (i32.add
      (local.tee $4
       (i32.load
        (local.get $5)
       )
      )
      (i32.const -4)
     )
    )
   )
  )
  (i32.store
   (local.get $14)
   (i32.add
    (local.get $3)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $3)
    (local.get $4)
   )
   (i32.const 120)
  )
  (block $__rjto$2
   (block $__rjti$2
    (br_if $__rjti$2
     (i32.eqz
      (local.tee $3
       (i32.load
        (local.get $5)
       )
      )
     )
    )
    (br_if $__rjti$2
     (i32.ge_s
      (i32.add
       (i32.load
        (i32.add
         (local.get $3)
         (i32.const -4)
        )
       )
       (i32.const 1)
      )
      (i32.load
       (i32.add
        (local.get $3)
        (i32.const -8)
       )
      )
     )
    )
    (br $__rjto$2)
   )
   (call $_stbiw__sbgrowf
    (local.get $5)
    (i32.const 1)
   )
  )
  (local.set $3
   (i32.load
    (local.tee $14
     (i32.add
      (local.tee $4
       (i32.load
        (local.get $5)
       )
      )
      (i32.const -4)
     )
    )
   )
  )
  (i32.store
   (local.get $14)
   (i32.add
    (local.get $3)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $3)
    (local.get $4)
   )
   (i32.const 94)
  )
  (i32.store
   (local.get $6)
   (i32.or
    (i32.load
     (local.get $6)
    )
    (i32.shl
     (i32.const 1)
     (local.tee $3
      (i32.load
       (local.get $7)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $7)
   (i32.add
    (local.get $3)
    (i32.const 1)
   )
  )
  (i32.store
   (local.get $5)
   (local.tee $3
    (call $_stbiw__zlib_flushf
     (i32.load
      (local.get $5)
     )
     (local.get $6)
     (local.get $7)
    )
   )
  )
  (i32.store
   (local.get $6)
   (i32.or
    (i32.load
     (local.get $6)
    )
    (i32.shl
     (i32.const 1)
     (local.tee $4
      (i32.load
       (local.get $7)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $7)
   (i32.add
    (local.get $4)
    (i32.const 2)
   )
  )
  (i32.store
   (local.get $5)
   (call $_stbiw__zlib_flushf
    (local.get $3)
    (local.get $6)
    (local.get $7)
   )
  )
  (drop
   (call $_memset
    (local.get $13)
    (i32.const 0)
    (i32.const 65536)
   )
  )
  (local.set $21
   (i32.add
    (local.get $1)
    (i32.const -3)
   )
  )
  (if
   (i32.gt_s
    (local.get $1)
    (i32.const 3)
   )
   (block $label$break$L9
    (local.set $14
     (local.get $0)
    )
    (local.set $22
     (i32.add
      (local.get $1)
      (i32.const -1)
     )
    )
    (local.set $23
     (local.get $0)
    )
    (loop $label$continue$L11
     (block $label$break$L11
      (block $__rjto$0
       (block $__rjti$0
        (if
         (local.tee $9
          (i32.load
           (local.tee $12
            (i32.add
             (i32.shl
              (i32.and
               (call $_stbiw__zhash
                (local.tee $15
                 (i32.add
                  (local.get $0)
                  (local.get $10)
                 )
                )
               )
               (i32.const 16383)
              )
              (i32.const 2)
             )
             (local.get $13)
            )
           )
          )
         )
         (block
          (if
           (i32.gt_s
            (local.tee $18
             (i32.load
              (i32.add
               (local.get $9)
               (i32.const -4)
              )
             )
            )
            (i32.const 0)
           )
           (block
            (local.set $19
             (i32.add
              (local.get $10)
              (i32.const -32768)
             )
            )
            (local.set $24
             (i32.sub
              (local.get $1)
              (local.get $10)
             )
            )
            (local.set $8
             (i32.const 3)
            )
            (local.set $4
             (i32.const 0)
            )
            (local.set $3
             (i32.const 0)
            )
            (loop $while-in
             (if
              (i32.gt_s
               (i32.sub
                (local.tee $16
                 (i32.load
                  (i32.add
                   (i32.shl
                    (local.get $3)
                    (i32.const 2)
                   )
                   (local.get $9)
                  )
                 )
                )
                (local.get $14)
               )
               (local.get $19)
              )
              (block
               (local.set $17
                (i32.lt_s
                 (local.tee $25
                  (call $_stbiw__zlib_countm
                   (local.get $16)
                   (local.get $15)
                   (local.get $24)
                  )
                 )
                 (local.get $8)
                )
               )
               (local.set $8
                (select
                 (local.get $8)
                 (local.get $25)
                 (local.get $17)
                )
               )
               (local.set $4
                (select
                 (local.get $4)
                 (local.get $16)
                 (local.get $17)
                )
               )
              )
             )
             (br_if $while-in
              (i32.ne
               (local.tee $3
                (i32.add
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (local.get $18)
              )
             )
            )
           )
           (block
            (local.set $8
             (i32.const 3)
            )
            (local.set $4
             (i32.const 0)
            )
           )
          )
          (if
           (i32.eq
            (i32.load
             (i32.add
              (local.get $9)
              (i32.const -4)
             )
            )
            (i32.const 16)
           )
           (block
            (drop
             (call $_memmove
              (local.get $9)
              (i32.add
               (local.get $9)
               (i32.const 32)
              )
              (i32.const 32)
             )
            )
            (i32.store
             (i32.add
              (i32.load
               (local.get $12)
              )
              (i32.const -4)
             )
             (i32.const 8)
            )
           )
          )
          (br_if $__rjti$0
           (i32.ge_s
            (i32.add
             (i32.load
              (i32.add
               (local.get $9)
               (i32.const -4)
              )
             )
             (i32.const 1)
            )
            (i32.load
             (i32.add
              (local.get $9)
              (i32.const -8)
             )
            )
           )
          )
         )
         (block
          (local.set $8
           (i32.const 3)
          )
          (local.set $4
           (i32.const 0)
          )
          (br $__rjti$0)
         )
        )
        (br $__rjto$0)
       )
       (call $_stbiw__sbgrowf
        (local.get $12)
        (i32.const 4)
       )
      )
      (local.set $3
       (i32.load
        (local.tee $12
         (i32.add
          (local.tee $9
           (i32.load
            (local.get $12)
           )
          )
          (i32.const -4)
         )
        )
       )
      )
      (i32.store
       (local.get $12)
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (i32.store
       (i32.add
        (i32.shl
         (local.get $3)
         (i32.const 2)
        )
        (local.get $9)
       )
       (local.get $15)
      )
      (block $__rjto$1
       (block $__rjti$1
        (br_if $__rjti$1
         (i32.eqz
          (local.get $4)
         )
        )
        (if
         (local.tee $9
          (i32.load
           (i32.add
            (i32.shl
             (i32.and
              (call $_stbiw__zhash
               (local.tee $12
                (i32.add
                 (local.get $15)
                 (i32.const 1)
                )
               )
              )
              (i32.const 16383)
             )
             (i32.const 2)
            )
            (local.get $13)
           )
          )
         )
         (block
          (local.set $16
           (i32.sub
            (local.get $22)
            (local.get $10)
           )
          )
          (if
           (i32.gt_s
            (local.tee $17
             (i32.load
              (i32.add
               (local.get $9)
               (i32.const -4)
              )
             )
            )
            (i32.const 0)
           )
           (block
            (local.set $18
             (i32.add
              (local.get $10)
              (i32.const -32767)
             )
            )
            (local.set $3
             (i32.const 0)
            )
            (loop $while-in2
             (block $while-out1
              (if
               (i32.gt_s
                (i32.sub
                 (local.tee $19
                  (i32.load
                   (i32.add
                    (i32.shl
                     (local.get $3)
                     (i32.const 2)
                    )
                    (local.get $9)
                   )
                  )
                 )
                 (local.get $23)
                )
                (local.get $18)
               )
               (if
                (i32.gt_s
                 (call $_stbiw__zlib_countm
                  (local.get $19)
                  (local.get $12)
                  (local.get $16)
                 )
                 (local.get $8)
                )
                (block
                 (local.set $4
                  (i32.const 0)
                 )
                 (br $while-out1)
                )
               )
              )
              (br_if $while-in2
               (i32.lt_s
                (local.tee $3
                 (i32.add
                  (local.get $3)
                  (i32.const 1)
                 )
                )
                (local.get $17)
               )
              )
             )
            )
            (br_if $__rjti$1
             (i32.eqz
              (local.get $4)
             )
            )
           )
          )
         )
        )
        (br_if $label$break$L11
         (i32.eqz
          (i32.and
           (i32.lt_s
            (local.tee $9
             (i32.sub
              (local.get $15)
              (local.get $4)
             )
            )
            (i32.const 32768)
           )
           (i32.lt_s
            (local.get $8)
            (i32.const 259)
           )
          )
         )
        )
        (local.set $3
         (i32.const 0)
        )
        (loop $while-in4
         (if
          (i32.ge_s
           (local.get $8)
           (i32.load16_u
            (i32.add
             (i32.shl
              (local.tee $4
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (i32.const 1)
             )
             (i32.const 7488)
            )
           )
          )
          (block
           (local.set $3
            (local.get $4)
           )
           (br $while-in4)
          )
         )
        )
        (i32.store
         (local.get $7)
         (if (result i32)
          (i32.lt_u
           (i32.add
            (local.get $3)
            (i32.const 257)
           )
           (i32.const 280)
          )
          (block (result i32)
           (local.set $4
            (call $_stbiw__zlib_bitrev
             (local.get $4)
             (i32.const 7)
            )
           )
           (i32.store
            (local.get $6)
            (i32.or
             (i32.load
              (local.get $6)
             )
             (i32.shl
              (local.get $4)
              (local.tee $4
               (i32.load
                (local.get $7)
               )
              )
             )
            )
           )
           (i32.add
            (local.get $4)
            (i32.const 7)
           )
          )
          (block (result i32)
           (local.set $4
            (call $_stbiw__zlib_bitrev
             (i32.add
              (local.get $3)
              (i32.const 169)
             )
             (i32.const 8)
            )
           )
           (i32.store
            (local.get $6)
            (i32.or
             (i32.load
              (local.get $6)
             )
             (i32.shl
              (local.get $4)
              (local.tee $4
               (i32.load
                (local.get $7)
               )
              )
             )
            )
           )
           (i32.add
            (local.get $4)
            (i32.const 8)
           )
          )
         )
        )
        (i32.store
         (local.get $5)
         (call $_stbiw__zlib_flushf
          (i32.load
           (local.get $5)
          )
          (local.get $6)
          (local.get $7)
         )
        )
        (if
         (i32.lt_u
          (i32.add
           (local.get $3)
           (i32.const -8)
          )
          (i32.const 20)
         )
         (block
          (i32.store
           (local.get $6)
           (i32.or
            (i32.load
             (local.get $6)
            )
            (i32.shl
             (i32.sub
              (local.get $8)
              (i32.load16_u
               (i32.add
                (i32.shl
                 (local.get $3)
                 (i32.const 1)
                )
                (i32.const 7488)
               )
              )
             )
             (local.tee $4
              (i32.load
               (local.get $7)
              )
             )
            )
           )
          )
          (i32.store
           (local.get $7)
           (i32.add
            (local.get $4)
            (i32.load8_u
             (i32.add
              (local.get $3)
              (i32.const 7552)
             )
            )
           )
          )
          (i32.store
           (local.get $5)
           (call $_stbiw__zlib_flushf
            (i32.load
             (local.get $5)
            )
            (local.get $6)
            (local.get $7)
           )
          )
         )
        )
        (local.set $3
         (i32.const 0)
        )
        (loop $while-in6
         (if
          (i32.ge_s
           (local.get $9)
           (i32.load16_u
            (i32.add
             (i32.shl
              (local.tee $4
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (i32.const 1)
             )
             (i32.const 7584)
            )
           )
          )
          (block
           (local.set $3
            (local.get $4)
           )
           (br $while-in6)
          )
         )
        )
        (local.set $4
         (call $_stbiw__zlib_bitrev
          (local.get $3)
          (i32.const 5)
         )
        )
        (i32.store
         (local.get $6)
         (i32.or
          (i32.load
           (local.get $6)
          )
          (i32.shl
           (local.get $4)
           (local.tee $4
            (i32.load
             (local.get $7)
            )
           )
          )
         )
        )
        (i32.store
         (local.get $7)
         (i32.add
          (local.get $4)
          (i32.const 5)
         )
        )
        (i32.store
         (local.get $5)
         (local.tee $4
          (call $_stbiw__zlib_flushf
           (i32.load
            (local.get $5)
           )
           (local.get $6)
           (local.get $7)
          )
         )
        )
        (if
         (i32.lt_u
          (i32.add
           (local.get $3)
           (i32.const -4)
          )
          (i32.const 26)
         )
         (block
          (i32.store
           (local.get $6)
           (i32.or
            (i32.load
             (local.get $6)
            )
            (i32.shl
             (i32.sub
              (local.get $9)
              (i32.load16_u
               (i32.add
                (i32.shl
                 (local.get $3)
                 (i32.const 1)
                )
                (i32.const 7584)
               )
              )
             )
             (local.tee $9
              (i32.load
               (local.get $7)
              )
             )
            )
           )
          )
          (i32.store
           (local.get $7)
           (i32.add
            (local.get $9)
            (i32.load8_u
             (i32.add
              (local.get $3)
              (i32.const 7648)
             )
            )
           )
          )
          (i32.store
           (local.get $5)
           (call $_stbiw__zlib_flushf
            (local.get $4)
            (local.get $6)
            (local.get $7)
           )
          )
         )
        )
        (br $__rjto$1)
       )
       (local.set $3
        (local.tee $4
         (i32.load8_u
          (local.get $15)
         )
        )
       )
       (i32.store
        (local.get $7)
        (if (result i32)
         (i32.lt_s
          (local.get $4)
          (i32.const 144)
         )
         (block (result i32)
          (local.set $3
           (call $_stbiw__zlib_bitrev
            (i32.add
             (local.get $3)
             (i32.const 48)
            )
            (i32.const 8)
           )
          )
          (i32.store
           (local.get $6)
           (i32.or
            (i32.load
             (local.get $6)
            )
            (i32.shl
             (local.get $3)
             (local.tee $3
              (i32.load
               (local.get $7)
              )
             )
            )
           )
          )
          (i32.add
           (local.get $3)
           (i32.const 8)
          )
         )
         (block (result i32)
          (local.set $3
           (call $_stbiw__zlib_bitrev
            (i32.or
             (local.get $3)
             (i32.const 256)
            )
            (i32.const 9)
           )
          )
          (i32.store
           (local.get $6)
           (i32.or
            (i32.load
             (local.get $6)
            )
            (i32.shl
             (local.get $3)
             (local.tee $3
              (i32.load
               (local.get $7)
              )
             )
            )
           )
          )
          (i32.add
           (local.get $3)
           (i32.const 9)
          )
         )
        )
       )
       (i32.store
        (local.get $5)
        (call $_stbiw__zlib_flushf
         (i32.load
          (local.get $5)
         )
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $8
        (i32.const 1)
       )
      )
      (if
       (i32.lt_s
        (local.tee $3
         (i32.add
          (local.get $8)
          (local.get $10)
         )
        )
        (local.get $21)
       )
       (block
        (local.set $10
         (local.get $3)
        )
        (br $label$continue$L11)
       )
       (block
        (local.set $11
         (local.get $3)
        )
        (br $label$break$L9)
       )
      )
     )
    )
    (call $___assert_fail
     (i32.const 16193)
     (i32.const 16142)
     (i32.const 922)
     (i32.const 16219)
    )
   )
  )
  (if
   (i32.lt_s
    (local.get $11)
    (local.get $1)
   )
   (block
    (local.set $4
     (local.get $11)
    )
    (loop $while-in8
     (local.set $3
      (local.tee $11
       (i32.load8_u
        (i32.add
         (local.get $0)
         (local.get $4)
        )
       )
      )
     )
     (i32.store
      (local.get $7)
      (if (result i32)
       (i32.lt_s
        (local.get $11)
        (i32.const 144)
       )
       (block (result i32)
        (local.set $3
         (call $_stbiw__zlib_bitrev
          (i32.add
           (local.get $3)
           (i32.const 48)
          )
          (i32.const 8)
         )
        )
        (i32.store
         (local.get $6)
         (i32.or
          (i32.load
           (local.get $6)
          )
          (i32.shl
           (local.get $3)
           (local.tee $3
            (i32.load
             (local.get $7)
            )
           )
          )
         )
        )
        (i32.add
         (local.get $3)
         (i32.const 8)
        )
       )
       (block (result i32)
        (local.set $3
         (call $_stbiw__zlib_bitrev
          (i32.or
           (local.get $3)
           (i32.const 256)
          )
          (i32.const 9)
         )
        )
        (i32.store
         (local.get $6)
         (i32.or
          (i32.load
           (local.get $6)
          )
          (i32.shl
           (local.get $3)
           (local.tee $3
            (i32.load
             (local.get $7)
            )
           )
          )
         )
        )
        (i32.add
         (local.get $3)
         (i32.const 9)
        )
       )
      )
     )
     (i32.store
      (local.get $5)
      (call $_stbiw__zlib_flushf
       (i32.load
        (local.get $5)
       )
       (local.get $6)
       (local.get $7)
      )
     )
     (br_if $while-in8
      (i32.ne
       (local.tee $4
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (local.get $1)
      )
     )
    )
   )
  )
  (local.set $3
   (call $_stbiw__zlib_bitrev
    (i32.const 0)
    (i32.const 7)
   )
  )
  (i32.store
   (local.get $6)
   (i32.or
    (i32.load
     (local.get $6)
    )
    (i32.shl
     (local.get $3)
     (local.tee $3
      (i32.load
       (local.get $7)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $7)
   (i32.add
    (local.get $3)
    (i32.const 7)
   )
  )
  (i32.store
   (local.get $5)
   (local.tee $4
    (call $_stbiw__zlib_flushf
     (i32.load
      (local.get $5)
     )
     (local.get $6)
     (local.get $7)
    )
   )
  )
  (if
   (local.tee $8
    (i32.load
     (local.get $7)
    )
   )
   (loop $while-in10
    (i32.store
     (local.get $7)
     (i32.add
      (local.get $8)
      (i32.const 1)
     )
    )
    (i32.store
     (local.get $5)
     (local.tee $4
      (call $_stbiw__zlib_flushf
       (local.get $4)
       (local.get $6)
       (local.get $7)
      )
     )
    )
    (br_if $while-in10
     (local.tee $8
      (i32.load
       (local.get $7)
      )
     )
    )
   )
  )
  (local.set $4
   (i32.const 0)
  )
  (loop $while-in12
   (if
    (local.tee $3
     (i32.load
      (i32.add
       (i32.shl
        (local.get $4)
        (i32.const 2)
       )
       (local.get $13)
      )
     )
    )
    (call $_free
     (i32.add
      (local.get $3)
      (i32.const -8)
     )
    )
   )
   (br_if $while-in12
    (i32.ne
     (local.tee $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (i32.const 16384)
    )
   )
  )
  (call $_free
   (local.get $13)
  )
  (if
   (i32.gt_s
    (local.get $1)
    (i32.const 0)
   )
   (block
    (local.set $10
     (i32.rem_u
      (local.get $1)
      (i32.const 5552)
     )
    )
    (local.set $3
     (i32.const 0)
    )
    (local.set $8
     (i32.const 1)
    )
    (local.set $4
     (i32.const 0)
    )
    (loop $while-in14
     (if
      (local.get $10)
      (block
       (local.set $11
        (i32.const 0)
       )
       (loop $while-in16
        (local.set $4
         (i32.add
          (local.tee $8
           (i32.add
            (i32.load8_u
             (i32.add
              (local.get $0)
              (i32.add
               (local.get $3)
               (local.get $11)
              )
             )
            )
            (local.get $8)
           )
          )
          (local.get $4)
         )
        )
        (br_if $while-in16
         (i32.ne
          (local.tee $11
           (i32.add
            (local.get $11)
            (i32.const 1)
           )
          )
          (local.get $10)
         )
        )
       )
      )
     )
     (local.set $8
      (i32.rem_u
       (local.get $8)
       (i32.const 65521)
      )
     )
     (local.set $4
      (i32.rem_u
       (local.get $4)
       (i32.const 65521)
      )
     )
     (if
      (i32.lt_s
       (local.tee $3
        (i32.add
         (local.get $3)
         (local.get $10)
        )
       )
       (local.get $1)
      )
      (block
       (local.set $10
        (i32.const 5552)
       )
       (br $while-in14)
      )
     )
    )
   )
   (block
    (local.set $8
     (i32.const 1)
    )
    (local.set $4
     (i32.const 0)
    )
   )
  )
  (block $__rjto$3
   (block $__rjti$3
    (br_if $__rjti$3
     (i32.eqz
      (local.tee $0
       (i32.load
        (local.get $5)
       )
      )
     )
    )
    (br_if $__rjti$3
     (i32.ge_s
      (i32.add
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const -4)
        )
       )
       (i32.const 1)
      )
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const -8)
       )
      )
     )
    )
    (br $__rjto$3)
   )
   (call $_stbiw__sbgrowf
    (local.get $5)
    (i32.const 1)
   )
  )
  (local.set $0
   (i32.load
    (local.tee $3
     (i32.add
      (local.tee $1
       (i32.load
        (local.get $5)
       )
      )
      (i32.const -4)
     )
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (local.get $1)
   )
   (i32.shr_u
    (local.get $4)
    (i32.const 8)
   )
  )
  (block $__rjto$4
   (block $__rjti$4
    (br_if $__rjti$4
     (i32.eqz
      (local.tee $0
       (i32.load
        (local.get $5)
       )
      )
     )
    )
    (br_if $__rjti$4
     (i32.ge_s
      (i32.add
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const -4)
        )
       )
       (i32.const 1)
      )
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const -8)
       )
      )
     )
    )
    (br $__rjto$4)
   )
   (call $_stbiw__sbgrowf
    (local.get $5)
    (i32.const 1)
   )
  )
  (local.set $0
   (i32.load
    (local.tee $3
     (i32.add
      (local.tee $1
       (i32.load
        (local.get $5)
       )
      )
      (i32.const -4)
     )
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (local.get $1)
   )
   (local.get $4)
  )
  (block $__rjto$5
   (block $__rjti$5
    (br_if $__rjti$5
     (i32.eqz
      (local.tee $0
       (i32.load
        (local.get $5)
       )
      )
     )
    )
    (br_if $__rjti$5
     (i32.ge_s
      (i32.add
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const -4)
        )
       )
       (i32.const 1)
      )
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const -8)
       )
      )
     )
    )
    (br $__rjto$5)
   )
   (call $_stbiw__sbgrowf
    (local.get $5)
    (i32.const 1)
   )
  )
  (local.set $0
   (i32.load
    (local.tee $3
     (i32.add
      (local.tee $1
       (i32.load
        (local.get $5)
       )
      )
      (i32.const -4)
     )
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (local.get $1)
   )
   (i32.shr_u
    (local.get $8)
    (i32.const 8)
   )
  )
  (block $__rjto$6
   (block $__rjti$6
    (br_if $__rjti$6
     (i32.eqz
      (local.tee $0
       (i32.load
        (local.get $5)
       )
      )
     )
    )
    (br_if $__rjti$6
     (i32.ge_s
      (i32.add
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const -4)
        )
       )
       (i32.const 1)
      )
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const -8)
       )
      )
     )
    )
    (br $__rjto$6)
   )
   (call $_stbiw__sbgrowf
    (local.get $5)
    (i32.const 1)
   )
  )
  (local.set $0
   (i32.load
    (local.tee $3
     (i32.add
      (local.tee $1
       (i32.load
        (local.get $5)
       )
      )
      (i32.const -4)
     )
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (local.get $1)
   )
   (local.get $8)
  )
  (i32.store
   (local.get $2)
   (local.tee $1
    (i32.load
     (i32.add
      (local.tee $0
       (i32.load
        (local.get $5)
       )
      )
      (i32.const -4)
     )
    )
   )
  )
  (drop
   (call $_memmove
    (i32.add
     (local.get $0)
     (i32.const -8)
    )
    (local.get $0)
    (local.get $1)
   )
  )
  (local.set $0
   (i32.add
    (i32.load
     (local.get $5)
    )
    (i32.const -8)
   )
  )
  (global.set $STACKTOP
   (local.get $20)
  )
  (local.get $0)
 )
 (func $_stbiw__wpcrc (; 515 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local.set $1
   (call $_stbiw__crc32
    (i32.add
     (i32.sub
      (local.tee $2
       (i32.load
        (local.get $0)
       )
      )
      (local.get $1)
     )
     (i32.const -4)
    )
    (i32.add
     (local.get $1)
     (i32.const 4)
    )
   )
  )
  (i32.store8
   (local.get $2)
   (i32.shr_u
    (local.get $1)
    (i32.const 24)
   )
  )
  (i32.store8 offset=1
   (i32.load
    (local.get $0)
   )
   (i32.shr_u
    (local.get $1)
    (i32.const 16)
   )
  )
  (i32.store8 offset=2
   (i32.load
    (local.get $0)
   )
   (i32.shr_u
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store8 offset=3
   (i32.load
    (local.get $0)
   )
   (local.get $1)
  )
  (i32.store
   (local.get $0)
   (i32.add
    (i32.load
     (local.get $0)
    )
    (i32.const 4)
   )
  )
 )
 (func $_stbiw__crc32 (; 516 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.le_s
    (local.get $1)
    (i32.const 0)
   )
   (return
    (i32.const 0)
   )
  )
  (local.set $2
   (i32.const -1)
  )
  (loop $while-in
   (local.set $2
    (i32.xor
     (i32.load
      (i32.add
       (i32.shl
        (i32.xor
         (i32.load8_u
          (i32.add
           (local.get $0)
           (local.get $3)
          )
         )
         (i32.and
          (local.get $2)
          (i32.const 255)
         )
        )
        (i32.const 2)
       )
       (i32.const 6464)
      )
     )
     (i32.shr_u
      (local.get $2)
      (i32.const 8)
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.get $1)
    )
   )
  )
  (i32.xor
   (local.get $2)
   (i32.const -1)
  )
 )
 (func $_stbiw__sbgrowf (; 517 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $2
   (if (result i32)
    (local.tee $4
     (i32.eqz
      (local.tee $3
       (i32.load
        (local.get $0)
       )
      )
     )
    )
    (i32.const 2)
    (i32.or
     (i32.shl
      (i32.load
       (i32.add
        (local.get $3)
        (i32.const -8)
       )
      )
      (i32.const 1)
     )
     (i32.const 1)
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $1
     (call $_realloc
      (select
       (i32.const 0)
       (i32.add
        (local.get $3)
        (i32.const -8)
       )
       (local.get $4)
      )
      (i32.add
       (i32.mul
        (local.get $1)
        (local.get $2)
       )
       (i32.const 8)
      )
     )
    )
   )
   (call $___assert_fail
    (i32.const 16238)
    (i32.const 16142)
    (i32.const 793)
    (i32.const 16240)
   )
  )
  (if
   (i32.load
    (local.get $0)
   )
   (block
    (i32.store
     (local.get $0)
     (i32.add
      (local.get $1)
      (i32.const 8)
     )
    )
    (i32.store
     (local.get $1)
     (local.get $2)
    )
    (return)
   )
  )
  (i32.store offset=4
   (local.get $1)
   (i32.const 0)
  )
  (i32.store
   (local.get $0)
   (i32.add
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $2)
  )
 )
 (func $_stbiw__zlib_flushf (; 518 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $3)
   (local.get $0)
  )
  (if
   (i32.le_s
    (i32.load
     (local.get $2)
    )
    (i32.const 7)
   )
   (block
    (global.set $STACKTOP
     (local.get $5)
    )
    (return
     (local.get $0)
    )
   )
  )
  (loop $while-in
   (block $__rjto$0
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.eqz
       (local.get $0)
      )
     )
     (br_if $__rjti$0
      (i32.ge_s
       (i32.add
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const -4)
         )
        )
        (i32.const 1)
       )
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const -8)
        )
       )
      )
     )
     (br $__rjto$0)
    )
    (call $_stbiw__sbgrowf
     (local.get $3)
     (i32.const 1)
    )
   )
   (local.set $4
    (i32.and
     (i32.load
      (local.get $1)
     )
     (i32.const 255)
    )
   )
   (local.set $0
    (i32.load
     (local.tee $7
      (i32.add
       (local.tee $6
        (i32.load
         (local.get $3)
        )
       )
       (i32.const -4)
      )
     )
    )
   )
   (i32.store
    (local.get $7)
    (i32.add
     (local.get $0)
     (i32.const 1)
    )
   )
   (i32.store8
    (i32.add
     (local.get $0)
     (local.get $6)
    )
    (local.get $4)
   )
   (i32.store
    (local.get $1)
    (i32.shr_u
     (i32.load
      (local.get $1)
     )
     (i32.const 8)
    )
   )
   (i32.store
    (local.get $2)
    (i32.add
     (local.tee $4
      (i32.load
       (local.get $2)
      )
     )
     (i32.const -8)
    )
   )
   (local.set $0
    (i32.load
     (local.get $3)
    )
   )
   (br_if $while-in
    (i32.gt_s
     (local.get $4)
     (i32.const 15)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $_stbiw__zhash (; 519 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.add
   (i32.shr_u
    (local.tee $0
     (i32.xor
      (local.tee $0
       (i32.add
        (i32.shr_u
         (local.tee $0
          (i32.xor
           (local.tee $0
            (i32.add
             (i32.shr_u
              (local.tee $0
               (i32.xor
                (local.tee $0
                 (i32.or
                  (i32.or
                   (i32.load8_u
                    (local.get $0)
                   )
                   (i32.shl
                    (i32.load8_u offset=1
                     (local.get $0)
                    )
                    (i32.const 8)
                   )
                  )
                  (i32.shl
                   (i32.load8_u offset=2
                    (local.get $0)
                   )
                   (i32.const 16)
                  )
                 )
                )
                (i32.shl
                 (local.get $0)
                 (i32.const 3)
                )
               )
              )
              (i32.const 5)
             )
             (local.get $0)
            )
           )
           (i32.shl
            (local.get $0)
            (i32.const 4)
           )
          )
         )
         (i32.const 17)
        )
        (local.get $0)
       )
      )
      (i32.shl
       (local.get $0)
       (i32.const 25)
      )
     )
    )
    (i32.const 6)
   )
   (local.get $0)
  )
 )
 (func $_stbiw__zlib_countm (; 520 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (if
   (i32.le_s
    (local.get $2)
    (i32.const 0)
   )
   (return
    (i32.const 0)
   )
  )
  (loop $while-in
   (if
    (i32.eq
     (i32.load8_s
      (i32.add
       (local.get $0)
       (local.get $3)
      )
     )
     (i32.load8_s
      (i32.add
       (local.get $1)
       (local.get $3)
      )
     )
    )
    (br_if $while-in
     (i32.and
      (i32.lt_s
       (local.tee $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.get $2)
      )
      (i32.lt_u
       (local.get $3)
       (i32.const 258)
      )
     )
    )
   )
  )
  (local.get $3)
 )
 (func $_stbiw__zlib_bitrev (; 521 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (if
   (i32.eqz
    (local.get $1)
   )
   (return
    (i32.const 0)
   )
  )
  (loop $while-in
   (local.set $2
    (i32.or
     (i32.and
      (local.get $0)
      (i32.const 1)
     )
     (i32.shl
      (local.get $2)
      (i32.const 1)
     )
    )
   )
   (local.set $0
    (i32.shr_s
     (local.get $0)
     (i32.const 1)
    )
   )
   (br_if $while-in
    (local.tee $1
     (i32.add
      (local.get $1)
      (i32.const -1)
     )
    )
   )
  )
  (local.get $2)
 )
 (func $_stbiw__paeth (; 522 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (if (result i32)
   (i32.or
    (i32.gt_s
     (local.tee $5
      (select
       (local.tee $4
        (i32.sub
         (local.tee $3
          (i32.sub
           (i32.add
            (local.get $0)
            (local.get $1)
           )
           (local.get $2)
          )
         )
         (local.get $0)
        )
       )
       (i32.sub
        (i32.const 0)
        (local.get $4)
       )
       (i32.gt_s
        (local.get $4)
        (i32.const -1)
       )
      )
     )
     (local.tee $4
      (select
       (local.tee $4
        (i32.sub
         (local.get $3)
         (local.get $1)
        )
       )
       (i32.sub
        (i32.const 0)
        (local.get $4)
       )
       (i32.gt_s
        (local.get $4)
        (i32.const -1)
       )
      )
     )
    )
    (i32.gt_s
     (local.get $5)
     (local.tee $3
      (select
       (local.tee $3
        (i32.sub
         (local.get $3)
         (local.get $2)
        )
       )
       (i32.sub
        (i32.const 0)
        (local.get $3)
       )
       (i32.gt_s
        (local.get $3)
        (i32.const -1)
       )
      )
     )
    )
   )
   (i32.and
    (select
     (local.get $2)
     (i32.and
      (local.get $1)
      (i32.const 255)
     )
     (i32.gt_s
      (local.get $4)
      (local.get $3)
     )
    )
    (i32.const 255)
   )
   (i32.and
    (local.get $0)
    (i32.const 255)
   )
  )
 )
 (func $_CloseWindow (; 523 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.load8_s
    (i32.const 28844)
   )
   (block
    (call $_GifEnd)
    (i32.store8
     (i32.const 28844)
     (i32.const 0)
    )
   )
  )
  (call $_UnloadFontDefault)
  (call $_rlglClose)
  (call $_glfwDestroyWindow
   (i32.load
    (i32.const 27928)
   )
  )
  (call $_glfwTerminate)
  (call $_TraceLog
   (i32.const 3)
   (i32.const 16502)
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $0)
  )
 )
 (func $_UnloadFontDefault (; 524 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (if
   (i32.gt_s
    (i32.load
     (i32.const 27960)
    )
    (i32.const 0)
   )
   (loop $while-in
    (i64.store align=4
     (local.get $0)
     (i64.load align=4
      (local.tee $2
       (i32.add
        (i32.add
         (i32.load
          (i32.const 27988)
         )
         (i32.mul
          (local.get $1)
          (i32.const 36)
         )
        )
        (i32.const 16)
       )
      )
     )
    )
    (i64.store offset=8 align=4
     (local.get $0)
     (i64.load offset=8 align=4
      (local.get $2)
     )
    )
    (i32.store offset=16
     (local.get $0)
     (i32.load offset=16
      (local.get $2)
     )
    )
    (call $_UnloadImage
     (local.get $0)
    )
    (br_if $while-in
     (i32.lt_s
      (local.tee $1
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
      (i32.load
       (i32.const 27960)
      )
     )
    )
   )
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 27964)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 27972)
   )
  )
  (i32.store offset=16
   (local.get $0)
   (i32.load
    (i32.const 27980)
   )
  )
  (call $_UnloadTexture
   (local.get $0)
  )
  (call $_free
   (i32.load
    (i32.const 27988)
   )
  )
  (call $_free
   (i32.load
    (i32.const 27984)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_UnloadTexture (; 525 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.eqz
    (local.tee $0
     (i32.load
      (local.get $0)
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $1)
    )
    (return)
   )
  )
  (call $_rlDeleteTextures
   (local.get $0)
  )
  (i32.store
   (local.get $2)
   (local.get $0)
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 16529)
   (local.get $2)
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $_BeginDrawing (; 526 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 128)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 128)
   )
  )
  (local.set $0
   (i32.sub
    (local.get $1)
    (i32.const -64)
   )
  )
  (f64.store
   (i32.const 27640)
   (f64.sub
    (local.tee $3
     (call $_glfwGetTime)
    )
    (f64.load
     (i32.const 27624)
    )
   )
  )
  (f64.store
   (i32.const 27624)
   (local.get $3)
  )
  (call $_rlLoadIdentity)
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 27992)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 28000)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 28008)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 28016)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 28024)
   )
  )
  (i64.store offset=40 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 28032)
   )
  )
  (i64.store offset=48 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 28040)
   )
  )
  (i64.store offset=56 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 28048)
   )
  )
  (call $_MatrixToFloatV
   (local.get $1)
   (local.get $0)
  )
  (call $_rlMultMatrixf
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_EndDrawing (; 527 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
  )
  (local.set $2
   (local.get $0)
  )
  (call $_rlglDraw)
  (if
   (i32.load8_s
    (i32.const 28844)
   )
   (block
    (i32.store
     (i32.const 28096)
     (local.tee $3
      (i32.add
       (i32.load
        (i32.const 28096)
       )
       (i32.const 1)
      )
     )
    )
    (if
     (i32.eqz
      (i32.rem_s
       (local.get $3)
       (i32.const 10)
      )
     )
     (block
      (call $_GifWriteFrame
       (local.tee $3
        (call $_rlReadScreenPixels
         (i32.load
          (i32.const 27948)
         )
         (i32.load
          (i32.const 27952)
         )
        )
       )
       (i32.load
        (i32.const 27948)
       )
       (i32.load
        (i32.const 27952)
       )
      )
      (call $_free
       (local.get $3)
      )
     )
    )
    (if
     (i32.eq
      (i32.rem_s
       (i32.div_s
        (i32.load
         (i32.const 28096)
        )
        (i32.const 15)
       )
       (i32.const 2)
      )
      (i32.const 1)
     )
     (block
      (local.set $3
       (i32.add
        (i32.load
         (i32.const 27952)
        )
        (i32.const -20)
       )
      )
      (i32.store8 offset=4
       (local.get $0)
       (i32.const -26)
      )
      (i32.store8 offset=5
       (local.get $0)
       (i32.const 41)
      )
      (i32.store8 offset=6
       (local.get $0)
       (i32.const 55)
      )
      (i32.store8 offset=7
       (local.get $0)
       (i32.const -1)
      )
      (i32.store align=1
       (local.get $4)
       (i32.load offset=4 align=1
        (local.get $0)
       )
      )
      (call $_DrawCircle
       (local.get $3)
       (local.get $4)
      )
      (local.set $0
       (i32.add
        (i32.load
         (i32.const 27952)
        )
        (i32.const -25)
       )
      )
      (i32.store8
       (local.get $2)
       (i32.const -66)
      )
      (i32.store8 offset=1
       (local.get $2)
       (i32.const 33)
      )
      (i32.store8 offset=2
       (local.get $2)
       (i32.const 55)
      )
      (i32.store8 offset=3
       (local.get $2)
       (i32.const -1)
      )
      (i32.store align=1
       (local.get $4)
       (i32.load align=1
        (local.get $2)
       )
      )
      (call $_DrawText
       (i32.const 16579)
       (i32.const 50)
       (local.get $0)
       (i32.const 10)
       (local.get $4)
      )
     )
    )
    (call $_rlglDraw)
   )
  )
  (call $_glfwSwapBuffers
   (i32.load
    (i32.const 27928)
   )
  )
  (call $_PollInputEvents)
  (local.set $1
   (f64.sub
    (local.tee $5
     (call $_glfwGetTime)
    )
    (f64.load
     (i32.const 27624)
    )
   )
  )
  (f64.store
   (i32.const 27624)
   (local.get $5)
  )
  (f64.store
   (i32.const 27632)
   (local.tee $1
    (f64.add
     (local.get $1)
     (f64.load
      (i32.const 27640)
     )
    )
   )
  )
  (if
   (i32.eqz
    (f64.lt
     (local.get $1)
     (f64.const 0)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $6)
    )
    (return)
   )
  )
  (call $_Wait
   (f32.mul
    (f32.demote_f64
     (f64.sub
      (f64.const 0)
      (local.get $1)
     )
    )
    (f32.const 1e3)
   )
  )
  (local.set $1
   (f64.sub
    (local.tee $5
     (call $_glfwGetTime)
    )
    (f64.load
     (i32.const 27624)
    )
   )
  )
  (f64.store
   (i32.const 27624)
   (local.get $5)
  )
  (f64.store
   (i32.const 27632)
   (f64.add
    (local.get $1)
    (f64.load
     (i32.const 27632)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $_DrawCircle (; 528 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (f32.store
   (local.get $2)
   (f32.const 30)
  )
  (f32.store offset=4
   (local.get $2)
   (f32.convert_i32_s
    (local.get $0)
   )
  )
  (i64.store align=4
   (local.tee $0
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
   (i64.load align=4
    (local.get $2)
   )
  )
  (i32.store align=1
   (local.tee $2
    (i32.add
     (local.get $2)
     (i32.const 16)
    )
   )
   (i32.load align=1
    (local.get $1)
   )
  )
  (call $_DrawCircleV
   (local.get $0)
   (local.get $2)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_DrawText (; 529 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 144)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 144)
   )
  )
  (local.set $9
   (i32.add
    (local.get $5)
    (i32.const 128)
   )
  )
  (local.set $10
   (i32.add
    (local.get $5)
    (i32.const 120)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 80)
   )
  )
  (local.set $7
   (local.get $5)
  )
  (call $_GetFontDefault
   (local.tee $11
    (i32.add
     (local.get $5)
     (i32.const 36)
    )
   )
  )
  (if
   (i32.eqz
    (i32.load offset=8
     (local.get $11)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $8)
    )
    (return)
   )
  )
  (f32.store offset=72
   (local.get $5)
   (f32.convert_i32_s
    (local.get $1)
   )
  )
  (f32.store offset=76
   (local.get $5)
   (f32.convert_i32_s
    (local.get $2)
   )
  )
  (local.set $1
   (i32.div_u
    (local.tee $2
     (select
      (local.get $3)
      (i32.const 10)
      (i32.gt_s
       (local.get $3)
       (i32.const 10)
      )
     )
    )
    (i32.const 10)
   )
  )
  (call $_GetFontDefault
   (local.get $7)
  )
  (i64.store align=4
   (local.get $6)
   (i64.load align=4
    (local.get $7)
   )
  )
  (i64.store offset=8 align=4
   (local.get $6)
   (i64.load offset=8 align=4
    (local.get $7)
   )
  )
  (i64.store offset=16 align=4
   (local.get $6)
   (i64.load offset=16 align=4
    (local.get $7)
   )
  )
  (i64.store offset=24 align=4
   (local.get $6)
   (i64.load offset=24 align=4
    (local.get $7)
   )
  )
  (i32.store offset=32
   (local.get $6)
   (i32.load offset=32
    (local.get $7)
   )
  )
  (i64.store align=4
   (local.get $10)
   (i64.load offset=72 align=4
    (local.get $5)
   )
  )
  (i32.store align=1
   (local.get $9)
   (i32.load align=1
    (local.get $4)
   )
  )
  (call $_DrawTextEx
   (local.get $6)
   (local.get $0)
   (local.get $10)
   (f32.convert_i32_s
    (local.get $2)
   )
   (f32.convert_i32_s
    (local.get $1)
   )
   (local.get $9)
  )
  (global.set $STACKTOP
   (local.get $8)
  )
 )
 (func $_PollInputEvents (; 530 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 1456)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 1456)
   )
  )
  (local.set $2
   (i32.add
    (local.get $1)
    (i32.const 1440)
   )
  )
  (local.set $0
   (i32.add
    (local.get $1)
    (i32.const 1432)
   )
  )
  (call $_UpdateGestures)
  (call $_glfwGetCursorPos
   (i32.load
    (i32.const 27928)
   )
   (local.get $2)
   (local.get $0)
  )
  (f32.store
   (i32.const 27932)
   (f32.demote_f64
    (f64.load
     (local.get $2)
    )
   )
  )
  (f32.store
   (i32.const 27936)
   (f32.demote_f64
    (f64.load
     (local.get $0)
    )
   )
  )
  (drop
   (call $_memcpy
    (i32.const 24176)
    (i32.const 22640)
    (i32.const 512)
   )
  )
  (i32.store16 align=1
   (i32.const 28841)
   (i32.load16_s align=1
    (i32.const 28838)
   )
  )
  (i32.store8
   (i32.const 28843)
   (i32.load8_s
    (i32.const 28840)
   )
  )
  (i32.store
   (i32.const 28088)
   (i32.const 0)
  )
  (if
   (call $_emscripten_sample_gamepad_data)
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (if
   (i32.le_s
    (local.tee $5
     (call $_emscripten_get_num_gamepads)
    )
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.eqz
     (call $_emscripten_get_gamepad_status
      (local.get $2)
      (local.get $1)
     )
    )
    (block
     (if
      (i32.gt_s
       (i32.load offset=12
        (local.get $1)
       )
       (i32.const 0)
      )
      (block
       (local.set $4
        (i32.load offset=12
         (local.get $1)
        )
       )
       (local.set $0
        (i32.const 0)
       )
       (loop $while-in1
        (br_if $while-in1
         (i32.and
          (i32.lt_s
           (local.tee $0
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
           (local.get $4)
          )
          (i32.lt_u
           (local.get $0)
           (i32.const 32)
          )
         )
        )
       )
      )
     )
     (if
      (i32.gt_s
       (i32.load offset=8
        (local.get $1)
       )
       (i32.const 0)
      )
      (block
       (local.set $4
        (i32.load offset=8
         (local.get $1)
        )
       )
       (local.set $0
        (i32.const 0)
       )
       (loop $while-in3
        (br_if $while-in3
         (i32.and
          (i32.lt_s
           (local.tee $0
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
           (local.get $4)
          )
          (i32.lt_u
           (local.get $0)
           (i32.const 8)
          )
         )
        )
       )
      )
     )
    )
   )
   (br_if $while-in
    (i32.and
     (i32.lt_s
      (local.tee $2
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
      )
      (local.get $5)
     )
     (i32.lt_u
      (local.get $2)
      (i32.const 4)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_Wait (; 531 ;) (; has Stack IR ;) (param $0 f32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (local.tee $3
    (i32.trunc_f32_s
     (f32.div
      (local.get $0)
      (f32.const 1e3)
     )
    )
   )
  )
  (i32.store offset=4
   (local.get $1)
   (i32.trunc_f32_s
    (f32.mul
     (f32.sub
      (local.get $0)
      (f32.convert_i32_s
       (i32.mul
        (local.get $3)
        (i32.const 1000)
       )
      )
     )
     (f32.const 1e6)
    )
   )
  )
  (loop $while-in
   (br_if $while-in
    (i32.eq
     (call $_nanosleep
      (local.get $1)
     )
     (i32.const -1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_GetFontDefault (; 532 ;) (; has Stack IR ;) (param $0 i32)
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 27956)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 27964)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 27972)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 27980)
   )
  )
  (i32.store offset=32
   (local.get $0)
   (i32.load
    (i32.const 27988)
   )
  )
 )
 (func $_DrawTextEx (; 533 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f32) (param $4 f32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 f32)
  (local $23 f32)
  (local $24 i32)
  (local.set $18
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 144)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 144)
   )
  )
  (local.set $9
   (i32.add
    (local.get $6)
    (i32.const 96)
   )
  )
  (local.set $19
   (i32.add
    (local.get $6)
    (i32.const 88)
   )
  )
  (local.set $14
   (i32.add
    (local.get $6)
    (i32.const 72)
   )
  )
  (local.set $15
   (i32.add
    (local.get $6)
    (i32.const 56)
   )
  )
  (local.set $12
   (i32.add
    (local.get $6)
    (i32.const 32)
   )
  )
  (local.set $13
   (i32.add
    (local.get $6)
    (i32.const 8)
   )
  )
  (local.set $16
   (local.get $6)
  )
  (local.set $20
   (call $_strlen
    (local.get $1)
   )
  )
  (local.set $11
   (i32.load
    (local.get $0)
   )
  )
  (if
   (i32.le_s
    (local.get $20)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $18)
    )
    (return)
   )
  )
  (local.set $10
   (f32.div
    (local.get $3)
    (f32.convert_i32_s
     (local.get $11)
    )
   )
  )
  (local.set $22
   (f32.load
    (local.get $2)
   )
  )
  (local.set $23
   (f32.load offset=4
    (local.get $2)
   )
  )
  (local.set $3
   (f32.const 0)
  )
  (local.set $11
   (i32.const 0)
  )
  (loop $while-in
   (i32.store
    (local.get $13)
    (i32.const 0)
   )
   (local.set $7
    (call $_GetNextCodepoint
     (i32.add
      (local.get $1)
      (local.get $17)
     )
     (local.get $13)
    )
   )
   (i64.store align=4
    (local.get $9)
    (i64.load align=4
     (local.get $0)
    )
   )
   (i64.store offset=8 align=4
    (local.get $9)
    (i64.load offset=8 align=4
     (local.get $0)
    )
   )
   (i64.store offset=16 align=4
    (local.get $9)
    (i64.load offset=16 align=4
     (local.get $0)
    )
   )
   (i64.store offset=24 align=4
    (local.get $9)
    (i64.load offset=24 align=4
     (local.get $0)
    )
   )
   (i32.store offset=32
    (local.get $9)
    (i32.load offset=32
     (local.get $0)
    )
   )
   (local.set $8
    (call $_GetGlyphIndex
     (local.get $9)
     (local.get $7)
    )
   )
   (local.set $3
    (block $do-once (result f32)
     (block $__rjti$1
      (block $__rjti$0
       (br $do-once
        (if (result f32)
         (i32.eq
          (local.get $7)
          (i32.const 63)
         )
         (block
          (i32.store
           (local.get $13)
           (i32.const 1)
          )
          (local.set $2
           (i32.const 1)
          )
          (br $__rjti$0)
         )
         (block (result f32)
          (local.set $2
           (i32.load
            (local.get $13)
           )
          )
          (if
           (local.tee $7
            (i32.sub
             (local.get $7)
             (i32.const 10)
            )
           )
           (block
            (br_if $__rjti$1
             (i32.eq
              (local.get $7)
              (i32.const 22)
             )
            )
            (br $__rjti$0)
           )
          )
          (local.set $11
           (i32.add
            (i32.trunc_f32_s
             (f32.mul
              (local.get $10)
              (f32.convert_i32_s
               (i32.add
                (local.tee $8
                 (i32.load
                  (local.get $0)
                 )
                )
                (i32.div_s
                 (local.get $8)
                 (i32.const 2)
                )
               )
              )
             )
            )
            (local.get $11)
           )
          )
          (f32.const 0)
         )
        )
       )
      )
      (local.set $21
       (i32.add
        (local.tee $7
         (i32.load offset=28
          (local.get $0)
         )
        )
        (i32.shl
         (local.get $8)
         (i32.const 4)
        )
       )
      )
      (f32.store offset=16
       (local.get $6)
       (f32.add
        (f32.add
         (local.get $3)
         (local.get $22)
        )
        (f32.mul
         (local.get $10)
         (f32.convert_i32_s
          (i32.load offset=4
           (i32.add
            (local.tee $24
             (i32.load offset=32
              (local.get $0)
             )
            )
            (i32.mul
             (local.get $8)
             (i32.const 36)
            )
           )
          )
         )
        )
       )
      )
      (f32.store offset=20
       (local.get $6)
       (f32.add
        (f32.add
         (local.get $23)
         (f32.convert_i32_s
          (local.get $11)
         )
        )
        (f32.mul
         (local.get $10)
         (f32.convert_i32_s
          (i32.load offset=8
           (i32.add
            (i32.mul
             (local.get $8)
             (i32.const 36)
            )
            (local.get $24)
           )
          )
         )
        )
       )
      )
      (f32.store offset=24
       (local.get $6)
       (f32.mul
        (local.get $10)
        (f32.load offset=8
         (i32.add
          (i32.shl
           (local.get $8)
           (i32.const 4)
          )
          (local.get $7)
         )
        )
       )
      )
      (f32.store offset=28
       (local.get $6)
       (f32.mul
        (local.get $10)
        (f32.load offset=12
         (i32.add
          (i32.shl
           (local.get $8)
           (i32.const 4)
          )
          (local.get $7)
         )
        )
       )
      )
      (f32.store
       (local.get $16)
       (f32.const 0)
      )
      (f32.store offset=4
       (local.get $16)
       (f32.const 0)
      )
      (i64.store align=4
       (local.get $12)
       (i64.load offset=8 align=4
        (local.get $0)
       )
      )
      (i64.store offset=8 align=4
       (local.get $12)
       (i64.load offset=16 align=4
        (local.get $0)
       )
      )
      (i32.store offset=16
       (local.get $12)
       (i32.load offset=24
        (local.get $0)
       )
      )
      (i64.store align=4
       (local.get $15)
       (i64.load align=4
        (local.get $21)
       )
      )
      (i64.store offset=8 align=4
       (local.get $15)
       (i64.load offset=8 align=4
        (local.get $21)
       )
      )
      (i64.store align=4
       (local.get $14)
       (i64.load offset=16 align=4
        (local.get $6)
       )
      )
      (i64.store offset=8 align=4
       (local.get $14)
       (i64.load offset=24 align=4
        (local.get $6)
       )
      )
      (i64.store align=4
       (local.get $19)
       (i64.load align=4
        (local.get $16)
       )
      )
      (i32.store align=1
       (local.get $9)
       (i32.load align=1
        (local.get $5)
       )
      )
      (call $_DrawTexturePro
       (local.get $12)
       (local.get $15)
       (local.get $14)
       (local.get $19)
       (local.get $9)
      )
     )
     (if (result f32)
      (local.tee $7
       (i32.load offset=12
        (i32.add
         (i32.load offset=32
          (local.get $0)
         )
         (i32.mul
          (local.get $8)
          (i32.const 36)
         )
        )
       )
      )
      (f32.add
       (local.get $3)
       (f32.add
        (f32.mul
         (local.get $10)
         (f32.convert_i32_s
          (local.get $7)
         )
        )
        (local.get $4)
       )
      )
      (f32.add
       (local.get $3)
       (f32.add
        (f32.mul
         (local.get $10)
         (f32.load offset=8
          (i32.add
           (i32.load offset=28
            (local.get $0)
           )
           (i32.shl
            (local.get $8)
            (i32.const 4)
           )
          )
         )
        )
        (local.get $4)
       )
      )
     )
    )
   )
   (br_if $while-in
    (i32.lt_s
     (local.tee $17
      (i32.add
       (local.get $2)
       (local.get $17)
      )
     )
     (local.get $20)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $18)
  )
 )
 (func $_GetNextCodepoint (; 534 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $3
   (i32.load8_s
    (local.get $0)
   )
  )
  (i32.store
   (local.get $1)
   (i32.const 1)
  )
  (if
   (i32.gt_s
    (local.get $3)
    (i32.const -1)
   )
   (return
    (i32.load8_s
     (local.get $0)
    )
   )
  )
  (block $folding-inner1
   (block $folding-inner0
    (if
     (i32.eq
      (i32.and
       (local.tee $5
        (i32.and
         (local.get $3)
         (i32.const 255)
        )
       )
       (i32.const 224)
      )
      (i32.const 192)
     )
     (block
      (br_if $folding-inner0
       (i32.eqz
        (i32.and
         (i32.eq
          (i32.and
           (local.tee $2
            (i32.and
             (local.tee $0
              (i32.load8_s offset=1
               (local.get $0)
              )
             )
             (i32.const 255)
            )
           )
           (i32.const 192)
          )
          (i32.const 128)
         )
         (i32.ne
          (local.get $0)
          (i32.const 0)
         )
        )
       )
      )
      (br_if $folding-inner1
       (i32.ge_s
        (i32.and
         (i32.shr_s
          (i32.shl
           (i32.add
            (local.get $3)
            (i32.const 62)
           )
           (i32.const 24)
          )
          (i32.const 24)
         )
         (i32.const 255)
        )
        (i32.const 30)
       )
      )
      (i32.store
       (local.get $1)
       (i32.const 2)
      )
      (return
       (select
        (i32.const 63)
        (local.tee $0
         (i32.or
          (i32.and
           (local.get $2)
           (i32.const 63)
          )
          (i32.and
           (i32.shl
            (local.get $5)
            (i32.const 6)
           )
           (i32.const 1984)
          )
         )
        )
        (i32.gt_s
         (local.get $0)
         (i32.const 1114111)
        )
       )
      )
     )
    )
    (if
     (i32.eq
      (i32.and
       (local.get $5)
       (i32.const 240)
      )
      (i32.const 224)
     )
     (block
      (local.set $6
       (i32.and
        (local.tee $2
         (i32.load8_s offset=1
          (local.get $0)
         )
        )
        (i32.const 255)
       )
      )
      (br_if $folding-inner0
       (i32.eqz
        (i32.and
         (i32.eq
          (i32.and
           (local.get $6)
           (i32.const 192)
          )
          (i32.const 128)
         )
         (i32.ne
          (local.get $2)
          (i32.const 0)
         )
        )
       )
      )
      (local.set $0
       (i32.and
        (local.tee $4
         (i32.load8_s offset=2
          (local.get $0)
         )
        )
        (i32.const 255)
       )
      )
      (if
       (i32.eqz
        (i32.and
         (i32.eq
          (i32.and
           (local.get $0)
           (i32.const 192)
          )
          (i32.const 128)
         )
         (i32.ne
          (local.get $4)
          (i32.const 0)
         )
        )
       )
       (block
        (i32.store
         (local.get $1)
         (i32.const 3)
        )
        (br $folding-inner1)
       )
      )
      (block $__rjti$1
       (block $switch-default
        (block $switch-case0
         (if
          (local.tee $4
           (i32.sub
            (local.get $3)
            (i32.const -32)
           )
          )
          (if
           (i32.eq
            (local.get $4)
            (i32.const 13)
           )
           (br $switch-case0)
           (br $switch-default)
          )
         )
         (br_if $__rjti$1
          (i32.eq
           (i32.and
            (local.get $2)
            (i32.const 224)
           )
           (i32.const 160)
          )
         )
         (br $folding-inner0)
        )
        (br_if $__rjti$1
         (i32.and
          (i32.lt_s
           (local.get $2)
           (i32.const 0)
          )
          (i32.lt_s
           (i32.and
            (local.get $2)
            (i32.const 255)
           )
           (i32.const 160)
          )
         )
        )
        (br $folding-inner0)
       )
       (br_if $__rjti$1
        (i32.gt_s
         (i32.and
          (local.get $3)
          (i32.const 255)
         )
         (i32.const 223)
        )
       )
       (br $folding-inner1)
      )
      (i32.store
       (local.get $1)
       (i32.const 3)
      )
      (return
       (select
        (i32.const 63)
        (local.tee $0
         (i32.or
          (i32.and
           (local.get $0)
           (i32.const 63)
          )
          (i32.or
           (i32.and
            (i32.shl
             (local.get $5)
             (i32.const 12)
            )
            (i32.const 61440)
           )
           (i32.and
            (i32.shl
             (local.get $6)
             (i32.const 6)
            )
            (i32.const 4032)
           )
          )
         )
        )
        (i32.gt_s
         (local.get $0)
         (i32.const 1114111)
        )
       )
      )
     )
    )
    (br_if $folding-inner1
     (i32.or
      (i32.ne
       (i32.and
        (local.get $5)
        (i32.const 248)
       )
       (i32.const 240)
      )
      (i32.gt_s
       (i32.and
        (local.get $3)
        (i32.const 255)
       )
       (i32.const 244)
      )
     )
    )
    (local.set $6
     (i32.and
      (local.tee $2
       (i32.load8_s offset=1
        (local.get $0)
       )
      )
      (i32.const 255)
     )
    )
    (br_if $folding-inner0
     (i32.eqz
      (i32.and
       (i32.eq
        (i32.and
         (local.get $6)
         (i32.const 192)
        )
        (i32.const 128)
       )
       (i32.ne
        (local.get $2)
        (i32.const 0)
       )
      )
     )
    )
    (local.set $4
     (i32.and
      (local.tee $7
       (i32.load8_s offset=2
        (local.get $0)
       )
      )
      (i32.const 255)
     )
    )
    (if
     (i32.eqz
      (i32.and
       (i32.eq
        (i32.and
         (local.get $4)
         (i32.const 192)
        )
        (i32.const 128)
       )
       (i32.ne
        (local.get $7)
        (i32.const 0)
       )
      )
     )
     (block
      (i32.store
       (local.get $1)
       (i32.const 3)
      )
      (br $folding-inner1)
     )
    )
    (local.set $0
     (i32.and
      (local.tee $7
       (i32.load8_s offset=3
        (local.get $0)
       )
      )
      (i32.const 255)
     )
    )
    (if
     (i32.eqz
      (i32.and
       (i32.eq
        (i32.and
         (local.get $0)
         (i32.const 192)
        )
        (i32.const 128)
       )
       (i32.ne
        (local.get $7)
        (i32.const 0)
       )
      )
     )
     (block
      (i32.store
       (local.get $1)
       (i32.const 4)
      )
      (br $folding-inner1)
     )
    )
    (block $__rjti$3
     (block $switch-default4
      (block $switch-case3
       (block $switch-case2
        (br_table $switch-case2 $switch-default4 $switch-default4 $switch-default4 $switch-case3 $switch-default4
         (i32.sub
          (local.get $3)
          (i32.const -16)
         )
        )
       )
       (br_if $__rjti$3
        (i32.lt_s
         (i32.and
          (i32.shr_s
           (i32.shl
            (i32.add
             (local.get $2)
             (i32.const 112)
            )
            (i32.const 24)
           )
           (i32.const 24)
          )
          (i32.const 255)
         )
         (i32.const 48)
        )
       )
       (br $folding-inner0)
      )
      (br_if $__rjti$3
       (i32.and
        (i32.lt_s
         (local.get $2)
         (i32.const 0)
        )
        (i32.lt_s
         (i32.and
          (local.get $2)
          (i32.const 255)
         )
         (i32.const 144)
        )
       )
      )
      (br $folding-inner0)
     )
     (br_if $__rjti$3
      (i32.gt_s
       (i32.and
        (local.get $3)
        (i32.const 255)
       )
       (i32.const 239)
      )
     )
     (br $folding-inner1)
    )
    (i32.store
     (local.get $1)
     (i32.const 4)
    )
    (return
     (select
      (i32.const 63)
      (local.tee $0
       (i32.or
        (i32.and
         (local.get $0)
         (i32.const 63)
        )
        (i32.or
         (i32.and
          (i32.shl
           (local.get $4)
           (i32.const 6)
          )
          (i32.const 4032)
         )
         (i32.or
          (i32.and
           (i32.shl
            (local.get $5)
            (i32.const 18)
           )
           (i32.const 1835008)
          )
          (i32.and
           (i32.shl
            (local.get $6)
            (i32.const 12)
           )
           (i32.const 258048)
          )
         )
        )
       )
      )
      (i32.gt_s
       (local.get $0)
       (i32.const 1114111)
      )
     )
    )
   )
   (i32.store
    (local.get $1)
    (i32.const 2)
   )
  )
  (i32.const 63)
 )
 (func $_GetGlyphIndex (; 535 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.le_s
    (i32.load offset=4
     (local.get $0)
    )
    (i32.const 0)
   )
   (return
    (i32.const 0)
   )
  )
  (local.set $2
   (i32.load offset=32
    (local.get $0)
   )
  )
  (local.set $3
   (i32.load offset=4
    (local.get $0)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (i32.load
      (i32.add
       (i32.mul
        (local.get $0)
        (i32.const 36)
       )
       (local.get $2)
      )
     )
     (local.get $1)
    )
    (block
     (br_if $while-in
      (i32.lt_s
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.get $3)
      )
     )
     (local.set $0
      (i32.const 0)
     )
    )
   )
  )
  (local.get $0)
 )
 (func $_DrawTexturePro (; 536 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (if
   (i32.eqz
    (local.tee $10
     (i32.load
      (local.get $0)
     )
    )
   )
   (return)
  )
  (local.set $11
   (i32.load offset=4
    (local.get $0)
   )
  )
  (local.set $0
   (i32.load offset=8
    (local.get $0)
   )
  )
  (local.set $12
   (if (result i32)
    (f32.lt
     (local.tee $5
      (f32.load offset=8
       (local.get $1)
      )
     )
     (f32.const 0)
    )
    (block (result i32)
     (f32.store offset=8
      (local.get $1)
      (f32.neg
       (local.get $5)
      )
     )
     (i32.const 1)
    )
    (i32.const 0)
   )
  )
  (if
   (f32.lt
    (local.tee $6
     (f32.load offset=12
      (local.get $1)
     )
    )
    (f32.const 0)
   )
   (f32.store offset=4
    (local.get $1)
    (f32.sub
     (f32.load offset=4
      (local.get $1)
     )
     (local.get $6)
    )
   )
  )
  (local.set $5
   (f32.convert_i32_s
    (local.get $11)
   )
  )
  (local.set $7
   (f32.convert_i32_s
    (local.get $0)
   )
  )
  (call $_rlEnableTexture
   (local.get $10)
  )
  (call $_rlPushMatrix)
  (call $_rlTranslatef
   (f32.load
    (local.get $2)
   )
   (f32.load offset=4
    (local.get $2)
   )
  )
  (call $_rlRotatef)
  (call $_rlTranslatef
   (f32.neg
    (f32.load
     (local.get $3)
    )
   )
   (f32.neg
    (f32.load offset=4
     (local.get $3)
    )
   )
  )
  (call $_rlBegin)
  (call $_rlColor4ub
   (i32.load8_s
    (local.get $4)
   )
   (i32.load8_s offset=1
    (local.get $4)
   )
   (i32.load8_s offset=2
    (local.get $4)
   )
   (i32.load8_s offset=3
    (local.get $4)
   )
  )
  (local.set $8
   (f32.load
    (local.get $1)
   )
  )
  (if
   (local.get $12)
   (block
    (call $_rlTexCoord2f
     (f32.div
      (f32.add
       (local.get $8)
       (f32.load offset=8
        (local.get $1)
       )
      )
      (local.get $5)
     )
     (f32.div
      (f32.load offset=4
       (local.get $1)
      )
      (local.get $7)
     )
    )
    (call $_rlVertex2f
     (f32.const 0)
     (f32.const 0)
    )
    (call $_rlTexCoord2f
     (f32.div
      (f32.add
       (local.get $8)
       (f32.load offset=8
        (local.get $1)
       )
      )
      (local.get $5)
     )
     (f32.div
      (f32.add
       (local.get $6)
       (f32.load offset=4
        (local.get $1)
       )
      )
      (local.get $7)
     )
    )
    (call $_rlVertex2f
     (f32.const 0)
     (local.tee $9
      (f32.load offset=12
       (local.get $2)
      )
     )
    )
    (call $_rlTexCoord2f
     (f32.div
      (local.get $8)
      (local.get $5)
     )
     (f32.div
      (f32.add
       (local.get $6)
       (f32.load offset=4
        (local.get $1)
       )
      )
      (local.get $7)
     )
    )
    (call $_rlVertex2f
     (local.tee $6
      (f32.load offset=8
       (local.get $2)
      )
     )
     (local.get $9)
    )
    (call $_rlTexCoord2f
     (f32.div
      (local.get $8)
      (local.get $5)
     )
     (f32.div
      (f32.load offset=4
       (local.get $1)
      )
      (local.get $7)
     )
    )
   )
   (block
    (call $_rlTexCoord2f
     (f32.div
      (local.get $8)
      (local.get $5)
     )
     (f32.div
      (local.tee $9
       (f32.load offset=4
        (local.get $1)
       )
      )
      (local.get $7)
     )
    )
    (call $_rlVertex2f
     (f32.const 0)
     (f32.const 0)
    )
    (call $_rlTexCoord2f
     (f32.div
      (local.get $8)
      (local.get $5)
     )
     (f32.div
      (f32.add
       (local.get $6)
       (local.get $9)
      )
      (local.get $7)
     )
    )
    (call $_rlVertex2f
     (f32.const 0)
     (local.tee $9
      (f32.load offset=12
       (local.get $2)
      )
     )
    )
    (call $_rlTexCoord2f
     (f32.div
      (f32.add
       (local.get $8)
       (f32.load offset=8
        (local.get $1)
       )
      )
      (local.get $5)
     )
     (f32.div
      (f32.add
       (local.get $6)
       (f32.load offset=4
        (local.get $1)
       )
      )
      (local.get $7)
     )
    )
    (call $_rlVertex2f
     (local.tee $6
      (f32.load offset=8
       (local.get $2)
      )
     )
     (local.get $9)
    )
    (call $_rlTexCoord2f
     (f32.div
      (f32.add
       (local.get $8)
       (f32.load offset=8
        (local.get $1)
       )
      )
      (local.get $5)
     )
     (f32.div
      (f32.load offset=4
       (local.get $1)
      )
      (local.get $7)
     )
    )
   )
  )
  (call $_rlVertex2f
   (local.get $6)
   (f32.const 0)
  )
  (call $_rlEnd)
  (call $_rlPopMatrix)
  (call $_rlDisableTexture)
 )
 (func $_DrawCircleV (; 537 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i64.store align=4
   (local.get $2)
   (i64.load align=4
    (local.get $0)
   )
  )
  (i32.store align=1
   (local.tee $0
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
   (i32.load align=1
    (local.get $1)
   )
  )
  (call $_DrawCircleSector
   (local.get $2)
   (local.get $0)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_DrawCircleSector (; 538 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 f32)
  (local $3 i32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (if
   (call $_rlCheckBufferLimit
    (i32.const 72)
   )
   (call $_rlglDraw)
  )
  (call $_GetShapesTexture
   (local.get $3)
  )
  (call $_rlEnableTexture
   (i32.load
    (local.get $3)
   )
  )
  (call $_rlBegin)
  (local.set $3
   (i32.load8_s
    (local.get $1)
   )
  )
  (local.set $8
   (i32.load8_s offset=1
    (local.get $1)
   )
  )
  (local.set $9
   (i32.load8_s offset=2
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load8_s offset=3
    (local.get $1)
   )
  )
  (local.set $5
   (f32.load
    (local.get $0)
   )
  )
  (local.set $6
   (f32.load offset=4
    (local.get $0)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (call $_rlColor4ub
    (local.get $3)
    (local.get $8)
    (local.get $9)
    (local.get $1)
   )
   (call $_rlTexCoord2f
    (f32.div
     (f32.load
      (i32.const 28808)
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 28104)
      )
     )
    )
    (f32.div
     (f32.load
      (i32.const 28812)
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 28108)
      )
     )
    )
   )
   (call $_rlVertex2f
    (local.get $5)
    (local.get $6)
   )
   (call $_rlTexCoord2f
    (f32.div
     (f32.load
      (i32.const 28808)
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 28104)
      )
     )
    )
    (f32.div
     (f32.add
      (f32.load
       (i32.const 28812)
      )
      (f32.load
       (i32.const 28820)
      )
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 28108)
      )
     )
    )
   )
   (call $_rlVertex2f
    (f32.add
     (f32.mul
      (f32.const 10)
      (call $_sinf
       (local.tee $2
        (f32.mul
         (local.get $4)
         (f32.const 0.01745329238474369)
        )
       )
      )
     )
     (local.get $5)
    )
    (f32.add
     (f32.mul
      (f32.const 10)
      (call $_cosf
       (local.get $2)
      )
     )
     (local.get $6)
    )
   )
   (call $_rlTexCoord2f
    (f32.div
     (f32.add
      (f32.load
       (i32.const 28808)
      )
      (f32.load
       (i32.const 28816)
      )
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 28104)
      )
     )
    )
    (f32.div
     (f32.add
      (f32.load
       (i32.const 28812)
      )
      (f32.load
       (i32.const 28820)
      )
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 28108)
      )
     )
    )
   )
   (call $_rlVertex2f
    (f32.add
     (f32.mul
      (f32.const 10)
      (call $_sinf
       (local.tee $2
        (f32.mul
         (f32.add
          (f32.const 10)
          (local.get $4)
         )
         (f32.const 0.01745329238474369)
        )
       )
      )
     )
     (local.get $5)
    )
    (f32.add
     (f32.mul
      (f32.const 10)
      (call $_cosf
       (local.get $2)
      )
     )
     (local.get $6)
    )
   )
   (call $_rlTexCoord2f
    (f32.div
     (f32.add
      (f32.load
       (i32.const 28808)
      )
      (f32.load
       (i32.const 28816)
      )
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 28104)
      )
     )
    )
    (f32.div
     (f32.load
      (i32.const 28812)
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 28108)
      )
     )
    )
   )
   (call $_rlVertex2f
    (f32.add
     (f32.mul
      (f32.const 10)
      (call $_sinf
       (local.tee $2
        (f32.mul
         (local.tee $4
          (f32.add
           (f32.const 20)
           (local.get $4)
          )
         )
         (f32.const 0.01745329238474369)
        )
       )
      )
     )
     (local.get $5)
    )
    (f32.add
     (f32.mul
      (f32.const 10)
      (call $_cosf
       (local.get $2)
      )
     )
     (local.get $6)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 18)
    )
   )
  )
  (call $_rlEnd)
  (call $_rlDisableTexture)
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_GetShapesTexture (; 539 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 80)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 80)
   )
  )
  (if
   (i32.load
    (i32.const 28100)
   )
   (block
    (i64.store align=4
     (local.get $0)
     (i64.load align=4
      (i32.const 28100)
     )
    )
    (i64.store offset=8 align=4
     (local.get $0)
     (i64.load align=4
      (i32.const 28108)
     )
    )
    (i32.store offset=16
     (local.get $0)
     (i32.load
      (i32.const 28116)
     )
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (call $_GetFontDefault
   (local.tee $2
    (i32.add
     (local.get $1)
     (i32.const 36)
    )
   )
  )
  (i64.store align=4
   (i32.const 28100)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 28108)
   (i64.load offset=16 align=4
    (local.get $2)
   )
  )
  (i32.store
   (i32.const 28116)
   (i32.load offset=24
    (local.get $2)
   )
  )
  (call $_GetFontDefault
   (local.get $1)
  )
  (local.set $4
   (f32.add
    (f32.load
     (i32.add
      (local.tee $1
       (i32.load offset=28
        (local.get $1)
       )
      )
      (i32.const 1524)
     )
    )
    (f32.const 1)
   )
  )
  (local.set $5
   (f32.add
    (f32.load
     (i32.add
      (local.get $1)
      (i32.const 1528)
     )
    )
    (f32.const -2)
   )
  )
  (local.set $6
   (f32.add
    (f32.load
     (i32.add
      (local.get $1)
      (i32.const 1532)
     )
    )
    (f32.const -2)
   )
  )
  (f32.store
   (i32.const 28808)
   (f32.add
    (f32.load
     (i32.add
      (local.get $1)
      (i32.const 1520)
     )
    )
    (f32.const 1)
   )
  )
  (f32.store
   (i32.const 28812)
   (local.get $4)
  )
  (f32.store
   (i32.const 28816)
   (local.get $5)
  )
  (f32.store
   (i32.const 28820)
   (local.get $6)
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 28100)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 28108)
   )
  )
  (i32.store offset=16
   (local.get $0)
   (i32.load
    (i32.const 28116)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_IsKeyPressed (; 540 ;) (; has Stack IR ;) (result i32)
  (local $0 i32)
  (i32.and
   (i32.ne
    (local.tee $0
     (i32.load8_s
      (i32.const 22897)
     )
    )
    (i32.load8_s
     (i32.const 24433)
    )
   )
   (i32.eq
    (local.get $0)
    (i32.const 1)
   )
  )
 )
 (func $_DrawRectangle (; 541 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 48)
   )
  )
  (f32.store offset=8
   (local.get $5)
   (f32.convert_i32_s
    (local.get $0)
   )
  )
  (f32.store offset=12
   (local.get $5)
   (f32.convert_i32_s
    (local.get $1)
   )
  )
  (f32.store
   (local.get $5)
   (f32.convert_i32_s
    (local.get $2)
   )
  )
  (f32.store offset=4
   (local.get $5)
   (f32.convert_i32_s
    (local.get $3)
   )
  )
  (i64.store align=4
   (local.tee $0
    (i32.add
     (local.get $5)
     (i32.const 16)
    )
   )
   (i64.load offset=8 align=4
    (local.get $5)
   )
  )
  (i64.store align=4
   (local.tee $1
    (i32.add
     (local.get $5)
     (i32.const 24)
    )
   )
   (i64.load align=4
    (local.get $5)
   )
  )
  (i32.store align=1
   (local.tee $2
    (i32.add
     (local.get $5)
     (i32.const 32)
    )
   )
   (i32.load align=1
    (local.get $4)
   )
  )
  (call $_DrawRectangleV
   (local.get $0)
   (local.get $1)
   (local.get $2)
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $_DrawRectangleV (; 542 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 64)
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.load
    (local.get $0)
   )
  )
  (i32.store offset=12
   (local.get $3)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (i32.store offset=16
   (local.get $3)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store offset=20
   (local.get $3)
   (i32.load offset=4
    (local.get $1)
   )
  )
  (f32.store
   (local.get $3)
   (f32.const 0)
  )
  (f32.store offset=4
   (local.get $3)
   (f32.const 0)
  )
  (i64.store align=4
   (local.tee $0
    (i32.add
     (local.get $3)
     (i32.const 24)
    )
   )
   (i64.load offset=8 align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load offset=16 align=4
    (local.get $3)
   )
  )
  (i64.store align=4
   (local.tee $1
    (i32.add
     (local.get $3)
     (i32.const 40)
    )
   )
   (i64.load align=4
    (local.get $3)
   )
  )
  (i32.store align=1
   (local.tee $3
    (i32.add
     (local.get $3)
     (i32.const 48)
    )
   )
   (i32.load align=1
    (local.get $2)
   )
  )
  (call $_DrawRectanglePro
   (local.get $0)
   (local.get $1)
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_DrawRectanglePro (; 543 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 f32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (call $_GetShapesTexture
   (local.get $3)
  )
  (call $_rlEnableTexture
   (i32.load
    (local.get $3)
   )
  )
  (call $_rlPushMatrix)
  (call $_rlTranslatef
   (f32.load
    (local.get $0)
   )
   (f32.load offset=4
    (local.get $0)
   )
  )
  (call $_rlRotatef)
  (call $_rlTranslatef
   (f32.neg
    (f32.load
     (local.get $1)
    )
   )
   (f32.neg
    (f32.load offset=4
     (local.get $1)
    )
   )
  )
  (call $_rlBegin)
  (call $_rlColor4ub
   (i32.load8_s
    (local.get $2)
   )
   (i32.load8_s offset=1
    (local.get $2)
   )
   (i32.load8_s offset=2
    (local.get $2)
   )
   (i32.load8_s offset=3
    (local.get $2)
   )
  )
  (call $_rlTexCoord2f
   (f32.div
    (f32.load
     (i32.const 28808)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 28104)
     )
    )
   )
   (f32.div
    (f32.load
     (i32.const 28812)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 28108)
     )
    )
   )
  )
  (call $_rlVertex2f
   (f32.const 0)
   (f32.const 0)
  )
  (call $_rlTexCoord2f
   (f32.div
    (f32.load
     (i32.const 28808)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 28104)
     )
    )
   )
   (f32.div
    (f32.add
     (f32.load
      (i32.const 28812)
     )
     (f32.load
      (i32.const 28820)
     )
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 28108)
     )
    )
   )
  )
  (call $_rlVertex2f
   (f32.const 0)
   (local.tee $5
    (f32.load offset=12
     (local.get $0)
    )
   )
  )
  (call $_rlTexCoord2f
   (f32.div
    (f32.add
     (f32.load
      (i32.const 28808)
     )
     (f32.load
      (i32.const 28816)
     )
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 28104)
     )
    )
   )
   (f32.div
    (f32.add
     (f32.load
      (i32.const 28812)
     )
     (f32.load
      (i32.const 28820)
     )
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 28108)
     )
    )
   )
  )
  (call $_rlVertex2f
   (local.tee $6
    (f32.load offset=8
     (local.get $0)
    )
   )
   (local.get $5)
  )
  (call $_rlTexCoord2f
   (f32.div
    (f32.add
     (f32.load
      (i32.const 28808)
     )
     (f32.load
      (i32.const 28816)
     )
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 28104)
     )
    )
   )
   (f32.div
    (f32.load
     (i32.const 28812)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 28108)
     )
    )
   )
  )
  (call $_rlVertex2f
   (local.get $6)
   (f32.const 0)
  )
  (call $_rlEnd)
  (call $_rlPopMatrix)
  (call $_rlDisableTexture)
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_DrawRectangleLines (; 544 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store align=1
   (local.get $1)
   (i32.load align=1
    (local.get $0)
   )
  )
  (call $_DrawRectangle
   (i32.const 150)
   (i32.const 200)
   (i32.const 500)
   (i32.const 1)
   (local.get $1)
  )
  (i32.store align=1
   (local.get $1)
   (i32.load align=1
    (local.get $0)
   )
  )
  (call $_DrawRectangle
   (i32.const 649)
   (i32.const 201)
   (i32.const 1)
   (i32.const 58)
   (local.get $1)
  )
  (i32.store align=1
   (local.get $1)
   (i32.load align=1
    (local.get $0)
   )
  )
  (call $_DrawRectangle
   (i32.const 150)
   (i32.const 259)
   (i32.const 500)
   (i32.const 1)
   (local.get $1)
  )
  (i32.store align=1
   (local.get $1)
   (i32.load align=1
    (local.get $0)
   )
  )
  (call $_DrawRectangle
   (i32.const 150)
   (i32.const 201)
   (i32.const 1)
   (i32.const 58)
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_emscripten_get_global_libc (; 545 ;) (; has Stack IR ;) (result i32)
  (i32.const 28120)
 )
 (func $___em_js__initPthreadsJS (; 546 ;) (; has Stack IR ;) (result i32)
  (i32.const 16589)
 )
 (func $___emscripten_pthread_data_constructor (; 547 ;) (; has Stack IR ;)
  (call $_initPthreadsJS)
  (i32.store offset=188
   (global.get $__pthread_ptr)
   (i32.const 28160)
  )
 )
 (func $___stdio_close (; 548 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (i32.load offset=60
    (local.get $0)
   )
  )
  (local.set $0
   (call $___syscall_ret
    (call $___syscall6
     (i32.const 6)
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
  (local.get $0)
 )
 (func $___stdio_write (; 549 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $3)
   (local.tee $4
    (i32.load offset=28
     (local.get $0)
    )
   )
  )
  (i32.store offset=4
   (local.get $3)
   (local.tee $5
    (i32.sub
     (i32.load offset=20
      (local.get $0)
     )
     (local.get $4)
    )
   )
  )
  (i32.store offset=8
   (local.get $3)
   (local.get $1)
  )
  (i32.store offset=12
   (local.get $3)
   (local.get $2)
  )
  (local.set $1
   (local.get $3)
  )
  (local.set $4
   (i32.const 2)
  )
  (local.set $5
   (i32.add
    (local.get $2)
    (local.get $5)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (loop $while-in
     (if
      (i32.ne
       (local.get $5)
       (local.tee $3
        (if (result i32)
         (i32.and
          (call $___wasi_fd_write
           (i32.load offset=60
            (local.get $0)
           )
           (local.get $1)
           (local.get $4)
           (local.get $6)
          )
          (i32.const 65535)
         )
         (block (result i32)
          (i32.store
           (local.get $6)
           (i32.const -1)
          )
          (i32.const -1)
         )
         (i32.load
          (local.get $6)
         )
        )
       )
      )
      (block
       (br_if $__rjti$1
        (i32.lt_s
         (local.get $3)
         (i32.const 0)
        )
       )
       (i32.store
        (local.tee $1
         (select
          (i32.add
           (local.get $1)
           (i32.const 8)
          )
          (local.get $1)
          (local.tee $8
           (i32.gt_u
            (local.get $3)
            (local.tee $7
             (i32.load offset=4
              (local.get $1)
             )
            )
           )
          )
         )
        )
        (i32.add
         (local.tee $7
          (i32.sub
           (local.get $3)
           (select
            (local.get $7)
            (i32.const 0)
            (local.get $8)
           )
          )
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store offset=4
        (local.get $1)
        (i32.sub
         (i32.load offset=4
          (local.get $1)
         )
         (local.get $7)
        )
       )
       (local.set $4
        (i32.add
         (i32.shr_s
          (i32.shl
           (local.get $8)
           (i32.const 31)
          )
          (i32.const 31)
         )
         (local.get $4)
        )
       )
       (local.set $5
        (i32.sub
         (local.get $5)
         (local.get $3)
        )
       )
       (br $while-in)
      )
     )
    )
    (i32.store offset=16
     (local.get $0)
     (i32.add
      (local.tee $1
       (i32.load offset=44
        (local.get $0)
       )
      )
      (i32.load offset=48
       (local.get $0)
      )
     )
    )
    (i32.store offset=28
     (local.get $0)
     (local.get $1)
    )
    (i32.store offset=20
     (local.get $0)
     (local.get $1)
    )
    (br $__rjto$1)
   )
   (i32.store offset=16
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=28
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=20
    (local.get $0)
    (i32.const 0)
   )
   (i32.store
    (local.get $0)
    (i32.or
     (i32.load
      (local.get $0)
     )
     (i32.const 32)
    )
   )
   (local.set $2
    (if (result i32)
     (i32.eq
      (local.get $4)
      (i32.const 2)
     )
     (i32.const 0)
     (i32.sub
      (local.get $2)
      (i32.load offset=4
       (local.get $1)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $9)
  )
  (local.get $2)
 )
 (func $___stdio_seek (; 550 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (param $2 i32) (result i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $4)
     (i32.const 8)
    )
   )
   (i32.load offset=60
    (local.get $0)
   )
  )
  (i64.store32 offset=4
   (local.get $3)
   (i64.shr_u
    (local.get $1)
    (i64.const 32)
   )
  )
  (i64.store32 offset=8
   (local.get $3)
   (local.get $1)
  )
  (i32.store offset=12
   (local.get $3)
   (local.get $4)
  )
  (i32.store offset=16
   (local.get $3)
   (local.get $2)
  )
  (local.set $1
   (if (result i64)
    (i32.lt_s
     (call $___syscall_ret
      (call $___syscall140
       (i32.const 140)
       (local.get $3)
      )
     )
     (i32.const 0)
    )
    (block (result i64)
     (i64.store
      (local.get $4)
      (i64.const -1)
     )
     (i64.const -1)
    )
    (i64.load
     (local.get $4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $1)
 )
 (func $___syscall_ret (; 551 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.gt_u
    (local.get $0)
    (i32.const -4096)
   )
   (block
    (local.set $0
     (i32.sub
      (i32.const 0)
      (local.get $0)
     )
    )
    (i32.store
     (call $___errno_location)
     (local.get $0)
    )
    (local.set $0
     (i32.const -1)
    )
   )
  )
  (local.get $0)
 )
 (func $___errno_location (; 552 ;) (; has Stack IR ;) (result i32)
  (i32.sub
   (global.get $__pthread_ptr)
   (i32.const -64)
  )
 )
 (func $___stdio_read (; 553 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (i32.store
   (local.get $3)
   (local.get $1)
  )
  (i32.store offset=4
   (local.get $3)
   (i32.sub
    (local.get $2)
    (i32.ne
     (local.tee $4
      (i32.load offset=48
       (local.get $0)
      )
     )
     (i32.const 0)
    )
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.load offset=44
    (local.get $0)
   )
  )
  (i32.store offset=12
   (local.get $3)
   (local.get $4)
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 16)
    )
   )
   (i32.load offset=60
    (local.get $0)
   )
  )
  (i32.store offset=4
   (local.get $4)
   (local.get $3)
  )
  (i32.store offset=8
   (local.get $4)
   (i32.const 2)
  )
  (if
   (i32.lt_s
    (local.tee $4
     (call $___syscall_ret
      (call $___syscall145
       (i32.const 145)
       (local.get $4)
      )
     )
    )
    (i32.const 1)
   )
   (block
    (i32.store
     (local.get $0)
     (i32.or
      (i32.load
       (local.get $0)
      )
      (i32.xor
       (i32.and
        (local.get $4)
        (i32.const 48)
       )
       (i32.const 16)
      )
     )
    )
    (local.set $2
     (local.get $4)
    )
   )
   (if
    (i32.gt_u
     (local.get $4)
     (local.tee $6
      (i32.load offset=4
       (local.get $3)
      )
     )
    )
    (block
     (i32.store offset=4
      (local.get $0)
      (local.tee $3
       (i32.load offset=44
        (local.get $0)
       )
      )
     )
     (i32.store offset=8
      (local.get $0)
      (i32.add
       (local.get $3)
       (i32.sub
        (local.get $4)
        (local.get $6)
       )
      )
     )
     (if
      (i32.load offset=48
       (local.get $0)
      )
      (block
       (i32.store offset=4
        (local.get $0)
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (i32.store8
        (i32.add
         (local.get $1)
         (i32.add
          (local.get $2)
          (i32.const -1)
         )
        )
        (i32.load8_s
         (local.get $3)
        )
       )
      )
     )
    )
    (local.set $2
     (local.get $4)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $2)
 )
 (func $___emscripten_stdout_close (; 554 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.const 0)
 )
 (func $___emscripten_stdout_seek (; 555 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (param $2 i32) (result i64)
  (i64.const 0)
 )
 (func $_strcmp (; 556 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $0
   (if (result i32)
    (i32.or
     (i32.ne
      (local.tee $2
       (i32.load8_s
        (local.get $0)
       )
      )
      (local.tee $3
       (i32.load8_s
        (local.get $1)
       )
      )
     )
     (i32.eqz
      (local.get $2)
     )
    )
    (block (result i32)
     (local.set $1
      (local.get $2)
     )
     (local.get $3)
    )
    (loop $while-in (result i32)
     (if (result i32)
      (i32.or
       (i32.ne
        (local.tee $2
         (i32.load8_s
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
         )
        )
        (local.tee $3
         (i32.load8_s
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
         )
        )
       )
       (i32.eqz
        (local.get $2)
       )
      )
      (block (result i32)
       (local.set $1
        (local.get $2)
       )
       (local.get $3)
      )
      (br $while-in)
     )
    )
   )
  )
  (i32.sub
   (i32.and
    (local.get $1)
    (i32.const 255)
   )
   (i32.and
    (local.get $0)
    (i32.const 255)
   )
  )
 )
 (func $_memcmp (; 557 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (if (result i32)
   (local.get $2)
   (block $label$break$L1 (result i32)
    (loop $while-in
     (if
      (i32.eq
       (local.tee $3
        (i32.load8_s
         (local.get $0)
        )
       )
       (local.tee $4
        (i32.load8_s
         (local.get $1)
        )
       )
      )
      (block
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (drop
        (br_if $label$break$L1
         (i32.const 0)
         (i32.eqz
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const -1)
           )
          )
         )
        )
       )
       (br $while-in)
      )
     )
    )
    (i32.sub
     (i32.and
      (local.get $3)
      (i32.const 255)
     )
     (i32.and
      (local.get $4)
      (i32.const 255)
     )
    )
   )
   (i32.const 0)
  )
 )
 (func $_isdigit (; 558 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.lt_u
   (i32.add
    (local.get $0)
    (i32.const -48)
   )
   (i32.const 10)
  )
 )
 (func $_vsnprintf (; 559 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 160)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 160)
   )
  )
  (local.set $5
   (i32.add
    (local.get $4)
    (i32.const 144)
   )
  )
  (drop
   (call $_memcpy
    (local.get $4)
    (i32.const 8800)
    (i32.const 144)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.le_u
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
      (i32.const 2147483646)
     )
    )
    (local.set $0
     (if (result i32)
      (local.get $1)
      (block (result i32)
       (i32.store
        (call $___errno_location)
        (i32.const 75)
       )
       (i32.const -1)
      )
      (block
       (local.set $1
        (i32.const 1)
       )
       (local.set $0
        (local.get $5)
       )
       (br $__rjti$0)
      )
     )
    )
    (br $__rjto$0)
   )
   (i32.store offset=48
    (local.get $4)
    (local.tee $1
     (select
      (local.tee $5
       (i32.sub
        (i32.const -2)
        (local.get $0)
       )
      )
      (local.get $1)
      (i32.gt_u
       (local.get $1)
       (local.get $5)
      )
     )
    )
   )
   (i32.store offset=20
    (local.get $4)
    (local.get $0)
   )
   (i32.store offset=44
    (local.get $4)
    (local.get $0)
   )
   (i32.store offset=16
    (local.get $4)
    (local.tee $0
     (i32.add
      (local.get $0)
      (local.get $1)
     )
    )
   )
   (i32.store offset=28
    (local.get $4)
    (local.get $0)
   )
   (local.set $0
    (call $_vfprintf
     (local.get $4)
     (local.get $2)
     (local.get $3)
    )
   )
   (if
    (local.get $1)
    (i32.store8
     (i32.add
      (local.tee $1
       (i32.load offset=20
        (local.get $4)
       )
      )
      (i32.shr_s
       (i32.shl
        (i32.eq
         (local.get $1)
         (i32.load offset=16
          (local.get $4)
         )
        )
        (i32.const 31)
       )
       (i32.const 31)
      )
     )
     (i32.const 0)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $_vfprintf (; 560 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (call $___vfprintf_internal
   (local.get $0)
   (local.get $1)
   (local.get $2)
  )
 )
 (func $_fmt_fp (; 561 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 f64)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i64)
  (local $27 i64)
  (local $28 i32)
  (local $29 i64)
  (local.set $28
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 560)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 560)
   )
  )
  (local.set $8
   (i32.add
    (local.get $11)
    (i32.const 32)
   )
  )
  (local.set $21
   (local.get $11)
  )
  (i32.store
   (local.tee $16
    (i32.add
     (local.get $11)
     (i32.const 536)
    )
   )
   (i32.const 0)
  )
  (local.set $18
   (i32.add
    (local.tee $6
     (i32.add
      (local.get $11)
      (i32.const 540)
     )
    )
    (i32.const 12)
   )
  )
  (local.set $23
   (if (result i32)
    (i64.lt_s
     (local.tee $26
      (i64.reinterpret_f64
       (local.get $1)
      )
     )
     (i64.const 0)
    )
    (block (result i32)
     (local.set $26
      (i64.reinterpret_f64
       (local.tee $1
        (f64.neg
         (local.get $1)
        )
       )
      )
     )
     (local.set $22
      (i32.const 16643)
     )
     (i32.const 1)
    )
    (block (result i32)
     (local.set $22
      (select
       (i32.const 16646)
       (select
        (i32.const 16649)
        (i32.const 16644)
        (i32.and
         (local.get $4)
         (i32.const 1)
        )
       )
       (i32.and
        (local.get $4)
        (i32.const 2048)
       )
      )
     )
     (i32.ne
      (i32.and
       (local.get $4)
       (i32.const 2049)
      )
      (i32.const 0)
     )
    )
   )
  )
  (local.set $0
   (if (result i32)
    (i64.eq
     (i64.and
      (local.get $26)
      (i64.const 9218868437227405312)
     )
     (i64.const 9218868437227405312)
    )
    (block (result i32)
     (local.set $3
      (select
       (select
        (i32.const 16670)
        (i32.const 16674)
        (local.tee $3
         (i32.ne
          (i32.and
           (local.get $5)
           (i32.const 32)
          )
          (i32.const 0)
         )
        )
       )
       (select
        (i32.const 16662)
        (i32.const 16666)
        (local.get $3)
       )
       (f64.ne
        (local.get $1)
        (local.get $1)
       )
      )
     )
     (call $_pad_660
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.tee $5
       (i32.add
        (local.get $23)
        (i32.const 3)
       )
      )
      (i32.and
       (local.get $4)
       (i32.const -65537)
      )
     )
     (call $_out
      (local.get $0)
      (local.get $22)
      (local.get $23)
     )
     (call $_out
      (local.get $0)
      (local.get $3)
      (i32.const 3)
     )
     (call $_pad_660
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.get $5)
      (i32.xor
       (local.get $4)
       (i32.const 8192)
      )
     )
     (local.get $5)
    )
    (block $do-once (result i32)
     (if
      (local.tee $7
       (f64.ne
        (local.tee $1
         (f64.mul
          (call $_frexp
           (local.get $1)
           (local.get $16)
          )
          (f64.const 2)
         )
        )
        (f64.const 0)
       )
      )
      (i32.store
       (local.get $16)
       (i32.add
        (i32.load
         (local.get $16)
        )
        (i32.const -1)
       )
      )
     )
     (if
      (i32.eq
       (local.tee $24
        (i32.or
         (local.get $5)
         (i32.const 32)
        )
       )
       (i32.const 97)
      )
      (block
       (local.set $9
        (select
         (i32.add
          (local.get $22)
          (i32.const 9)
         )
         (local.get $22)
         (local.tee $10
          (i32.and
           (local.get $5)
           (i32.const 32)
          )
         )
        )
       )
       (if
        (i32.eqz
         (i32.or
          (i32.eqz
           (local.tee $7
            (i32.sub
             (i32.const 12)
             (local.get $3)
            )
           )
          )
          (i32.gt_u
           (local.get $3)
           (i32.const 11)
          )
         )
        )
        (block
         (local.set $15
          (f64.const 8)
         )
         (loop $while-in
          (local.set $15
           (f64.mul
            (local.get $15)
            (f64.const 16)
           )
          )
          (br_if $while-in
           (local.tee $7
            (i32.add
             (local.get $7)
             (i32.const -1)
            )
           )
          )
         )
         (local.set $1
          (if (result f64)
           (i32.eq
            (i32.load8_s
             (local.get $9)
            )
            (i32.const 45)
           )
           (f64.neg
            (f64.add
             (local.get $15)
             (f64.sub
              (f64.neg
               (local.get $1)
              )
              (local.get $15)
             )
            )
           )
           (f64.sub
            (f64.add
             (local.get $1)
             (local.get $15)
            )
            (local.get $15)
           )
          )
         )
        )
       )
       (if
        (i32.eq
         (local.get $18)
         (local.tee $7
          (call $_fmt_u
           (i64.extend_i32_s
            (select
             (i32.sub
              (i32.const 0)
              (local.tee $8
               (i32.load
                (local.get $16)
               )
              )
             )
             (local.get $8)
             (i32.lt_s
              (local.get $8)
              (i32.const 0)
             )
            )
           )
           (local.get $18)
          )
         )
        )
        (i32.store8
         (local.tee $7
          (i32.add
           (local.get $6)
           (i32.const 11)
          )
         )
         (i32.const 48)
        )
       )
       (local.set $14
        (i32.or
         (local.get $23)
         (i32.const 2)
        )
       )
       (i32.store8
        (i32.add
         (local.get $7)
         (i32.const -1)
        )
        (i32.add
         (i32.and
          (i32.shr_s
           (local.get $8)
           (i32.const 31)
          )
          (i32.const 2)
         )
         (i32.const 43)
        )
       )
       (i32.store8
        (local.tee $12
         (i32.add
          (local.get $7)
          (i32.const -2)
         )
        )
        (i32.add
         (local.get $5)
         (i32.const 15)
        )
       )
       (local.set $8
        (i32.lt_s
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.eqz
         (i32.and
          (local.get $4)
          (i32.const 8)
         )
        )
       )
       (local.set $5
        (local.get $11)
       )
       (loop $while-in3
        (i32.store8
         (local.get $5)
         (i32.or
          (local.get $10)
          (i32.load8_u
           (i32.add
            (local.tee $7
             (i32.trunc_f64_s
              (local.get $1)
             )
            )
            (i32.const 8208)
           )
          )
         )
        )
        (local.set $1
         (f64.mul
          (f64.sub
           (local.get $1)
           (f64.convert_i32_s
            (local.get $7)
           )
          )
          (f64.const 16)
         )
        )
        (local.set $5
         (if (result i32)
          (i32.eq
           (i32.sub
            (local.tee $7
             (i32.add
              (local.get $5)
              (i32.const 1)
             )
            )
            (local.get $21)
           )
           (i32.const 1)
          )
          (if (result i32)
           (i32.and
            (i32.and
             (local.get $8)
             (f64.eq
              (local.get $1)
              (f64.const 0)
             )
            )
            (local.get $6)
           )
           (local.get $7)
           (block (result i32)
            (i32.store8
             (local.get $7)
             (i32.const 46)
            )
            (i32.add
             (local.get $5)
             (i32.const 2)
            )
           )
          )
          (local.get $7)
         )
        )
        (br_if $while-in3
         (f64.ne
          (local.get $1)
          (f64.const 0)
         )
        )
       )
       (local.set $3
        (block $__rjto$0 (result i32)
         (if
          (i32.eqz
           (i32.or
            (i32.eqz
             (local.get $3)
            )
            (i32.ge_s
             (i32.add
              (local.get $5)
              (i32.sub
               (i32.const -2)
               (local.get $21)
              )
             )
             (local.get $3)
            )
           )
          )
          (block
           (local.set $8
            (i32.sub
             (i32.add
              (local.get $18)
              (i32.add
               (local.get $3)
               (i32.const 2)
              )
             )
             (local.get $12)
            )
           )
           (br $__rjto$0
            (local.get $12)
           )
          )
         )
         (local.set $8
          (i32.add
           (local.get $5)
           (i32.sub
            (i32.sub
             (local.get $18)
             (local.get $21)
            )
            (local.get $12)
           )
          )
         )
         (local.get $12)
        )
       )
       (call $_pad_660
        (local.get $0)
        (i32.const 32)
        (local.get $2)
        (local.tee $7
         (i32.add
          (local.get $8)
          (local.get $14)
         )
        )
        (local.get $4)
       )
       (call $_out
        (local.get $0)
        (local.get $9)
        (local.get $14)
       )
       (call $_pad_660
        (local.get $0)
        (i32.const 48)
        (local.get $2)
        (local.get $7)
        (i32.xor
         (local.get $4)
         (i32.const 65536)
        )
       )
       (call $_out
        (local.get $0)
        (local.get $11)
        (local.tee $5
         (i32.sub
          (local.get $5)
          (local.get $21)
         )
        )
       )
       (call $_pad_660
        (local.get $0)
        (i32.const 48)
        (i32.sub
         (local.get $8)
         (i32.add
          (local.get $5)
          (local.tee $3
           (i32.sub
            (local.get $18)
            (local.get $3)
           )
          )
         )
        )
        (i32.const 0)
        (i32.const 0)
       )
       (call $_out
        (local.get $0)
        (local.get $12)
        (local.get $3)
       )
       (call $_pad_660
        (local.get $0)
        (i32.const 32)
        (local.get $2)
        (local.get $7)
        (i32.xor
         (local.get $4)
         (i32.const 8192)
        )
       )
       (br $do-once
        (local.get $7)
       )
      )
     )
     (if
      (local.get $7)
      (block
       (i32.store
        (local.get $16)
        (local.tee $7
         (i32.add
          (i32.load
           (local.get $16)
          )
          (i32.const -28)
         )
        )
       )
       (local.set $1
        (f64.mul
         (local.get $1)
         (f64.const 268435456)
        )
       )
      )
      (local.set $7
       (i32.load
        (local.get $16)
       )
      )
     )
     (local.set $6
      (local.tee $14
       (select
        (local.get $8)
        (i32.add
         (local.get $8)
         (i32.const 288)
        )
        (i32.lt_s
         (local.get $7)
         (i32.const 0)
        )
       )
      )
     )
     (loop $while-in5
      (i32.store
       (local.get $6)
       (local.tee $8
        (i32.trunc_f64_u
         (local.get $1)
        )
       )
      )
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 4)
       )
      )
      (br_if $while-in5
       (f64.ne
        (local.tee $1
         (f64.mul
          (f64.sub
           (local.get $1)
           (f64.convert_i32_u
            (local.get $8)
           )
          )
          (f64.const 1e9)
         )
        )
        (f64.const 0)
       )
      )
     )
     (if
      (i32.gt_s
       (local.get $7)
       (i32.const 0)
      )
      (block
       (local.set $8
        (local.get $7)
       )
       (local.set $7
        (local.get $14)
       )
       (loop $while-in7
        (local.set $9
         (select
          (local.get $8)
          (i32.const 29)
          (i32.lt_s
           (local.get $8)
           (i32.const 29)
          )
         )
        )
        (if
         (i32.ge_u
          (local.tee $8
           (i32.add
            (local.get $6)
            (i32.const -4)
           )
          )
          (local.get $7)
         )
         (block
          (local.set $29
           (i64.extend_i32_u
            (local.get $9)
           )
          )
          (local.set $10
           (i32.const 0)
          )
          (loop $while-in9
           (local.set $27
            (i64.div_u
             (local.tee $26
              (i64.add
               (i64.extend_i32_u
                (local.get $10)
               )
               (i64.shl
                (i64.extend_i32_u
                 (i32.load
                  (local.get $8)
                 )
                )
                (local.get $29)
               )
              )
             )
             (i64.const 1000000000)
            )
           )
           (i64.store32
            (local.get $8)
            (i64.sub
             (local.get $26)
             (i64.mul
              (local.get $27)
              (i64.const 1000000000)
             )
            )
           )
           (local.set $10
            (i32.wrap_i64
             (local.get $27)
            )
           )
           (br_if $while-in9
            (i32.ge_u
             (local.tee $8
              (i32.add
               (local.get $8)
               (i32.const -4)
              )
             )
             (local.get $7)
            )
           )
          )
          (if
           (local.get $10)
           (i32.store
            (local.tee $7
             (i32.add
              (local.get $7)
              (i32.const -4)
             )
            )
            (local.get $10)
           )
          )
         )
        )
        (if
         (i32.gt_u
          (local.get $6)
          (local.get $7)
         )
         (block $label$break$L57
          (local.set $6
           (loop $while-in12 (result i32)
            (br_if $label$break$L57
             (i32.load
              (local.tee $8
               (i32.add
                (local.get $6)
                (i32.const -4)
               )
              )
             )
            )
            (if (result i32)
             (i32.gt_u
              (local.get $8)
              (local.get $7)
             )
             (block
              (local.set $6
               (local.get $8)
              )
              (br $while-in12)
             )
             (local.get $8)
            )
           )
          )
         )
        )
        (i32.store
         (local.get $16)
         (local.tee $8
          (i32.sub
           (i32.load
            (local.get $16)
           )
           (local.get $9)
          )
         )
        )
        (br_if $while-in7
         (i32.gt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
      (block
       (local.set $8
        (local.get $7)
       )
       (local.set $7
        (local.get $14)
       )
      )
     )
     (local.set $13
      (select
       (i32.const 6)
       (local.get $3)
       (i32.lt_s
        (local.get $3)
        (i32.const 0)
       )
      )
     )
     (local.set $12
      (local.get $14)
     )
     (if
      (i32.lt_u
       (local.tee $3
        (if (result i32)
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
         (block (result i32)
          (local.set $19
           (i32.add
            (i32.div_s
             (i32.add
              (local.get $13)
              (i32.const 25)
             )
             (i32.const 9)
            )
            (i32.const 1)
           )
          )
          (local.set $25
           (i32.eq
            (local.get $24)
            (i32.const 102)
           )
          )
          (local.set $3
           (local.get $6)
          )
          (loop $while-in14 (result i32)
           (local.set $20
            (select
             (local.tee $6
              (i32.sub
               (i32.const 0)
               (local.get $8)
              )
             )
             (i32.const 9)
             (i32.lt_s
              (local.get $6)
              (i32.const 9)
             )
            )
           )
           (if
            (i32.lt_u
             (local.get $7)
             (local.get $3)
            )
            (block
             (local.set $17
              (i32.add
               (i32.shl
                (i32.const 1)
                (local.get $20)
               )
               (i32.const -1)
              )
             )
             (local.set $9
              (i32.shr_u
               (i32.const 1000000000)
               (local.get $20)
              )
             )
             (local.set $8
              (i32.const 0)
             )
             (local.set $6
              (local.get $7)
             )
             (loop $while-in16
              (i32.store
               (local.get $6)
               (i32.add
                (local.get $8)
                (i32.shr_u
                 (local.tee $10
                  (i32.load
                   (local.get $6)
                  )
                 )
                 (local.get $20)
                )
               )
              )
              (local.set $8
               (i32.mul
                (i32.and
                 (local.get $10)
                 (local.get $17)
                )
                (local.get $9)
               )
              )
              (br_if $while-in16
               (i32.lt_u
                (local.tee $6
                 (i32.add
                  (local.get $6)
                  (i32.const 4)
                 )
                )
                (local.get $3)
               )
              )
             )
             (local.set $7
              (select
               (local.get $7)
               (i32.add
                (local.get $7)
                (i32.const 4)
               )
               (i32.load
                (local.get $7)
               )
              )
             )
             (if
              (local.get $8)
              (block
               (i32.store
                (local.get $3)
                (local.get $8)
               )
               (local.set $3
                (i32.add
                 (local.get $3)
                 (i32.const 4)
                )
               )
              )
             )
            )
            (local.set $7
             (select
              (local.get $7)
              (i32.add
               (local.get $7)
               (i32.const 4)
              )
              (i32.load
               (local.get $7)
              )
             )
            )
           )
           (local.set $10
            (select
             (i32.add
              (local.tee $6
               (select
                (local.get $14)
                (local.get $7)
                (local.get $25)
               )
              )
              (i32.shl
               (local.get $19)
               (i32.const 2)
              )
             )
             (local.get $3)
             (i32.gt_s
              (i32.shr_s
               (i32.sub
                (local.get $3)
                (local.get $6)
               )
               (i32.const 2)
              )
              (local.get $19)
             )
            )
           )
           (i32.store
            (local.get $16)
            (local.tee $8
             (i32.add
              (i32.load
               (local.get $16)
              )
              (local.get $20)
             )
            )
           )
           (if (result i32)
            (i32.lt_s
             (local.get $8)
             (i32.const 0)
            )
            (block
             (local.set $3
              (local.get $10)
             )
             (br $while-in14)
            )
            (local.get $7)
           )
          )
         )
         (block (result i32)
          (local.set $10
           (local.get $6)
          )
          (local.get $7)
         )
        )
       )
       (local.get $10)
      )
      (block
       (local.set $7
        (i32.mul
         (i32.shr_s
          (i32.sub
           (local.get $12)
           (local.get $3)
          )
          (i32.const 2)
         )
         (i32.const 9)
        )
       )
       (if
        (i32.ge_u
         (local.tee $8
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 10)
        )
        (block
         (local.set $6
          (i32.const 10)
         )
         (loop $while-in18
          (local.set $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
          (br_if $while-in18
           (i32.ge_u
            (local.get $8)
            (local.tee $6
             (i32.mul
              (local.get $6)
              (i32.const 10)
             )
            )
           )
          )
         )
        )
       )
      )
      (local.set $7
       (i32.const 0)
      )
     )
     (local.set $17
      (if (result i32)
       (i32.gt_u
        (local.tee $3
         (if (result i32)
          (i32.lt_s
           (local.tee $6
            (i32.add
             (i32.sub
              (local.get $13)
              (select
               (i32.const 0)
               (local.get $7)
               (i32.eq
                (local.get $24)
                (i32.const 102)
               )
              )
             )
             (i32.shr_s
              (i32.shl
               (i32.and
                (local.tee $19
                 (i32.eq
                  (local.get $24)
                  (i32.const 103)
                 )
                )
                (local.tee $25
                 (i32.ne
                  (local.get $13)
                  (i32.const 0)
                 )
                )
               )
               (i32.const 31)
              )
              (i32.const 31)
             )
            )
           )
           (i32.add
            (i32.mul
             (i32.shr_s
              (i32.sub
               (local.get $10)
               (local.get $12)
              )
              (i32.const 2)
             )
             (i32.const 9)
            )
            (i32.const -9)
           )
          )
          (block (result i32)
           (local.set $17
            (i32.div_s
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const 9216)
              )
             )
             (i32.const 9)
            )
           )
           (if
            (i32.lt_s
             (local.tee $6
              (i32.sub
               (local.get $6)
               (i32.mul
                (local.get $17)
                (i32.const 9)
               )
              )
             )
             (i32.const 8)
            )
            (block
             (local.set $8
              (i32.const 10)
             )
             (loop $while-in20
              (local.set $9
               (i32.add
                (local.get $6)
                (i32.const 1)
               )
              )
              (local.set $8
               (i32.mul
                (local.get $8)
                (i32.const 10)
               )
              )
              (if
               (i32.lt_s
                (local.get $6)
                (i32.const 7)
               )
               (block
                (local.set $6
                 (local.get $9)
                )
                (br $while-in20)
               )
              )
             )
            )
            (local.set $8
             (i32.const 10)
            )
           )
           (local.set $9
            (i32.div_u
             (local.tee $24
              (i32.load
               (local.tee $6
                (i32.add
                 (i32.add
                  (i32.shl
                   (local.get $17)
                   (i32.const 2)
                  )
                  (local.get $14)
                 )
                 (i32.const -4092)
                )
               )
              )
             )
             (local.get $8)
            )
           )
           (if
            (i32.eqz
             (i32.and
              (local.tee $17
               (i32.eq
                (i32.add
                 (local.get $6)
                 (i32.const 4)
                )
                (local.get $10)
               )
              )
              (i32.eqz
               (local.tee $20
                (i32.sub
                 (local.get $24)
                 (i32.mul
                  (local.get $8)
                  (local.get $9)
                 )
                )
               )
              )
             )
            )
            (block
             (local.set $1
              (select
               (f64.const 9007199254740994)
               (f64.const 9007199254740992)
               (i32.and
                (local.get $9)
                (i32.const 1)
               )
              )
             )
             (local.set $15
              (select
               (f64.const 0.5)
               (select
                (f64.const 1)
                (f64.const 1.5)
                (i32.and
                 (local.get $17)
                 (i32.eq
                  (local.get $20)
                  (local.tee $9
                   (i32.shr_u
                    (local.get $8)
                    (i32.const 1)
                   )
                  )
                 )
                )
               )
               (i32.lt_u
                (local.get $20)
                (local.get $9)
               )
              )
             )
             (if
              (local.get $23)
              (block
               (local.set $1
                (select
                 (f64.neg
                  (local.get $1)
                 )
                 (local.get $1)
                 (local.tee $9
                  (i32.eq
                   (i32.load8_s
                    (local.get $22)
                   )
                   (i32.const 45)
                  )
                 )
                )
               )
               (local.set $15
                (select
                 (f64.neg
                  (local.get $15)
                 )
                 (local.get $15)
                 (local.get $9)
                )
               )
              )
             )
             (i32.store
              (local.get $6)
              (local.tee $9
               (i32.sub
                (local.get $24)
                (local.get $20)
               )
              )
             )
             (if
              (f64.ne
               (f64.add
                (local.get $1)
                (local.get $15)
               )
               (local.get $1)
              )
              (block
               (i32.store
                (local.get $6)
                (local.tee $7
                 (i32.add
                  (local.get $8)
                  (local.get $9)
                 )
                )
               )
               (if
                (i32.gt_u
                 (local.get $7)
                 (i32.const 999999999)
                )
                (loop $while-in22
                 (i32.store
                  (local.get $6)
                  (i32.const 0)
                 )
                 (if
                  (i32.lt_u
                   (local.tee $6
                    (i32.add
                     (local.get $6)
                     (i32.const -4)
                    )
                   )
                   (local.get $3)
                  )
                  (i32.store
                   (local.tee $3
                    (i32.add
                     (local.get $3)
                     (i32.const -4)
                    )
                   )
                   (i32.const 0)
                  )
                 )
                 (i32.store
                  (local.get $6)
                  (local.tee $7
                   (i32.add
                    (i32.load
                     (local.get $6)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (br_if $while-in22
                  (i32.gt_u
                   (local.get $7)
                   (i32.const 999999999)
                  )
                 )
                )
               )
               (local.set $7
                (i32.mul
                 (i32.shr_s
                  (i32.sub
                   (local.get $12)
                   (local.get $3)
                  )
                  (i32.const 2)
                 )
                 (i32.const 9)
                )
               )
               (if
                (i32.ge_u
                 (local.tee $9
                  (i32.load
                   (local.get $3)
                  )
                 )
                 (i32.const 10)
                )
                (block
                 (local.set $8
                  (i32.const 10)
                 )
                 (loop $while-in24
                  (local.set $7
                   (i32.add
                    (local.get $7)
                    (i32.const 1)
                   )
                  )
                  (br_if $while-in24
                   (i32.ge_u
                    (local.get $9)
                    (local.tee $8
                     (i32.mul
                      (local.get $8)
                      (i32.const 10)
                     )
                    )
                   )
                  )
                 )
                )
               )
              )
             )
            )
           )
           (local.set $8
            (local.get $3)
           )
           (local.set $9
            (local.get $7)
           )
           (select
            (local.tee $3
             (i32.add
              (local.get $6)
              (i32.const 4)
             )
            )
            (local.get $10)
            (i32.gt_u
             (local.get $10)
             (local.get $3)
            )
           )
          )
          (block (result i32)
           (local.set $8
            (local.get $3)
           )
           (local.set $9
            (local.get $7)
           )
           (local.get $10)
          )
         )
        )
        (local.get $8)
       )
       (loop $while-in27 (result i32)
        (block $label$break$L109 (result i32)
         (if
          (i32.load
           (local.tee $7
            (i32.add
             (local.get $3)
             (i32.const -4)
            )
           )
          )
          (block
           (local.set $7
            (local.get $3)
           )
           (br $label$break$L109
            (i32.const 1)
           )
          )
         )
         (if (result i32)
          (i32.gt_u
           (local.get $7)
           (local.get $8)
          )
          (block
           (local.set $3
            (local.get $7)
           )
           (br $while-in27)
          )
          (i32.const 0)
         )
        )
       )
       (block (result i32)
        (local.set $7
         (local.get $3)
        )
        (i32.const 0)
       )
      )
     )
     (local.set $3
      (if (result i32)
       (local.get $19)
       (block (result i32)
        (local.set $5
         (if (result i32)
          (i32.and
           (i32.gt_s
            (local.tee $3
             (i32.add
              (i32.xor
               (local.get $25)
               (i32.const 1)
              )
              (local.get $13)
             )
            )
            (local.get $9)
           )
           (i32.gt_s
            (local.get $9)
            (i32.const -5)
           )
          )
          (block (result i32)
           (local.set $10
            (i32.sub
             (i32.add
              (local.get $3)
              (i32.const -1)
             )
             (local.get $9)
            )
           )
           (i32.add
            (local.get $5)
            (i32.const -1)
           )
          )
          (block (result i32)
           (local.set $10
            (i32.add
             (local.get $3)
             (i32.const -1)
            )
           )
           (i32.add
            (local.get $5)
            (i32.const -2)
           )
          )
         )
        )
        (if (result i32)
         (i32.and
          (local.get $4)
          (i32.const 8)
         )
         (local.get $10)
         (block (result i32)
          (if
           (local.get $17)
           (if
            (local.tee $13
             (i32.load
              (i32.add
               (local.get $7)
               (i32.const -4)
              )
             )
            )
            (if
             (i32.rem_u
              (local.get $13)
              (i32.const 10)
             )
             (local.set $3
              (i32.const 0)
             )
             (block
              (local.set $6
               (i32.const 10)
              )
              (local.set $3
               (i32.const 0)
              )
              (loop $while-in31
               (local.set $3
                (i32.add
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (br_if $while-in31
                (i32.eqz
                 (i32.rem_u
                  (local.get $13)
                  (local.tee $6
                   (i32.mul
                    (local.get $6)
                    (i32.const 10)
                   )
                  )
                 )
                )
               )
              )
             )
            )
            (local.set $3
             (i32.const 9)
            )
           )
           (local.set $3
            (i32.const 9)
           )
          )
          (local.set $6
           (i32.add
            (i32.mul
             (i32.shr_s
              (i32.sub
               (local.get $7)
               (local.get $12)
              )
              (i32.const 2)
             )
             (i32.const 9)
            )
            (i32.const -9)
           )
          )
          (if (result i32)
           (i32.eq
            (i32.or
             (local.get $5)
             (i32.const 32)
            )
            (i32.const 102)
           )
           (select
            (local.get $10)
            (local.tee $3
             (select
              (local.tee $3
               (i32.sub
                (local.get $6)
                (local.get $3)
               )
              )
              (i32.const 0)
              (i32.gt_s
               (local.get $3)
               (i32.const 0)
              )
             )
            )
            (i32.lt_s
             (local.get $10)
             (local.get $3)
            )
           )
           (select
            (local.get $10)
            (local.tee $3
             (select
              (local.tee $3
               (i32.sub
                (i32.add
                 (local.get $6)
                 (local.get $9)
                )
                (local.get $3)
               )
              )
              (i32.const 0)
              (i32.gt_s
               (local.get $3)
               (i32.const 0)
              )
             )
            )
            (i32.lt_s
             (local.get $10)
             (local.get $3)
            )
           )
          )
         )
        )
       )
       (local.get $13)
      )
     )
     (local.set $6
      (i32.sub
       (i32.const 0)
       (local.get $9)
      )
     )
     (call $_pad_660
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.tee $19
       (i32.add
        (if (result i32)
         (local.tee $13
          (i32.eq
           (i32.or
            (local.get $5)
            (i32.const 32)
           )
           (i32.const 102)
          )
         )
         (block (result i32)
          (local.set $10
           (i32.const 0)
          )
          (select
           (local.get $9)
           (i32.const 0)
           (i32.gt_s
            (local.get $9)
            (i32.const 0)
           )
          )
         )
         (block (result i32)
          (local.set $6
           (call $_fmt_u
            (i64.extend_i32_s
             (select
              (local.get $6)
              (local.get $9)
              (i32.lt_s
               (local.get $9)
               (i32.const 0)
              )
             )
            )
            (local.get $18)
           )
          )
          (if
           (i32.lt_s
            (i32.sub
             (local.tee $12
              (local.get $18)
             )
             (local.get $6)
            )
            (i32.const 2)
           )
           (loop $while-in33
            (i32.store8
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const -1)
              )
             )
             (i32.const 48)
            )
            (br_if $while-in33
             (i32.lt_s
              (i32.sub
               (local.get $12)
               (local.get $6)
              )
              (i32.const 2)
             )
            )
           )
          )
          (i32.store8
           (i32.add
            (local.get $6)
            (i32.const -1)
           )
           (i32.add
            (i32.and
             (i32.shr_s
              (local.get $9)
              (i32.const 31)
             )
             (i32.const 2)
            )
            (i32.const 43)
           )
          )
          (i32.store8
           (local.tee $10
            (i32.add
             (local.get $6)
             (i32.const -2)
            )
           )
           (local.get $5)
          )
          (i32.sub
           (local.get $12)
           (local.get $10)
          )
         )
        )
        (i32.add
         (i32.add
          (i32.add
           (local.get $23)
           (i32.const 1)
          )
          (local.get $3)
         )
         (select
          (i32.const 1)
          (i32.and
           (i32.shr_u
            (local.get $4)
            (i32.const 3)
           )
           (i32.const 1)
          )
          (local.tee $12
           (i32.ne
            (local.get $3)
            (i32.const 0)
           )
          )
         )
        )
       )
      )
      (local.get $4)
     )
     (call $_out
      (local.get $0)
      (local.get $22)
      (local.get $23)
     )
     (call $_pad_660
      (local.get $0)
      (i32.const 48)
      (local.get $2)
      (local.get $19)
      (i32.xor
       (local.get $4)
       (i32.const 65536)
      )
     )
     (if
      (local.get $13)
      (block
       (local.set $9
        (local.tee $13
         (i32.add
          (local.get $11)
          (i32.const 9)
         )
        )
       )
       (local.set $10
        (i32.add
         (local.get $11)
         (i32.const 8)
        )
       )
       (local.set $6
        (local.tee $8
         (select
          (local.get $14)
          (local.get $8)
          (i32.gt_u
           (local.get $8)
           (local.get $14)
          )
         )
        )
       )
       (loop $while-in35
        (local.set $5
         (call $_fmt_u
          (i64.extend_i32_u
           (i32.load
            (local.get $6)
           )
          )
          (local.get $13)
         )
        )
        (if
         (i32.eq
          (local.get $6)
          (local.get $8)
         )
         (if
          (i32.eq
           (local.get $5)
           (local.get $13)
          )
          (block
           (i32.store8
            (local.get $10)
            (i32.const 48)
           )
           (local.set $5
            (local.get $10)
           )
          )
         )
         (if
          (i32.gt_u
           (local.get $5)
           (local.get $11)
          )
          (block
           (drop
            (call $_memset
             (local.get $11)
             (i32.const 48)
             (i32.sub
              (local.get $5)
              (local.get $21)
             )
            )
           )
           (loop $while-in37
            (br_if $while-in37
             (i32.gt_u
              (local.tee $5
               (i32.add
                (local.get $5)
                (i32.const -1)
               )
              )
              (local.get $11)
             )
            )
           )
          )
         )
        )
        (call $_out
         (local.get $0)
         (local.get $5)
         (i32.sub
          (local.get $9)
          (local.get $5)
         )
        )
        (if
         (i32.le_u
          (local.tee $5
           (i32.add
            (local.get $6)
            (i32.const 4)
           )
          )
          (local.get $14)
         )
         (block
          (local.set $6
           (local.get $5)
          )
          (br $while-in35)
         )
        )
       )
       (if
        (i32.eqz
         (i32.and
          (i32.eqz
           (i32.and
            (local.get $4)
            (i32.const 8)
           )
          )
          (i32.xor
           (local.get $12)
           (i32.const 1)
          )
         )
        )
        (call $_out
         (local.get $0)
         (i32.const 16678)
         (i32.const 1)
        )
       )
       (call $_pad_660
        (local.get $0)
        (i32.const 48)
        (i32.add
         (if (result i32)
          (i32.and
           (i32.lt_u
            (local.get $5)
            (local.get $7)
           )
           (i32.gt_s
            (local.get $3)
            (i32.const 0)
           )
          )
          (loop $while-in39 (result i32)
           (if
            (i32.gt_u
             (local.tee $6
              (call $_fmt_u
               (i64.extend_i32_u
                (i32.load
                 (local.get $5)
                )
               )
               (local.get $13)
              )
             )
             (local.get $11)
            )
            (block
             (drop
              (call $_memset
               (local.get $11)
               (i32.const 48)
               (i32.sub
                (local.get $6)
                (local.get $21)
               )
              )
             )
             (loop $while-in41
              (br_if $while-in41
               (i32.gt_u
                (local.tee $6
                 (i32.add
                  (local.get $6)
                  (i32.const -1)
                 )
                )
                (local.get $11)
               )
              )
             )
            )
           )
           (call $_out
            (local.get $0)
            (local.get $6)
            (select
             (local.get $3)
             (i32.const 9)
             (i32.lt_s
              (local.get $3)
              (i32.const 9)
             )
            )
           )
           (local.set $6
            (i32.add
             (local.get $3)
             (i32.const -9)
            )
           )
           (if (result i32)
            (i32.and
             (i32.lt_u
              (local.tee $5
               (i32.add
                (local.get $5)
                (i32.const 4)
               )
              )
              (local.get $7)
             )
             (i32.gt_s
              (local.get $3)
              (i32.const 9)
             )
            )
            (block
             (local.set $3
              (local.get $6)
             )
             (br $while-in39)
            )
            (local.get $6)
           )
          )
          (local.get $3)
         )
         (i32.const 9)
        )
        (i32.const 9)
        (i32.const 0)
       )
      )
      (block
       (call $_pad_660
        (local.get $0)
        (i32.const 48)
        (i32.add
         (if (result i32)
          (i32.and
           (i32.lt_u
            (local.get $8)
            (local.tee $17
             (select
              (local.get $7)
              (i32.add
               (local.get $8)
               (i32.const 4)
              )
              (local.get $17)
             )
            )
           )
           (i32.gt_s
            (local.get $3)
            (i32.const -1)
           )
          )
          (block (result i32)
           (local.set $13
            (i32.eqz
             (i32.and
              (local.get $4)
              (i32.const 8)
             )
            )
           )
           (local.set $12
            (local.tee $25
             (i32.add
              (local.get $11)
              (i32.const 9)
             )
            )
           )
           (local.set $9
            (i32.sub
             (i32.const 0)
             (local.get $21)
            )
           )
           (local.set $14
            (i32.add
             (local.get $11)
             (i32.const 8)
            )
           )
           (local.set $7
            (local.get $8)
           )
           (local.set $5
            (local.get $3)
           )
           (loop $while-in43 (result i32)
            (if
             (i32.eq
              (local.get $25)
              (local.tee $3
               (call $_fmt_u
                (i64.extend_i32_u
                 (i32.load
                  (local.get $7)
                 )
                )
                (local.get $25)
               )
              )
             )
             (block
              (i32.store8
               (local.get $14)
               (i32.const 48)
              )
              (local.set $3
               (local.get $14)
              )
             )
            )
            (block $do-once44
             (if
              (i32.eq
               (local.get $7)
               (local.get $8)
              )
              (block
               (local.set $6
                (i32.add
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (call $_out
                (local.get $0)
                (local.get $3)
                (i32.const 1)
               )
               (if
                (i32.and
                 (i32.lt_s
                  (local.get $5)
                  (i32.const 1)
                 )
                 (local.get $13)
                )
                (block
                 (local.set $3
                  (local.get $6)
                 )
                 (br $do-once44)
                )
               )
               (call $_out
                (local.get $0)
                (i32.const 16678)
                (i32.const 1)
               )
               (local.set $3
                (local.get $6)
               )
              )
              (block
               (br_if $do-once44
                (i32.le_u
                 (local.get $3)
                 (local.get $11)
                )
               )
               (drop
                (call $_memset
                 (local.get $11)
                 (i32.const 48)
                 (i32.add
                  (local.get $3)
                  (local.get $9)
                 )
                )
               )
               (loop $while-in47
                (br_if $while-in47
                 (i32.gt_u
                  (local.tee $3
                   (i32.add
                    (local.get $3)
                    (i32.const -1)
                   )
                  )
                  (local.get $11)
                 )
                )
               )
              )
             )
            )
            (call $_out
             (local.get $0)
             (local.get $3)
             (select
              (local.tee $3
               (i32.sub
                (local.get $12)
                (local.get $3)
               )
              )
              (local.get $5)
              (i32.gt_s
               (local.get $5)
               (local.get $3)
              )
             )
            )
            (br_if $while-in43
             (i32.and
              (i32.lt_u
               (local.tee $7
                (i32.add
                 (local.get $7)
                 (i32.const 4)
                )
               )
               (local.get $17)
              )
              (i32.gt_s
               (local.tee $5
                (i32.sub
                 (local.get $5)
                 (local.get $3)
                )
               )
               (i32.const -1)
              )
             )
            )
            (local.get $5)
           )
          )
          (local.get $3)
         )
         (i32.const 18)
        )
        (i32.const 18)
        (i32.const 0)
       )
       (call $_out
        (local.get $0)
        (local.get $10)
        (i32.sub
         (local.get $18)
         (local.get $10)
        )
       )
      )
     )
     (call $_pad_660
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.get $19)
      (i32.xor
       (local.get $4)
       (i32.const 8192)
      )
     )
     (local.get $19)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $28)
  )
  (select
   (local.get $2)
   (local.get $0)
   (i32.lt_s
    (local.get $0)
    (local.get $2)
   )
  )
 )
 (func $_pop_arg_long_double (; 562 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local.set $3
   (f64.load
    (local.tee $2
     (i32.and
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 7)
      )
      (i32.const -8)
     )
    )
   )
  )
  (i32.store
   (local.get $1)
   (i32.add
    (local.get $2)
    (i32.const 8)
   )
  )
  (f64.store
   (local.get $0)
   (local.get $3)
  )
 )
 (func $___vfprintf_internal (; 563 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 224)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 224)
   )
  )
  (i64.store
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 160)
    )
   )
   (i64.const 0)
  )
  (i64.store offset=8
   (local.get $4)
   (i64.const 0)
  )
  (i64.store offset=16
   (local.get $4)
   (i64.const 0)
  )
  (i64.store offset=24
   (local.get $4)
   (i64.const 0)
  )
  (i64.store offset=32
   (local.get $4)
   (i64.const 0)
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $3)
     (i32.const 208)
    )
   )
   (i32.load
    (local.get $2)
   )
  )
  (local.set $0
   (if (result i32)
    (i32.lt_s
     (call $_printf_core
      (i32.const 0)
      (local.get $1)
      (local.get $5)
      (local.tee $2
       (i32.add
        (local.get $3)
        (i32.const 80)
       )
      )
      (local.get $4)
     )
     (i32.const 0)
    )
    (i32.const -1)
    (block (result i32)
     (drop
      (if (result i32)
       (i32.gt_s
        (i32.atomic.load offset=76
         (local.get $0)
        )
        (i32.const -1)
       )
       (i32.const 1)
       (i32.const 0)
      )
     )
     (local.set $6
      (i32.load
       (local.get $0)
      )
     )
     (if
      (i32.lt_s
       (i32.load8_s offset=74
        (local.get $0)
       )
       (i32.const 1)
      )
      (i32.store
       (local.get $0)
       (i32.and
        (local.get $6)
        (i32.const -33)
       )
      )
     )
     (if
      (i32.load offset=48
       (local.get $0)
      )
      (local.set $1
       (call $_printf_core
        (local.get $0)
        (local.get $1)
        (local.get $5)
        (local.get $2)
        (local.get $4)
       )
      )
      (block
       (local.set $7
        (i32.load offset=44
         (local.get $0)
        )
       )
       (i32.store offset=44
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=28
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=20
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=48
        (local.get $0)
        (i32.const 80)
       )
       (i32.store offset=16
        (local.get $0)
        (i32.add
         (local.get $3)
         (i32.const 80)
        )
       )
       (local.set $1
        (call $_printf_core
         (local.get $0)
         (local.get $1)
         (local.get $5)
         (local.get $2)
         (local.get $4)
        )
       )
       (if
        (local.get $7)
        (block
         (drop
          (call_indirect (type $FUNCSIG$iiii)
           (local.get $0)
           (i32.const 0)
           (i32.const 0)
           (i32.add
            (i32.and
             (i32.load offset=36
              (local.get $0)
             )
             (i32.const 15)
            )
            (i32.const 58)
           )
          )
         )
         (local.set $1
          (select
           (local.get $1)
           (i32.const -1)
           (i32.load offset=20
            (local.get $0)
           )
          )
         )
         (i32.store offset=44
          (local.get $0)
          (local.get $7)
         )
         (i32.store offset=48
          (local.get $0)
          (i32.const 0)
         )
         (i32.store offset=16
          (local.get $0)
          (i32.const 0)
         )
         (i32.store offset=28
          (local.get $0)
          (i32.const 0)
         )
         (i32.store offset=20
          (local.get $0)
          (i32.const 0)
         )
        )
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.or
       (local.tee $0
        (i32.load
         (local.get $0)
        )
       )
       (i32.and
        (local.get $6)
        (i32.const 32)
       )
      )
     )
     (select
      (i32.const -1)
      (local.get $1)
      (i32.and
       (local.get $0)
       (i32.const 32)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $8)
  )
  (local.get $0)
 )
 (func $_printf_core (; 564 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i64)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local.set $25
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $16
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 64)
   )
  )
  (local.set $9
   (i32.add
    (local.get $16)
    (i32.const 40)
   )
  )
  (local.set $26
   (i32.add
    (local.get $16)
    (i32.const 48)
   )
  )
  (local.set $22
   (i32.add
    (local.get $16)
    (i32.const 60)
   )
  )
  (i32.store
   (local.tee $11
    (i32.add
     (local.get $16)
     (i32.const 56)
    )
   )
   (local.get $1)
  )
  (local.set $18
   (i32.ne
    (local.get $0)
    (i32.const 0)
   )
  )
  (local.set $19
   (local.tee $20
    (i32.add
     (local.get $16)
     (i32.const 40)
    )
   )
  )
  (local.set $23
   (i32.add
    (local.get $16)
    (i32.const 39)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (block $label$break$L123
   (block $__rjti$10
    (loop $label$continue$L1
     (block $label$break$L1
      (loop $while-in
       (if
        (i32.gt_s
         (local.get $8)
         (i32.const -1)
        )
        (local.set $8
         (if (result i32)
          (i32.gt_s
           (local.get $1)
           (i32.sub
            (i32.const 2147483647)
            (local.get $8)
           )
          )
          (block (result i32)
           (i32.store
            (call $___errno_location)
            (i32.const 75)
           )
           (i32.const -1)
          )
          (i32.add
           (local.get $1)
           (local.get $8)
          )
         )
        )
       )
       (br_if $__rjti$10
        (i32.eqz
         (local.tee $6
          (i32.load8_s
           (local.tee $10
            (i32.load
             (local.get $11)
            )
           )
          )
         )
        )
       )
       (local.set $1
        (local.get $10)
       )
       (block $label$break$L15
        (block $__rjti$0
         (loop $label$continue$L12
          (block $label$break$L12
           (block $switch
            (if
             (local.tee $7
              (i32.shr_s
               (i32.shl
                (local.get $6)
                (i32.const 24)
               )
               (i32.const 24)
              )
             )
             (block
              (br_if $switch
               (i32.ne
                (local.get $7)
                (i32.const 37)
               )
              )
              (br $__rjti$0)
             )
            )
            (br $label$break$L12)
           )
           (i32.store
            (local.get $11)
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
           )
           (local.set $6
            (i32.load8_s
             (local.get $1)
            )
           )
           (br $label$continue$L12)
          )
         )
         (br $label$break$L15)
        )
        (local.set $6
         (local.get $1)
        )
        (loop $while-in3
         (br_if $label$break$L15
          (i32.ne
           (i32.load8_s offset=1
            (local.get $6)
           )
           (i32.const 37)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.store
          (local.get $11)
          (local.tee $6
           (i32.add
            (local.get $6)
            (i32.const 2)
           )
          )
         )
         (br_if $while-in3
          (i32.eq
           (i32.load8_s
            (local.get $6)
           )
           (i32.const 37)
          )
         )
        )
       )
       (local.set $1
        (i32.sub
         (local.get $1)
         (local.get $10)
        )
       )
       (if
        (local.get $18)
        (call $_out
         (local.get $0)
         (local.get $10)
         (local.get $1)
        )
       )
       (br_if $while-in
        (local.get $1)
       )
      )
      (local.set $7
       (i32.eqz
        (call $_isdigit
         (i32.load8_s offset=1
          (i32.load
           (local.get $11)
          )
         )
        )
       )
      )
      (i32.store
       (local.get $11)
       (local.tee $1
        (i32.add
         (local.tee $1
          (i32.load
           (local.get $11)
          )
         )
         (if (result i32)
          (local.get $7)
          (block (result i32)
           (local.set $17
            (i32.const -1)
           )
           (i32.const 1)
          )
          (if (result i32)
           (i32.eq
            (i32.load8_s offset=2
             (local.get $1)
            )
            (i32.const 36)
           )
           (block (result i32)
            (local.set $17
             (i32.add
              (i32.load8_s offset=1
               (local.get $1)
              )
              (i32.const -48)
             )
            )
            (local.set $5
             (i32.const 1)
            )
            (i32.const 3)
           )
           (block (result i32)
            (local.set $17
             (i32.const -1)
            )
            (i32.const 1)
           )
          )
         )
        )
       )
      )
      (if
       (i32.or
        (i32.gt_u
         (local.tee $6
          (i32.add
           (local.tee $7
            (i32.load8_s
             (local.get $1)
            )
           )
           (i32.const -32)
          )
         )
         (i32.const 31)
        )
        (i32.eqz
         (i32.and
          (i32.shl
           (i32.const 1)
           (local.get $6)
          )
          (i32.const 75913)
         )
        )
       )
       (local.set $6
        (i32.const 0)
       )
       (block
        (local.set $7
         (i32.const 0)
        )
        (loop $while-in5
         (local.set $6
          (i32.or
           (local.get $7)
           (i32.shl
            (i32.const 1)
            (local.get $6)
           )
          )
         )
         (i32.store
          (local.get $11)
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
         )
         (if
          (i32.eqz
           (i32.or
            (i32.gt_u
             (local.tee $12
              (i32.add
               (local.tee $7
                (i32.load8_s
                 (local.get $1)
                )
               )
               (i32.const -32)
              )
             )
             (i32.const 31)
            )
            (i32.eqz
             (i32.and
              (i32.shl
               (i32.const 1)
               (local.get $12)
              )
              (i32.const 75913)
             )
            )
           )
          )
          (block
           (local.set $7
            (local.get $6)
           )
           (local.set $6
            (local.get $12)
           )
           (br $while-in5)
          )
         )
        )
       )
      )
      (local.set $24
       (if (result i32)
        (i32.eq
         (i32.and
          (local.get $7)
          (i32.const 255)
         )
         (i32.const 42)
        )
        (block (result i32)
         (local.set $5
          (block $__rjto$1 (result i32)
           (block $__rjti$1
            (br_if $__rjti$1
             (i32.eqz
              (call $_isdigit
               (i32.load8_s offset=1
                (local.get $1)
               )
              )
             )
            )
            (br_if $__rjti$1
             (i32.ne
              (i32.load8_s offset=2
               (local.tee $1
                (i32.load
                 (local.get $11)
                )
               )
              )
              (i32.const 36)
             )
            )
            (i32.store
             (i32.add
              (i32.shl
               (i32.add
                (i32.load8_s offset=1
                 (local.get $1)
                )
                (i32.const -48)
               )
               (i32.const 2)
              )
              (local.get $4)
             )
             (i32.const 10)
            )
            (local.set $13
             (i32.const 1)
            )
            (local.set $7
             (i32.add
              (local.get $1)
              (i32.const 3)
             )
            )
            (br $__rjto$1
             (i32.wrap_i64
              (i64.load
               (i32.add
                (i32.shl
                 (i32.add
                  (i32.load8_s offset=1
                   (local.get $1)
                  )
                  (i32.const -48)
                 )
                 (i32.const 3)
                )
                (local.get $3)
               )
              )
             )
            )
           )
           (if
            (local.get $5)
            (block
             (local.set $8
              (i32.const -1)
             )
             (br $label$break$L1)
            )
           )
           (if
            (local.get $18)
            (block
             (local.set $1
              (i32.load
               (local.tee $5
                (i32.and
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 3)
                 )
                 (i32.const -4)
                )
               )
              )
             )
             (i32.store
              (local.get $2)
              (i32.add
               (local.get $5)
               (i32.const 4)
              )
             )
            )
            (local.set $1
             (i32.const 0)
            )
           )
           (local.set $13
            (i32.const 0)
           )
           (local.set $7
            (i32.add
             (i32.load
              (local.get $11)
             )
             (i32.const 1)
            )
           )
           (local.get $1)
          )
         )
         (i32.store
          (local.get $11)
          (local.get $7)
         )
         (local.set $1
          (local.get $7)
         )
         (local.set $14
          (select
           (i32.or
            (local.get $6)
            (i32.const 8192)
           )
           (local.get $6)
           (local.tee $7
            (i32.lt_s
             (local.get $5)
             (i32.const 0)
            )
           )
          )
         )
         (local.set $15
          (select
           (i32.sub
            (i32.const 0)
            (local.get $5)
           )
           (local.get $5)
           (local.get $7)
          )
         )
         (local.get $13)
        )
        (block (result i32)
         (if
          (i32.lt_s
           (local.tee $15
            (call $_getint
             (local.get $11)
            )
           )
           (i32.const 0)
          )
          (block
           (local.set $8
            (i32.const -1)
           )
           (br $label$break$L1)
          )
         )
         (local.set $1
          (i32.load
           (local.get $11)
          )
         )
         (local.set $14
          (local.get $6)
         )
         (local.get $5)
        )
       )
      )
      (if
       (i32.eq
        (i32.load8_s
         (local.get $1)
        )
        (i32.const 46)
       )
       (block $do-once6
        (local.set $5
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (if
         (i32.ne
          (i32.load8_s offset=1
           (local.get $1)
          )
          (i32.const 42)
         )
         (block
          (i32.store
           (local.get $11)
           (local.get $5)
          )
          (local.set $1
           (call $_getint
            (local.get $11)
           )
          )
          (local.set $5
           (i32.load
            (local.get $11)
           )
          )
          (br $do-once6)
         )
        )
        (if
         (call $_isdigit
          (i32.load8_s offset=2
           (local.get $1)
          )
         )
         (if
          (i32.eq
           (i32.load8_s offset=3
            (local.tee $5
             (i32.load
              (local.get $11)
             )
            )
           )
           (i32.const 36)
          )
          (block
           (i32.store
            (i32.add
             (i32.shl
              (i32.add
               (i32.load8_s offset=2
                (local.get $5)
               )
               (i32.const -48)
              )
              (i32.const 2)
             )
             (local.get $4)
            )
            (i32.const 10)
           )
           (local.set $1
            (i32.wrap_i64
             (i64.load
              (i32.add
               (i32.shl
                (i32.add
                 (i32.load8_s offset=2
                  (local.get $5)
                 )
                 (i32.const -48)
                )
                (i32.const 3)
               )
               (local.get $3)
              )
             )
            )
           )
           (i32.store
            (local.get $11)
            (local.tee $5
             (i32.add
              (local.get $5)
              (i32.const 4)
             )
            )
           )
           (br $do-once6)
          )
         )
        )
        (if
         (local.get $24)
         (block
          (local.set $8
           (i32.const -1)
          )
          (br $label$break$L1)
         )
        )
        (if
         (local.get $18)
         (block
          (local.set $1
           (i32.load
            (local.tee $5
             (i32.and
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 3)
              )
              (i32.const -4)
             )
            )
           )
          )
          (i32.store
           (local.get $2)
           (i32.add
            (local.get $5)
            (i32.const 4)
           )
          )
         )
         (local.set $1
          (i32.const 0)
         )
        )
        (i32.store
         (local.get $11)
         (local.tee $5
          (i32.add
           (i32.load
            (local.get $11)
           )
           (i32.const 2)
          )
         )
        )
       )
       (block
        (local.set $5
         (local.get $1)
        )
        (local.set $1
         (i32.const -1)
        )
       )
      )
      (local.set $12
       (i32.const 0)
      )
      (loop $while-in9
       (if
        (i32.gt_u
         (i32.add
          (i32.load8_s
           (local.get $5)
          )
          (i32.const -65)
         )
         (i32.const 57)
        )
        (block
         (local.set $8
          (i32.const -1)
         )
         (br $label$break$L1)
        )
       )
       (i32.store
        (local.get $11)
        (local.tee $7
         (i32.add
          (local.get $5)
          (i32.const 1)
         )
        )
       )
       (if
        (i32.lt_u
         (i32.add
          (local.tee $6
           (i32.and
            (local.tee $5
             (i32.load8_s
              (i32.add
               (i32.add
                (i32.load8_s
                 (local.get $5)
                )
                (i32.mul
                 (local.get $12)
                 (i32.const 58)
                )
               )
               (i32.const 7679)
              )
             )
            )
            (i32.const 255)
           )
          )
          (i32.const -1)
         )
         (i32.const 8)
        )
        (block
         (local.set $5
          (local.get $7)
         )
         (local.set $12
          (local.get $6)
         )
         (br $while-in9)
        )
       )
      )
      (if
       (i32.eqz
        (local.get $5)
       )
       (block
        (local.set $8
         (i32.const -1)
        )
        (br $label$break$L1)
       )
      )
      (local.set $13
       (i32.gt_s
        (local.get $17)
        (i32.const -1)
       )
      )
      (block $label$break$L77
       (block $__rjti$9
        (if
         (i32.eq
          (local.get $5)
          (i32.const 19)
         )
         (if
          (local.get $13)
          (block
           (local.set $8
            (i32.const -1)
           )
           (br $label$break$L1)
          )
         )
         (block $__rjti$8
          (if
           (local.get $13)
           (block
            (i32.store
             (i32.add
              (i32.shl
               (local.get $17)
               (i32.const 2)
              )
              (local.get $4)
             )
             (local.get $6)
            )
            (i64.store
             (local.get $9)
             (i64.load
              (i32.add
               (i32.shl
                (local.get $17)
                (i32.const 3)
               )
               (local.get $3)
              )
             )
            )
            (br $__rjti$8)
           )
          )
          (if
           (i32.eqz
            (local.get $18)
           )
           (block
            (local.set $8
             (i32.const 0)
            )
            (br $label$break$L1)
           )
          )
          (call $_pop_arg
           (local.get $9)
           (local.get $6)
           (local.get $2)
          )
          (local.set $7
           (i32.load
            (local.get $11)
           )
          )
          (br $__rjti$9)
         )
        )
        (br_if $__rjti$9
         (local.get $18)
        )
        (local.set $1
         (i32.const 0)
        )
        (br $label$break$L77)
       )
       (local.set $5
        (select
         (local.tee $6
          (i32.and
           (local.get $14)
           (i32.const -65537)
          )
         )
         (local.get $14)
         (i32.and
          (local.get $14)
          (i32.const 8192)
         )
        )
       )
       (block $__rjto$7
        (block $__rjti$7
         (block $__rjti$6
          (block $__rjti$5
           (block $__rjti$4
            (block $__rjti$3
             (block $switch-default44
              (block $switch-case43
               (block $switch-case35
                (block $switch-case34
                 (block $switch-case33
                  (block $switch-case32
                   (block $switch-case31
                    (block $switch-case30
                     (block $switch-case28
                      (block $switch-case25
                       (block $switch-case24
                        (br_table $switch-case43 $switch-default44 $switch-case34 $switch-default44 $switch-case43 $switch-case43 $switch-case43 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-case35 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $__rjti$3 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-case43 $switch-default44 $switch-case32 $switch-case30 $switch-case43 $switch-case43 $switch-case43 $switch-default44 $switch-case30 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-case24 $switch-case28 $switch-case25 $switch-default44 $switch-default44 $switch-case33 $switch-default44 $switch-case31 $switch-default44 $switch-default44 $__rjti$3 $switch-default44
                         (i32.sub
                          (local.tee $7
                           (select
                            (i32.and
                             (local.tee $7
                              (i32.load8_s
                               (i32.add
                                (local.get $7)
                                (i32.const -1)
                               )
                              )
                             )
                             (i32.const -33)
                            )
                            (local.get $7)
                            (i32.and
                             (i32.eq
                              (i32.and
                               (local.get $7)
                               (i32.const 15)
                              )
                              (i32.const 3)
                             )
                             (i32.ne
                              (local.get $12)
                              (i32.const 0)
                             )
                            )
                           )
                          )
                          (i32.const 65)
                         )
                        )
                       )
                       (block $switch-default23
                        (block $switch-case22
                         (block $switch-case21
                          (block $switch-case20
                           (block $switch-case19
                            (block $switch-case18
                             (block $switch-case17
                              (block $switch-case16
                               (br_table $switch-case16 $switch-case17 $switch-case18 $switch-case19 $switch-case20 $switch-default23 $switch-case21 $switch-case22 $switch-default23
                                (i32.shr_s
                                 (i32.shl
                                  (i32.and
                                   (local.get $12)
                                   (i32.const 255)
                                  )
                                  (i32.const 24)
                                 )
                                 (i32.const 24)
                                )
                               )
                              )
                              (i32.store
                               (i32.load
                                (local.get $9)
                               )
                               (local.get $8)
                              )
                              (local.set $1
                               (i32.const 0)
                              )
                              (br $label$break$L77)
                             )
                             (i32.store
                              (i32.load
                               (local.get $9)
                              )
                              (local.get $8)
                             )
                             (local.set $1
                              (i32.const 0)
                             )
                             (br $label$break$L77)
                            )
                            (i64.store
                             (i32.load
                              (local.get $9)
                             )
                             (i64.extend_i32_s
                              (local.get $8)
                             )
                            )
                            (local.set $1
                             (i32.const 0)
                            )
                            (br $label$break$L77)
                           )
                           (i32.store16
                            (i32.load
                             (local.get $9)
                            )
                            (local.get $8)
                           )
                           (local.set $1
                            (i32.const 0)
                           )
                           (br $label$break$L77)
                          )
                          (i32.store8
                           (i32.load
                            (local.get $9)
                           )
                           (local.get $8)
                          )
                          (local.set $1
                           (i32.const 0)
                          )
                          (br $label$break$L77)
                         )
                         (i32.store
                          (i32.load
                           (local.get $9)
                          )
                          (local.get $8)
                         )
                         (local.set $1
                          (i32.const 0)
                         )
                         (br $label$break$L77)
                        )
                        (i64.store
                         (i32.load
                          (local.get $9)
                         )
                         (i64.extend_i32_s
                          (local.get $8)
                         )
                        )
                        (local.set $1
                         (i32.const 0)
                        )
                        (br $label$break$L77)
                       )
                       (local.set $1
                        (i32.const 0)
                       )
                       (br $label$break$L77)
                      )
                      (local.set $5
                       (i32.or
                        (local.get $5)
                        (i32.const 8)
                       )
                      )
                      (local.set $1
                       (select
                        (local.get $1)
                        (i32.const 8)
                        (i32.gt_u
                         (local.get $1)
                         (i32.const 8)
                        )
                       )
                      )
                      (local.set $7
                       (i32.const 120)
                      )
                      (br $__rjti$3)
                     )
                     (local.set $7
                      (i32.sub
                       (local.get $19)
                       (local.tee $14
                        (call $_fmt_o
                         (i64.load
                          (local.get $9)
                         )
                         (local.get $20)
                        )
                       )
                      )
                     )
                     (local.set $6
                      (local.get $5)
                     )
                     (local.set $1
                      (select
                       (local.get $1)
                       (i32.add
                        (local.get $7)
                        (i32.const 1)
                       )
                       (i32.or
                        (i32.eqz
                         (i32.and
                          (local.get $5)
                          (i32.const 8)
                         )
                        )
                        (i32.gt_s
                         (local.get $1)
                         (local.get $7)
                        )
                       )
                      )
                     )
                     (local.set $13
                      (i32.const 0)
                     )
                     (local.set $12
                      (i32.const 16626)
                     )
                     (br $__rjti$6)
                    )
                    (local.set $12
                     (if (result i32)
                      (i64.lt_s
                       (local.tee $21
                        (i64.load
                         (local.get $9)
                        )
                       )
                       (i64.const 0)
                      )
                      (block (result i32)
                       (i64.store
                        (local.get $9)
                        (local.tee $21
                         (i64.sub
                          (i64.const 0)
                          (local.get $21)
                         )
                        )
                       )
                       (local.set $13
                        (i32.const 1)
                       )
                       (i32.const 16626)
                      )
                      (block (result i32)
                       (local.set $13
                        (i32.ne
                         (i32.and
                          (local.get $5)
                          (i32.const 2049)
                         )
                         (i32.const 0)
                        )
                       )
                       (select
                        (i32.const 16627)
                        (select
                         (i32.const 16628)
                         (i32.const 16626)
                         (i32.and
                          (local.get $5)
                          (i32.const 1)
                         )
                        )
                        (i32.and
                         (local.get $5)
                         (i32.const 2048)
                        )
                       )
                      )
                     )
                    )
                    (br $__rjti$4)
                   )
                   (local.set $21
                    (i64.load
                     (local.get $9)
                    )
                   )
                   (local.set $13
                    (i32.const 0)
                   )
                   (local.set $12
                    (i32.const 16626)
                   )
                   (br $__rjti$4)
                  )
                  (i64.store8
                   (local.get $23)
                   (i64.load
                    (local.get $9)
                   )
                  )
                  (local.set $7
                   (local.get $23)
                  )
                  (local.set $5
                   (local.get $6)
                  )
                  (local.set $6
                   (i32.const 1)
                  )
                  (local.set $13
                   (i32.const 0)
                  )
                  (local.set $12
                   (i32.const 16626)
                  )
                  (local.set $1
                   (local.get $19)
                  )
                  (br $__rjto$7)
                 )
                 (local.set $14
                  (i32.eqz
                   (local.tee $10
                    (call $_memchr
                     (local.tee $7
                      (select
                       (local.tee $5
                        (i32.load
                         (local.get $9)
                        )
                       )
                       (i32.const 16636)
                       (local.get $5)
                      )
                     )
                     (local.get $1)
                    )
                   )
                  )
                 )
                 (local.set $5
                  (local.get $6)
                 )
                 (local.set $6
                  (select
                   (local.get $1)
                   (i32.sub
                    (local.get $10)
                    (local.get $7)
                   )
                   (local.get $14)
                  )
                 )
                 (local.set $13
                  (i32.const 0)
                 )
                 (local.set $12
                  (i32.const 16626)
                 )
                 (local.set $1
                  (select
                   (i32.add
                    (local.get $1)
                    (local.get $7)
                   )
                   (local.get $10)
                   (local.get $14)
                  )
                 )
                 (br $__rjto$7)
                )
                (i64.store32 offset=48
                 (local.get $16)
                 (i64.load
                  (local.get $9)
                 )
                )
                (i32.store offset=52
                 (local.get $16)
                 (i32.const 0)
                )
                (i32.store
                 (local.get $9)
                 (local.get $26)
                )
                (local.set $6
                 (i32.const -1)
                )
                (br $__rjti$5)
               )
               (if
                (local.get $1)
                (block
                 (local.set $6
                  (local.get $1)
                 )
                 (br $__rjti$5)
                )
                (block
                 (call $_pad_660
                  (local.get $0)
                  (i32.const 32)
                  (local.get $15)
                  (i32.const 0)
                  (local.get $5)
                 )
                 (local.set $1
                  (i32.const 0)
                 )
                 (br $__rjti$7)
                )
               )
              )
              (local.set $1
               (call_indirect (type $FUNCSIG$iidiiii)
                (local.get $0)
                (f64.load
                 (local.get $9)
                )
                (local.get $15)
                (local.get $1)
                (local.get $5)
                (local.get $7)
                (i32.const 53)
               )
              )
              (br $label$break$L77)
             )
             (local.set $7
              (local.get $10)
             )
             (local.set $6
              (local.get $1)
             )
             (local.set $13
              (i32.const 0)
             )
             (local.set $12
              (i32.const 16626)
             )
             (local.set $1
              (local.get $19)
             )
             (br $__rjto$7)
            )
            (local.set $14
             (call $_fmt_x
              (i64.load
               (local.get $9)
              )
              (local.get $20)
              (i32.and
               (local.get $7)
               (i32.const 32)
              )
             )
            )
            (local.set $13
             (select
              (i32.const 0)
              (i32.const 2)
              (local.tee $5
               (i32.or
                (i32.eqz
                 (i32.and
                  (local.tee $6
                   (local.get $5)
                  )
                  (i32.const 8)
                 )
                )
                (i64.eq
                 (i64.load
                  (local.get $9)
                 )
                 (i64.const 0)
                )
               )
              )
             )
            )
            (local.set $12
             (select
              (i32.const 16626)
              (i32.add
               (i32.shr_u
                (local.get $7)
                (i32.const 4)
               )
               (i32.const 16626)
              )
              (local.get $5)
             )
            )
            (br $__rjti$6)
           )
           (local.set $14
            (call $_fmt_u
             (local.get $21)
             (local.get $20)
            )
           )
           (local.set $6
            (local.get $5)
           )
           (br $__rjti$6)
          )
          (local.set $1
           (i32.const 0)
          )
          (local.set $7
           (i32.load
            (local.get $9)
           )
          )
          (block $__rjto$2
           (block $__rjti$2
            (loop $while-in47
             (if
              (local.tee $10
               (i32.load
                (local.get $7)
               )
              )
              (block
               (br_if $__rjti$2
                (i32.or
                 (local.tee $12
                  (i32.lt_s
                   (local.tee $10
                    (call $_wctomb
                     (local.get $22)
                     (local.get $10)
                    )
                   )
                   (i32.const 0)
                  )
                 )
                 (i32.gt_u
                  (local.get $10)
                  (i32.sub
                   (local.get $6)
                   (local.get $1)
                  )
                 )
                )
               )
               (local.set $7
                (i32.add
                 (local.get $7)
                 (i32.const 4)
                )
               )
               (br_if $while-in47
                (i32.gt_u
                 (local.get $6)
                 (local.tee $1
                  (i32.add
                   (local.get $1)
                   (local.get $10)
                  )
                 )
                )
               )
              )
             )
            )
            (br $__rjto$2)
           )
           (if
            (local.get $12)
            (block
             (local.set $8
              (i32.const -1)
             )
             (br $label$break$L1)
            )
           )
          )
          (call $_pad_660
           (local.get $0)
           (i32.const 32)
           (local.get $15)
           (local.get $1)
           (local.get $5)
          )
          (if
           (local.get $1)
           (block
            (local.set $6
             (i32.const 0)
            )
            (local.set $7
             (i32.load
              (local.get $9)
             )
            )
            (loop $while-in49
             (br_if $__rjti$7
              (i32.eqz
               (local.tee $10
                (i32.load
                 (local.get $7)
                )
               )
              )
             )
             (br_if $__rjti$7
              (i32.gt_s
               (local.tee $6
                (i32.add
                 (local.tee $10
                  (call $_wctomb
                   (local.get $22)
                   (local.get $10)
                  )
                 )
                 (local.get $6)
                )
               )
               (local.get $1)
              )
             )
             (local.set $7
              (i32.add
               (local.get $7)
               (i32.const 4)
              )
             )
             (call $_out
              (local.get $0)
              (local.get $22)
              (local.get $10)
             )
             (br_if $while-in49
              (i32.lt_u
               (local.get $6)
               (local.get $1)
              )
             )
            )
           )
           (local.set $1
            (i32.const 0)
           )
          )
          (br $__rjti$7)
         )
         (local.set $7
          (select
           (local.get $14)
           (local.get $20)
           (local.tee $17
            (i32.or
             (local.tee $10
              (i64.ne
               (i64.load
                (local.get $9)
               )
               (i64.const 0)
              )
             )
             (i32.ne
              (local.get $1)
              (i32.const 0)
             )
            )
           )
          )
         )
         (local.set $5
          (select
           (i32.and
            (local.get $6)
            (i32.const -65537)
           )
           (local.get $6)
           (i32.gt_s
            (local.get $1)
            (i32.const -1)
           )
          )
         )
         (local.set $6
          (select
           (select
            (local.get $1)
            (local.tee $6
             (i32.add
              (i32.sub
               (local.get $19)
               (local.get $14)
              )
              (i32.xor
               (local.get $10)
               (i32.const 1)
              )
             )
            )
            (i32.gt_s
             (local.get $1)
             (local.get $6)
            )
           )
           (i32.const 0)
           (local.get $17)
          )
         )
         (local.set $1
          (local.get $19)
         )
         (br $__rjto$7)
        )
        (call $_pad_660
         (local.get $0)
         (i32.const 32)
         (local.get $15)
         (local.get $1)
         (i32.xor
          (local.get $5)
          (i32.const 8192)
         )
        )
        (local.set $1
         (select
          (local.get $15)
          (local.get $1)
          (i32.gt_s
           (local.get $15)
           (local.get $1)
          )
         )
        )
        (br $label$break$L77)
       )
       (call $_pad_660
        (local.get $0)
        (i32.const 32)
        (local.tee $1
         (select
          (local.tee $6
           (i32.add
            (local.get $13)
            (local.tee $14
             (select
              (local.tee $10
               (i32.sub
                (local.get $1)
                (local.get $7)
               )
              )
              (local.get $6)
              (i32.lt_s
               (local.get $6)
               (local.get $10)
              )
             )
            )
           )
          )
          (local.get $15)
          (i32.lt_s
           (local.get $15)
           (local.get $6)
          )
         )
        )
        (local.get $6)
        (local.get $5)
       )
       (call $_out
        (local.get $0)
        (local.get $12)
        (local.get $13)
       )
       (call $_pad_660
        (local.get $0)
        (i32.const 48)
        (local.get $1)
        (local.get $6)
        (i32.xor
         (local.get $5)
         (i32.const 65536)
        )
       )
       (call $_pad_660
        (local.get $0)
        (i32.const 48)
        (local.get $14)
        (local.get $10)
        (i32.const 0)
       )
       (call $_out
        (local.get $0)
        (local.get $7)
        (local.get $10)
       )
       (call $_pad_660
        (local.get $0)
        (i32.const 32)
        (local.get $1)
        (local.get $6)
        (i32.xor
         (local.get $5)
         (i32.const 8192)
        )
       )
      )
      (local.set $5
       (local.get $24)
      )
      (br $label$continue$L1)
     )
    )
    (br $label$break$L123)
   )
   (if
    (i32.eqz
     (local.get $0)
    )
    (local.set $8
     (if (result i32)
      (local.get $5)
      (block (result i32)
       (local.set $0
        (i32.const 1)
       )
       (loop $while-in52
        (if
         (local.tee $1
          (i32.load
           (i32.add
            (i32.shl
             (local.get $0)
             (i32.const 2)
            )
            (local.get $4)
           )
          )
         )
         (block
          (call $_pop_arg
           (i32.add
            (i32.shl
             (local.get $0)
             (i32.const 3)
            )
            (local.get $3)
           )
           (local.get $1)
           (local.get $2)
          )
          (br_if $while-in52
           (i32.lt_u
            (local.tee $0
             (i32.add
              (local.get $0)
              (i32.const 1)
             )
            )
            (i32.const 10)
           )
          )
          (local.set $8
           (i32.const 1)
          )
          (br $label$break$L123)
         )
        )
       )
       (loop $while-in54 (result i32)
        (if
         (i32.load
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (block
          (local.set $8
           (i32.const -1)
          )
          (br $label$break$L123)
         )
        )
        (br_if $while-in54
         (i32.lt_u
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
          (i32.const 10)
         )
        )
        (i32.const 1)
       )
      )
      (i32.const 0)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $25)
  )
  (local.get $8)
 )
 (func $_out (; 565 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 32)
    )
   )
   (drop
    (call $___fwritex
     (local.get $1)
     (local.get $2)
     (local.get $0)
    )
   )
  )
 )
 (func $_getint (; 566 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (if
   (call $_isdigit
    (i32.load8_s
     (i32.load
      (local.get $0)
     )
    )
   )
   (loop $while-in
    (local.set $1
     (i32.add
      (i32.load8_s
       (local.tee $2
        (i32.load
         (local.get $0)
        )
       )
      )
      (i32.add
       (i32.mul
        (local.get $1)
        (i32.const 10)
       )
       (i32.const -48)
      )
     )
    )
    (i32.store
     (local.get $0)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (br_if $while-in
     (call $_isdigit
      (i32.load8_s offset=1
       (local.get $2)
      )
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_pop_arg (; 567 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 f64)
  (if
   (i32.le_u
    (local.get $1)
    (i32.const 20)
   )
   (block $label$break$L1
    (block $switch-case9
     (block $switch-case8
      (block $switch-case7
       (block $switch-case6
        (block $switch-case5
         (block $switch-case4
          (block $switch-case3
           (block $switch-case2
            (block $switch-case1
             (block $switch-case
              (br_table $switch-case $switch-case1 $switch-case2 $switch-case3 $switch-case4 $switch-case5 $switch-case6 $switch-case7 $switch-case8 $switch-case9 $label$break$L1
               (i32.sub
                (local.get $1)
                (i32.const 9)
               )
              )
             )
             (local.set $3
              (i32.load
               (local.tee $1
                (i32.and
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 3)
                 )
                 (i32.const -4)
                )
               )
              )
             )
             (i32.store
              (local.get $2)
              (i32.add
               (local.get $1)
               (i32.const 4)
              )
             )
             (i32.store
              (local.get $0)
              (local.get $3)
             )
             (br $label$break$L1)
            )
            (local.set $3
             (i32.load
              (local.tee $1
               (i32.and
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 3)
                )
                (i32.const -4)
               )
              )
             )
            )
            (i32.store
             (local.get $2)
             (i32.add
              (local.get $1)
              (i32.const 4)
             )
            )
            (i64.store
             (local.get $0)
             (i64.extend_i32_s
              (local.get $3)
             )
            )
            (br $label$break$L1)
           )
           (local.set $3
            (i32.load
             (local.tee $1
              (i32.and
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 3)
               )
               (i32.const -4)
              )
             )
            )
           )
           (i32.store
            (local.get $2)
            (i32.add
             (local.get $1)
             (i32.const 4)
            )
           )
           (i64.store
            (local.get $0)
            (i64.extend_i32_u
             (local.get $3)
            )
           )
           (br $label$break$L1)
          )
          (local.set $4
           (i64.load
            (local.tee $1
             (i32.and
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 7)
              )
              (i32.const -8)
             )
            )
           )
          )
          (i32.store
           (local.get $2)
           (i32.add
            (local.get $1)
            (i32.const 8)
           )
          )
          (i64.store
           (local.get $0)
           (local.get $4)
          )
          (br $label$break$L1)
         )
         (local.set $3
          (i32.load
           (local.tee $1
            (i32.and
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 3)
             )
             (i32.const -4)
            )
           )
          )
         )
         (i32.store
          (local.get $2)
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
         )
         (i64.store
          (local.get $0)
          (i64.extend_i32_s
           (i32.shr_s
            (i32.shl
             (i32.and
              (local.get $3)
              (i32.const 65535)
             )
             (i32.const 16)
            )
            (i32.const 16)
           )
          )
         )
         (br $label$break$L1)
        )
        (local.set $3
         (i32.load
          (local.tee $1
           (i32.and
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 3)
            )
            (i32.const -4)
           )
          )
         )
        )
        (i32.store
         (local.get $2)
         (i32.add
          (local.get $1)
          (i32.const 4)
         )
        )
        (i64.store
         (local.get $0)
         (i64.extend_i32_u
          (i32.and
           (local.get $3)
           (i32.const 65535)
          )
         )
        )
        (br $label$break$L1)
       )
       (local.set $3
        (i32.load
         (local.tee $1
          (i32.and
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 3)
           )
           (i32.const -4)
          )
         )
        )
       )
       (i32.store
        (local.get $2)
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (i64.store
        (local.get $0)
        (i64.extend_i32_s
         (i32.shr_s
          (i32.shl
           (i32.and
            (local.get $3)
            (i32.const 255)
           )
           (i32.const 24)
          )
          (i32.const 24)
         )
        )
       )
       (br $label$break$L1)
      )
      (local.set $3
       (i32.load
        (local.tee $1
         (i32.and
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 3)
          )
          (i32.const -4)
         )
        )
       )
      )
      (i32.store
       (local.get $2)
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
      (i64.store
       (local.get $0)
       (i64.extend_i32_u
        (i32.and
         (local.get $3)
         (i32.const 255)
        )
       )
      )
      (br $label$break$L1)
     )
     (local.set $5
      (f64.load
       (local.tee $1
        (i32.and
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 7)
         )
         (i32.const -8)
        )
       )
      )
     )
     (i32.store
      (local.get $2)
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (f64.store
      (local.get $0)
      (local.get $5)
     )
     (br $label$break$L1)
    )
    (call_indirect (type $FUNCSIG$vii)
     (local.get $0)
     (local.get $2)
     (i32.const 164)
    )
   )
  )
 )
 (func $_fmt_x (; 568 ;) (; has Stack IR ;) (param $0 i64) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i64.ne
    (local.get $0)
    (i64.const 0)
   )
   (loop $while-in
    (i32.store8
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
     )
     (i32.or
      (local.get $2)
      (i32.load8_u
       (i32.add
        (i32.and
         (i32.wrap_i64
          (local.get $0)
         )
         (i32.const 15)
        )
        (i32.const 8208)
       )
      )
     )
    )
    (br_if $while-in
     (i64.ne
      (local.tee $0
       (i64.shr_u
        (local.get $0)
        (i64.const 4)
       )
      )
      (i64.const 0)
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_fmt_o (; 569 ;) (; has Stack IR ;) (param $0 i64) (param $1 i32) (result i32)
  (if
   (i64.ne
    (local.get $0)
    (i64.const 0)
   )
   (loop $while-in
    (i32.store8
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
     )
     (i32.or
      (i32.and
       (i32.wrap_i64
        (local.get $0)
       )
       (i32.const 7)
      )
      (i32.const 48)
     )
    )
    (br_if $while-in
     (i64.ne
      (local.tee $0
       (i64.shr_u
        (local.get $0)
        (i64.const 3)
       )
      )
      (i64.const 0)
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_fmt_u (; 570 ;) (; has Stack IR ;) (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local.set $2
   (i32.wrap_i64
    (local.get $0)
   )
  )
  (if
   (i64.gt_u
    (local.get $0)
    (i64.const 4294967295)
   )
   (block
    (loop $while-in
     (i32.store8
      (local.tee $1
       (i32.add
        (local.get $1)
        (i32.const -1)
       )
      )
      (i32.or
       (i32.and
        (i32.wrap_i64
         (i64.sub
          (local.get $0)
          (i64.mul
           (local.tee $3
            (i64.div_u
             (local.get $0)
             (i64.const 10)
            )
           )
           (i64.const 10)
          )
         )
        )
        (i32.const 255)
       )
       (i32.const 48)
      )
     )
     (if
      (i64.gt_u
       (local.get $0)
       (i64.const 42949672959)
      )
      (block
       (local.set $0
        (local.get $3)
       )
       (br $while-in)
      )
     )
    )
    (local.set $2
     (i32.wrap_i64
      (local.get $3)
     )
    )
   )
  )
  (if
   (local.get $2)
   (loop $while-in1
    (i32.store8
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
     )
     (i32.or
      (i32.sub
       (local.get $2)
       (i32.mul
        (local.tee $4
         (i32.div_u
          (local.get $2)
          (i32.const 10)
         )
        )
        (i32.const 10)
       )
      )
      (i32.const 48)
     )
    )
    (if
     (i32.ge_u
      (local.get $2)
      (i32.const 10)
     )
     (block
      (local.set $2
       (local.get $4)
      )
      (br $while-in1)
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_memchr (; 571 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (block $__rjto$3
   (block $__rjti$3
    (block $__rjti$2
     (if
      (i32.and
       (local.tee $2
        (i32.ne
         (local.get $1)
         (i32.const 0)
        )
       )
       (i32.ne
        (i32.and
         (local.get $0)
         (i32.const 3)
        )
        (i32.const 0)
       )
      )
      (loop $while-in
       (br_if $__rjti$2
        (i32.eqz
         (i32.load8_u
          (local.get $0)
         )
        )
       )
       (br_if $while-in
        (i32.and
         (local.tee $2
          (i32.ne
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const -1)
            )
           )
           (i32.const 0)
          )
         )
         (i32.ne
          (i32.and
           (local.tee $0
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
           (i32.const 3)
          )
          (i32.const 0)
         )
        )
       )
      )
     )
     (br_if $__rjti$3
      (i32.eqz
       (local.get $2)
      )
     )
    )
    (if
     (i32.eqz
      (i32.load8_u
       (local.get $0)
      )
     )
     (block
      (br_if $__rjti$3
       (i32.eqz
        (local.get $1)
       )
      )
      (br $__rjto$3)
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.le_u
        (local.get $1)
        (i32.const 3)
       )
      )
      (loop $while-in3
       (if
        (i32.eqz
         (i32.and
          (i32.xor
           (i32.and
            (local.tee $2
             (i32.load
              (local.get $0)
             )
            )
            (i32.const -2139062144)
           )
           (i32.const -2139062144)
          )
          (i32.add
           (local.get $2)
           (i32.const -16843009)
          )
         )
        )
        (block
         (local.set $0
          (i32.add
           (local.get $0)
           (i32.const 4)
          )
         )
         (br_if $while-in3
          (i32.gt_u
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const -4)
            )
           )
           (i32.const 3)
          )
         )
         (br $__rjti$0)
        )
       )
      )
      (br $__rjto$0)
     )
     (br_if $__rjti$3
      (i32.eqz
       (local.get $1)
      )
     )
    )
    (loop $while-in5
     (br_if $__rjto$3
      (i32.eqz
       (i32.load8_u
        (local.get $0)
       )
      )
     )
     (br_if $__rjti$3
      (i32.eqz
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.const -1)
        )
       )
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
   (local.set $0
    (i32.const 0)
   )
  )
  (local.get $0)
 )
 (func $_pad_660 (; 572 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 256)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 256)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.get $4)
      (i32.const 73728)
     )
    )
    (i32.gt_s
     (local.get $2)
     (local.get $3)
    )
   )
   (block
    (drop
     (call $_memset
      (local.get $5)
      (i32.shr_s
       (i32.shl
        (local.get $1)
        (i32.const 24)
       )
       (i32.const 24)
      )
      (select
       (local.tee $1
        (i32.sub
         (local.get $2)
         (local.get $3)
        )
       )
       (i32.const 256)
       (i32.lt_u
        (local.get $1)
        (i32.const 256)
       )
      )
     )
    )
    (if
     (i32.gt_u
      (local.get $1)
      (i32.const 255)
     )
     (block
      (local.set $2
       (i32.sub
        (local.get $2)
        (local.get $3)
       )
      )
      (loop $while-in
       (call $_out
        (local.get $0)
        (local.get $5)
        (i32.const 256)
       )
       (br_if $while-in
        (i32.gt_u
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const -256)
          )
         )
         (i32.const 255)
        )
       )
      )
      (local.set $1
       (i32.and
        (local.get $2)
        (i32.const 255)
       )
      )
     )
    )
    (call $_out
     (local.get $0)
     (local.get $5)
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $_wctomb (; 573 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (local.get $0)
   (call $_wcrtomb
    (local.get $0)
    (local.get $1)
   )
   (i32.const 0)
  )
 )
 (func $_wcrtomb (; 574 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (local.get $0)
   (block $do-once (result i32)
    (if
     (i32.lt_u
      (local.get $1)
      (i32.const 128)
     )
     (block
      (i32.store8
       (local.get $0)
       (local.get $1)
      )
      (br $do-once
       (i32.const 1)
      )
     )
    )
    (if
     (i32.eqz
      (i32.atomic.load
       (i32.load offset=188
        (global.get $__pthread_ptr)
       )
      )
     )
     (if
      (i32.eq
       (i32.and
        (local.get $1)
        (i32.const -128)
       )
       (i32.const 57216)
      )
      (block
       (i32.store8
        (local.get $0)
        (local.get $1)
       )
       (br $do-once
        (i32.const 1)
       )
      )
      (block
       (i32.store
        (call $___errno_location)
        (i32.const 84)
       )
       (br $do-once
        (i32.const -1)
       )
      )
     )
    )
    (if
     (i32.lt_u
      (local.get $1)
      (i32.const 2048)
     )
     (block
      (i32.store8
       (local.get $0)
       (i32.or
        (i32.shr_u
         (local.get $1)
         (i32.const 6)
        )
        (i32.const 192)
       )
      )
      (i32.store8 offset=1
       (local.get $0)
       (i32.or
        (i32.and
         (local.get $1)
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (br $do-once
       (i32.const 2)
      )
     )
    )
    (if
     (i32.or
      (i32.eq
       (i32.and
        (local.get $1)
        (i32.const -8192)
       )
       (i32.const 57344)
      )
      (i32.lt_u
       (local.get $1)
       (i32.const 55296)
      )
     )
     (block
      (i32.store8
       (local.get $0)
       (i32.or
        (i32.shr_u
         (local.get $1)
         (i32.const 12)
        )
        (i32.const 224)
       )
      )
      (i32.store8 offset=1
       (local.get $0)
       (i32.or
        (i32.and
         (i32.shr_u
          (local.get $1)
          (i32.const 6)
         )
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.store8 offset=2
       (local.get $0)
       (i32.or
        (i32.and
         (local.get $1)
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (br $do-once
       (i32.const 3)
      )
     )
    )
    (if (result i32)
     (i32.lt_u
      (i32.add
       (local.get $1)
       (i32.const -65536)
      )
      (i32.const 1048576)
     )
     (block (result i32)
      (i32.store8
       (local.get $0)
       (i32.or
        (i32.shr_u
         (local.get $1)
         (i32.const 18)
        )
        (i32.const 240)
       )
      )
      (i32.store8 offset=1
       (local.get $0)
       (i32.or
        (i32.and
         (i32.shr_u
          (local.get $1)
          (i32.const 12)
         )
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.store8 offset=2
       (local.get $0)
       (i32.or
        (i32.and
         (i32.shr_u
          (local.get $1)
          (i32.const 6)
         )
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.store8 offset=3
       (local.get $0)
       (i32.or
        (i32.and
         (local.get $1)
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.const 4)
     )
     (block (result i32)
      (i32.store
       (call $___errno_location)
       (i32.const 84)
      )
      (i32.const -1)
     )
    )
   )
   (i32.const 1)
  )
 )
 (func $___fwritex (; 575 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (block $label$break$L5
   (block $__rjti$0
    (br_if $__rjti$0
     (local.tee $3
      (i32.load offset=16
       (local.get $2)
      )
     )
    )
    (local.set $4
     (if (result i32)
      (call $___towrite
       (local.get $2)
      )
      (i32.const 0)
      (block
       (local.set $3
        (i32.load offset=16
         (local.get $2)
        )
       )
       (br $__rjti$0)
      )
     )
    )
    (br $label$break$L5)
   )
   (if
    (i32.lt_u
     (i32.sub
      (local.get $3)
      (local.tee $4
       (i32.load offset=20
        (local.get $2)
       )
      )
     )
     (local.get $1)
    )
    (block
     (local.set $3
      (i32.load offset=36
       (local.get $2)
      )
     )
     (local.set $4
      (call_indirect (type $FUNCSIG$iiii)
       (local.get $2)
       (local.get $0)
       (local.get $1)
       (i32.add
        (i32.and
         (local.get $3)
         (i32.const 15)
        )
        (i32.const 58)
       )
      )
     )
     (br $label$break$L5)
    )
   )
   (local.set $5
    (if (result i32)
     (i32.or
      (i32.eqz
       (local.get $1)
      )
      (i32.lt_s
       (i32.load8_s offset=75
        (local.get $2)
       )
       (i32.const 0)
      )
     )
     (i32.const 0)
     (block $label$break$L10 (result i32)
      (local.set $3
       (local.get $1)
      )
      (loop $while-in
       (if
        (i32.ne
         (i32.load8_s
          (i32.add
           (local.get $0)
           (local.tee $5
            (i32.add
             (local.get $3)
             (i32.const -1)
            )
           )
          )
         )
         (i32.const 10)
        )
        (if
         (local.get $5)
         (block
          (local.set $3
           (local.get $5)
          )
          (br $while-in)
         )
         (br $label$break$L10
          (i32.const 0)
         )
        )
       )
      )
      (local.set $4
       (i32.load offset=36
        (local.get $2)
       )
      )
      (br_if $label$break$L5
       (i32.lt_u
        (local.tee $4
         (call_indirect (type $FUNCSIG$iiii)
          (local.get $2)
          (local.get $0)
          (local.get $3)
          (i32.add
           (i32.and
            (local.get $4)
            (i32.const 15)
           )
           (i32.const 58)
          )
         )
        )
        (local.get $3)
       )
      )
      (local.set $4
       (i32.load offset=20
        (local.get $2)
       )
      )
      (local.set $1
       (i32.sub
        (local.get $1)
        (local.get $3)
       )
      )
      (local.set $0
       (i32.add
        (local.get $0)
        (local.get $3)
       )
      )
      (local.get $3)
     )
    )
   )
   (drop
    (call $_memcpy
     (local.get $4)
     (local.get $0)
     (local.get $1)
    )
   )
   (i32.store offset=20
    (local.get $2)
    (i32.add
     (i32.load offset=20
      (local.get $2)
     )
     (local.get $1)
    )
   )
   (local.set $4
    (i32.add
     (local.get $1)
     (local.get $5)
    )
   )
  )
  (local.get $4)
 )
 (func $___towrite (; 576 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (i32.store8 offset=74
   (local.get $0)
   (i32.or
    (local.tee $1
     (i32.load8_s offset=74
      (local.get $0)
     )
    )
    (i32.add
     (local.get $1)
     (i32.const 255)
    )
   )
  )
  (if (result i32)
   (i32.and
    (local.tee $1
     (i32.load
      (local.get $0)
     )
    )
    (i32.const 8)
   )
   (block (result i32)
    (i32.store
     (local.get $0)
     (i32.or
      (local.get $1)
      (i32.const 32)
     )
    )
    (i32.const -1)
   )
   (block (result i32)
    (i32.store offset=8
     (local.get $0)
     (i32.const 0)
    )
    (i32.store offset=4
     (local.get $0)
     (i32.const 0)
    )
    (i32.store offset=28
     (local.get $0)
     (local.tee $1
      (i32.load offset=44
       (local.get $0)
      )
     )
    )
    (i32.store offset=20
     (local.get $0)
     (local.get $1)
    )
    (i32.store offset=16
     (local.get $0)
     (i32.add
      (local.get $1)
      (i32.load offset=48
       (local.get $0)
      )
     )
    )
    (i32.const 0)
   )
  )
 )
 (func $_frexp (; 577 ;) (; has Stack IR ;) (param $0 f64) (param $1 i32) (result f64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i32)
  (block $switch
   (block $switch-default
    (if
     (local.tee $4
      (i32.and
       (i32.wrap_i64
        (local.tee $3
         (i64.shr_u
          (local.tee $2
           (i64.reinterpret_f64
            (local.get $0)
           )
          )
          (i64.const 52)
         )
        )
       )
       (i32.const 2047)
      )
     )
     (if
      (i32.eq
       (local.get $4)
       (i32.const 2047)
      )
      (br $switch)
      (br $switch-default)
     )
    )
    (i32.store
     (local.get $1)
     (if (result i32)
      (f64.ne
       (local.get $0)
       (f64.const 0)
      )
      (block (result i32)
       (local.set $0
        (call $_frexp
         (f64.mul
          (local.get $0)
          (f64.const 18446744073709551615)
         )
         (local.get $1)
        )
       )
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const -64)
       )
      )
      (i32.const 0)
     )
    )
    (br $switch)
   )
   (i32.store
    (local.get $1)
    (i32.add
     (i32.and
      (i32.wrap_i64
       (local.get $3)
      )
      (i32.const 2047)
     )
     (i32.const -1022)
    )
   )
   (local.set $0
    (f64.reinterpret_i64
     (i64.or
      (i64.and
       (local.get $2)
       (i64.const -9218868437227405313)
      )
      (i64.const 4602678819172646912)
     )
    )
   )
  )
  (local.get $0)
 )
 (func $_sn_write (; 578 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (select
    (local.get $2)
    (local.tee $3
     (i32.sub
      (i32.load offset=16
       (local.get $0)
      )
      (local.tee $4
       (i32.load offset=20
        (local.get $0)
       )
      )
     )
    )
    (i32.gt_u
     (local.get $3)
     (local.get $2)
    )
   )
  )
  (drop
   (call $_memcpy
    (local.get $4)
    (local.get $1)
    (local.get $3)
   )
  )
  (i32.store offset=20
   (local.get $0)
   (i32.add
    (i32.load offset=20
     (local.get $0)
    )
    (local.get $3)
   )
  )
  (local.get $2)
 )
 (func $_scalbn (; 579 ;) (; has Stack IR ;) (param $0 f64) (param $1 i32) (result f64)
  (local $2 i32)
  (if
   (i32.gt_s
    (local.get $1)
    (i32.const 1023)
   )
   (block
    (local.set $1
     (select
      (select
       (local.tee $2
        (i32.add
         (local.get $1)
         (i32.const -2046)
        )
       )
       (i32.const 1023)
       (i32.lt_s
        (local.get $2)
        (i32.const 1023)
       )
      )
      (i32.add
       (local.get $1)
       (i32.const -1023)
      )
      (local.tee $2
       (i32.gt_s
        (local.get $1)
        (i32.const 2046)
       )
      )
     )
    )
    (local.set $0
     (select
      (f64.mul
       (local.tee $0
        (f64.mul
         (local.get $0)
         (f64.const 8988465674311579538646525e283)
        )
       )
       (f64.const 8988465674311579538646525e283)
      )
      (local.get $0)
      (local.get $2)
     )
    )
   )
   (if
    (i32.lt_s
     (local.get $1)
     (i32.const -1022)
    )
    (block
     (local.set $1
      (select
       (select
        (local.tee $2
         (i32.add
          (local.get $1)
          (i32.const 2044)
         )
        )
        (i32.const -1022)
        (i32.gt_s
         (local.get $2)
         (i32.const -1022)
        )
       )
       (i32.add
        (local.get $1)
        (i32.const 1022)
       )
       (local.tee $2
        (i32.lt_s
         (local.get $1)
         (i32.const -2044)
        )
       )
      )
     )
     (local.set $0
      (select
       (f64.mul
        (local.tee $0
         (f64.mul
          (local.get $0)
          (f64.const 2.2250738585072014e-308)
         )
        )
        (f64.const 2.2250738585072014e-308)
       )
       (local.get $0)
       (local.get $2)
      )
     )
    )
   )
  )
  (f64.mul
   (local.get $0)
   (f64.reinterpret_i64
    (i64.shl
     (i64.extend_i32_u
      (i32.add
       (local.get $1)
       (i32.const 1023)
      )
     )
     (i64.const 52)
    )
   )
  )
 )
 (func $_strlen (; 580 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.eqz
      (i32.and
       (local.tee $2
        (local.get $0)
       )
       (i32.const 3)
      )
     )
    )
    (local.set $1
     (local.get $2)
    )
    (loop $while-in
     (block $label$break$L1
      (if
       (i32.eqz
        (i32.load8_s
         (local.get $0)
        )
       )
       (block
        (local.set $0
         (local.get $1)
        )
        (br $label$break$L1)
       )
      )
      (br_if $while-in
       (i32.and
        (local.tee $1
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
        )
        (i32.const 3)
       )
      )
      (br $__rjti$0)
     )
    )
    (br $__rjto$0)
   )
   (loop $while-in1
    (local.set $1
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
    )
    (if
     (i32.eqz
      (i32.and
       (i32.xor
        (i32.and
         (local.tee $3
          (i32.load
           (local.get $0)
          )
         )
         (i32.const -2139062144)
        )
        (i32.const -2139062144)
       )
       (i32.add
        (local.get $3)
        (i32.const -16843009)
       )
      )
     )
     (block
      (local.set $0
       (local.get $1)
      )
      (br $while-in1)
     )
    )
   )
   (if
    (i32.and
     (local.get $3)
     (i32.const 255)
    )
    (loop $while-in3
     (br_if $while-in3
      (i32.load8_s
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
      )
     )
    )
   )
  )
  (i32.sub
   (local.get $0)
   (local.get $2)
  )
 )
 (func $_strchr (; 581 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (select
   (local.tee $0
    (call $___strchrnul
     (local.get $0)
     (local.get $1)
    )
   )
   (i32.const 0)
   (i32.eq
    (i32.load8_u
     (local.get $0)
    )
    (i32.and
     (local.get $1)
     (i32.const 255)
    )
   )
  )
 )
 (func $___strchrnul (; 582 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (local.tee $2
    (i32.and
     (local.get $1)
     (i32.const 255)
    )
   )
   (block $label$break$L1
    (if
     (i32.and
      (local.get $0)
      (i32.const 3)
     )
     (block
      (local.set $3
       (i32.and
        (local.get $1)
        (i32.const 255)
       )
      )
      (loop $while-in
       (br_if $label$break$L1
        (i32.or
         (i32.eq
          (local.tee $4
           (i32.load8_s
            (local.get $0)
           )
          )
          (i32.shr_s
           (i32.shl
            (local.get $3)
            (i32.const 24)
           )
           (i32.const 24)
          )
         )
         (i32.eqz
          (local.get $4)
         )
        )
       )
       (br_if $while-in
        (i32.and
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (i32.const 3)
        )
       )
      )
     )
    )
    (local.set $3
     (i32.mul
      (local.get $2)
      (i32.const 16843009)
     )
    )
    (if
     (i32.eqz
      (i32.and
       (i32.xor
        (i32.and
         (local.tee $2
          (i32.load
           (local.get $0)
          )
         )
         (i32.const -2139062144)
        )
        (i32.const -2139062144)
       )
       (i32.add
        (local.get $2)
        (i32.const -16843009)
       )
      )
     )
     (loop $while-in2
      (if
       (i32.eqz
        (i32.and
         (i32.xor
          (i32.and
           (local.tee $2
            (i32.xor
             (local.get $2)
             (local.get $3)
            )
           )
           (i32.const -2139062144)
          )
          (i32.const -2139062144)
         )
         (i32.add
          (local.get $2)
          (i32.const -16843009)
         )
        )
       )
       (br_if $while-in2
        (i32.eqz
         (i32.and
          (i32.xor
           (i32.and
            (local.tee $2
             (i32.load
              (local.tee $0
               (i32.add
                (local.get $0)
                (i32.const 4)
               )
              )
             )
            )
            (i32.const -2139062144)
           )
           (i32.const -2139062144)
          )
          (i32.add
           (local.get $2)
           (i32.const -16843009)
          )
         )
        )
       )
      )
     )
    )
    (local.set $2
     (i32.and
      (local.get $1)
      (i32.const 255)
     )
    )
    (loop $while-in4
     (local.set $1
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (if
      (i32.eqz
       (i32.or
        (i32.eq
         (local.tee $3
          (i32.load8_s
           (local.get $0)
          )
         )
         (i32.shr_s
          (i32.shl
           (local.get $2)
           (i32.const 24)
          )
          (i32.const 24)
         )
        )
        (i32.eqz
         (local.get $3)
        )
       )
      )
      (block
       (local.set $0
        (local.get $1)
       )
       (br $while-in4)
      )
     )
    )
   )
   (local.set $0
    (i32.add
     (call $_strlen
      (local.get $0)
     )
     (local.get $0)
    )
   )
  )
  (local.get $0)
 )
 (func $_strcpy (; 583 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $___stpcpy
   (local.get $0)
   (local.get $1)
  )
 )
 (func $___stpcpy (; 584 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.and
      (i32.xor
       (local.tee $2
        (local.get $1)
       )
       (local.get $0)
      )
      (i32.const 3)
     )
    )
    (block $label$break$L1
     (if
      (i32.and
       (local.get $2)
       (i32.const 3)
      )
      (loop $while-in
       (i32.store8
        (local.get $0)
        (local.tee $2
         (i32.load8_s
          (local.get $1)
         )
        )
       )
       (br_if $label$break$L1
        (i32.eqz
         (local.get $2)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (br_if $while-in
        (i32.and
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.const 3)
        )
       )
      )
     )
     (if
      (i32.eqz
       (i32.and
        (i32.xor
         (i32.and
          (local.tee $3
           (i32.load
            (local.get $1)
           )
          )
          (i32.const -2139062144)
         )
         (i32.const -2139062144)
        )
        (i32.add
         (local.get $3)
         (i32.const -16843009)
        )
       )
      )
      (local.set $0
       (loop $while-in1 (result i32)
        (local.set $2
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
        )
        (i32.store
         (local.get $0)
         (local.get $3)
        )
        (if (result i32)
         (i32.and
          (i32.xor
           (i32.and
            (local.tee $3
             (i32.load
              (local.tee $1
               (i32.add
                (local.get $1)
                (i32.const 4)
               )
              )
             )
            )
            (i32.const -2139062144)
           )
           (i32.const -2139062144)
          )
          (i32.add
           (local.get $3)
           (i32.const -16843009)
          )
         )
         (local.get $2)
         (block
          (local.set $0
           (local.get $2)
          )
          (br $while-in1)
         )
        )
       )
      )
     )
     (br $__rjti$0)
    )
    (br $__rjto$0)
   )
   (i32.store8
    (local.get $0)
    (local.tee $2
     (i32.load8_s
      (local.get $1)
     )
    )
   )
   (if
    (local.get $2)
    (loop $while-in3
     (i32.store8
      (local.tee $0
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (local.tee $2
       (i32.load8_s
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
       )
      )
     )
     (br_if $while-in3
      (local.get $2)
     )
    )
   )
  )
 )
 (func $___sindf (; 585 ;) (; has Stack IR ;) (param $0 f64) (result f32)
  (local $1 f64)
  (local $2 f64)
  (f32.demote_f64
   (f64.add
    (f64.mul
     (f64.mul
      (local.tee $2
       (f64.mul
        (local.tee $1
         (f64.mul
          (local.get $0)
          (local.get $0)
         )
        )
        (local.get $0)
       )
      )
      (f64.mul
       (local.get $1)
       (local.get $1)
      )
     )
     (f64.add
      (f64.mul
       (local.get $1)
       (f64.const 2.718311493989822e-06)
      )
      (f64.const -1.9839334836096632e-04)
     )
    )
    (f64.add
     (f64.mul
      (local.get $2)
      (f64.add
       (f64.mul
        (local.get $1)
        (f64.const 0.008333329385889463)
       )
       (f64.const -0.16666666641626524)
      )
     )
     (local.get $0)
    )
   )
  )
 )
 (func $___cosdf (; 586 ;) (; has Stack IR ;) (param $0 f64) (result f32)
  (local $1 f64)
  (local.set $1
   (f64.mul
    (local.tee $0
     (f64.mul
      (local.get $0)
      (local.get $0)
     )
    )
    (local.get $0)
   )
  )
  (f32.demote_f64
   (f64.add
    (f64.add
     (f64.sub
      (f64.const 1)
      (f64.mul
       (local.get $0)
       (f64.const 0.499999997251031)
      )
     )
     (f64.mul
      (local.get $1)
      (f64.const 0.04166662332373906)
     )
    )
    (f64.mul
     (f64.mul
      (local.get $0)
      (local.get $1)
     )
     (f64.add
      (f64.mul
       (local.get $0)
       (f64.const 2.439044879627741e-05)
      )
      (f64.const -0.001388676377460993)
     )
    )
   )
  )
 )
 (func $___rem_pio2_large (; 587 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local.set $20
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 560)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 560)
   )
  )
  (local.set $14
   (i32.add
    (local.get $11)
    (i32.const 320)
   )
  )
  (local.set $13
   (select
    (local.tee $3
     (i32.div_s
      (i32.add
       (local.get $2)
       (i32.const -3)
      )
      (i32.const 24)
     )
    )
    (i32.const 0)
    (i32.gt_s
     (local.get $3)
     (i32.const 0)
    )
   )
  )
  (if
   (i32.ge_s
    (local.tee $12
     (i32.load
      (i32.const 8224)
     )
    )
    (i32.const 0)
   )
   (block
    (local.set $6
     (i32.add
      (local.get $12)
      (i32.const 1)
     )
    )
    (local.set $3
     (i32.const 0)
    )
    (local.set $5
     (local.get $13)
    )
    (loop $while-in
     (f64.store
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 3)
       )
       (local.get $14)
      )
      (if (result f64)
       (i32.lt_s
        (local.get $5)
        (i32.const 0)
       )
       (f64.const 0)
       (f64.convert_i32_s
        (i32.load
         (i32.add
          (i32.shl
           (local.get $5)
           (i32.const 2)
          )
          (i32.const 8240)
         )
        )
       )
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.get $6)
      )
     )
    )
   )
  )
  (local.set $9
   (i32.add
    (local.get $11)
    (i32.const 480)
   )
  )
  (local.set $16
   (i32.add
    (local.get $11)
    (i32.const 160)
   )
  )
  (local.set $8
   (i32.add
    (local.tee $21
     (i32.mul
      (local.get $13)
      (i32.const -24)
     )
    )
    (i32.add
     (local.get $2)
     (i32.const -24)
    )
   )
  )
  (local.set $5
   (i32.const 0)
  )
  (loop $while-in1
   (local.set $6
    (local.get $5)
   )
   (local.set $4
    (f64.const 0)
   )
   (local.set $3
    (i32.const 0)
   )
   (loop $while-in3
    (local.set $4
     (f64.add
      (local.get $4)
      (f64.mul
       (f64.load
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 3)
         )
         (local.get $0)
        )
       )
       (f64.load
        (i32.add
         (i32.shl
          (i32.sub
           (local.get $6)
           (local.get $3)
          )
          (i32.const 3)
         )
         (local.get $14)
        )
       )
      )
     )
    )
    (br_if $while-in3
     (i32.ne
      (local.tee $3
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (i32.const 1)
     )
    )
   )
   (f64.store
    (i32.add
     (i32.shl
      (local.get $5)
      (i32.const 3)
     )
     (local.get $11)
    )
    (local.get $4)
   )
   (local.set $3
    (i32.add
     (local.get $5)
     (i32.const 1)
    )
   )
   (if
    (i32.lt_s
     (local.get $5)
     (local.get $12)
    )
    (block
     (local.set $5
      (local.get $3)
     )
     (br $while-in1)
    )
   )
  )
  (local.set $17
   (i32.gt_s
    (local.get $8)
    (i32.const 0)
   )
  )
  (local.set $18
   (i32.sub
    (i32.const 24)
    (local.get $8)
   )
  )
  (local.set $22
   (i32.sub
    (i32.const 23)
    (local.get $8)
   )
  )
  (local.set $23
   (i32.eqz
    (local.get $8)
   )
  )
  (local.set $3
   (local.get $12)
  )
  (block $__rjto$4
   (block $__rjti$4
    (loop $while-in5
     (block $__rjti$3
      (local.set $4
       (f64.load
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 3)
         )
         (local.get $11)
        )
       )
      )
      (if
       (local.tee $10
        (i32.gt_s
         (local.get $3)
         (i32.const 0)
        )
       )
       (block
        (local.set $6
         (i32.const 0)
        )
        (local.set $5
         (local.get $3)
        )
        (loop $while-in7
         (i32.store
          (i32.add
           (i32.shl
            (local.get $6)
            (i32.const 2)
           )
           (local.get $9)
          )
          (i32.trunc_f64_s
           (f64.sub
            (local.get $4)
            (f64.mul
             (local.tee $4
              (f64.convert_i32_s
               (i32.trunc_f64_s
                (f64.mul
                 (local.get $4)
                 (f64.const 5.960464477539063e-08)
                )
               )
              )
             )
             (f64.const 16777216)
            )
           )
          )
         )
         (local.set $4
          (f64.add
           (f64.load
            (i32.add
             (i32.shl
              (local.tee $7
               (i32.add
                (local.get $5)
                (i32.const -1)
               )
              )
              (i32.const 3)
             )
             (local.get $11)
            )
           )
           (local.get $4)
          )
         )
         (local.set $6
          (i32.add
           (local.get $6)
           (i32.const 1)
          )
         )
         (if
          (i32.gt_s
           (local.get $5)
           (i32.const 1)
          )
          (block
           (local.set $5
            (local.get $7)
           )
           (br $while-in7)
          )
         )
        )
       )
      )
      (local.set $5
       (i32.trunc_f64_s
        (local.tee $4
         (f64.sub
          (local.tee $4
           (call $_scalbn
            (local.get $4)
            (local.get $8)
           )
          )
          (f64.mul
           (f64.floor
            (f64.mul
             (local.get $4)
             (f64.const 0.125)
            )
           )
           (f64.const 8)
          )
         )
        )
       )
      )
      (local.set $4
       (f64.sub
        (local.get $4)
        (f64.convert_i32_s
         (local.get $5)
        )
       )
      )
      (block $__rjto$2
       (block $__rjti$2
        (block $__rjti$1
         (local.set $7
          (if (result i32)
           (local.get $17)
           (block
            (local.set $6
             (i32.shr_s
              (local.tee $15
               (i32.load
                (local.tee $7
                 (i32.add
                  (i32.shl
                   (i32.add
                    (local.get $3)
                    (i32.const -1)
                   )
                   (i32.const 2)
                  )
                  (local.get $9)
                 )
                )
               )
              )
              (local.get $18)
             )
            )
            (i32.store
             (local.get $7)
             (local.tee $7
              (i32.sub
               (local.get $15)
               (i32.shl
                (local.get $6)
                (local.get $18)
               )
              )
             )
            )
            (local.set $7
             (i32.shr_s
              (local.get $7)
              (local.get $22)
             )
            )
            (local.set $5
             (i32.add
              (local.get $5)
              (local.get $6)
             )
            )
            (br $__rjti$1)
           )
           (if (result i32)
            (local.get $23)
            (block
             (local.set $7
              (i32.shr_s
               (i32.load
                (i32.add
                 (i32.shl
                  (i32.add
                   (local.get $3)
                   (i32.const -1)
                  )
                  (i32.const 2)
                 )
                 (local.get $9)
                )
               )
               (i32.const 23)
              )
             )
             (br $__rjti$1)
            )
            (if (result i32)
             (f64.ge
              (local.get $4)
              (f64.const 0.5)
             )
             (block
              (local.set $7
               (i32.const 2)
              )
              (br $__rjti$2)
             )
             (i32.const 0)
            )
           )
          )
         )
         (br $__rjto$2)
        )
        (br_if $__rjti$2
         (i32.gt_s
          (local.get $7)
          (i32.const 0)
         )
        )
        (br $__rjto$2)
       )
       (local.set $6
        (local.get $5)
       )
       (local.set $10
        (if (result i32)
         (local.get $10)
         (block (result i32)
          (local.set $5
           (i32.const 0)
          )
          (local.set $10
           (i32.const 0)
          )
          (loop $while-in9 (result i32)
           (local.set $15
            (i32.load
             (local.tee $24
              (i32.add
               (i32.shl
                (local.get $10)
                (i32.const 2)
               )
               (local.get $9)
              )
             )
            )
           )
           (block $__rjto$0
            (block $__rjti$0
             (local.set $5
              (if (result i32)
               (local.get $5)
               (block
                (local.set $19
                 (i32.const 16777215)
                )
                (br $__rjti$0)
               )
               (if (result i32)
                (local.get $15)
                (block
                 (local.set $19
                  (i32.const 16777216)
                 )
                 (local.set $5
                  (i32.const 1)
                 )
                 (br $__rjti$0)
                )
                (i32.const 0)
               )
              )
             )
             (br $__rjto$0)
            )
            (i32.store
             (local.get $24)
             (i32.sub
              (local.get $19)
              (local.get $15)
             )
            )
           )
           (br_if $while-in9
            (i32.ne
             (local.get $3)
             (local.tee $10
              (i32.add
               (local.get $10)
               (i32.const 1)
              )
             )
            )
           )
           (local.get $5)
          )
         )
         (i32.const 0)
        )
       )
       (if
        (local.get $17)
        (block $label$break$L44
         (block $switch-case11
          (block $switch-case
           (br_table $switch-case $switch-case11 $label$break$L44
            (i32.sub
             (local.get $8)
             (i32.const 1)
            )
           )
          )
          (i32.store
           (local.tee $5
            (i32.add
             (i32.shl
              (i32.add
               (local.get $3)
               (i32.const -1)
              )
              (i32.const 2)
             )
             (local.get $9)
            )
           )
           (i32.and
            (i32.load
             (local.get $5)
            )
            (i32.const 8388607)
           )
          )
          (br $label$break$L44)
         )
         (i32.store
          (local.tee $5
           (i32.add
            (i32.shl
             (i32.add
              (local.get $3)
              (i32.const -1)
             )
             (i32.const 2)
            )
            (local.get $9)
           )
          )
          (i32.and
           (i32.load
            (local.get $5)
           )
           (i32.const 4194303)
          )
         )
        )
       )
       (local.set $5
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (if
        (i32.eq
         (local.get $7)
         (i32.const 2)
        )
        (block
         (local.set $4
          (f64.sub
           (f64.const 1)
           (local.get $4)
          )
         )
         (if
          (local.get $10)
          (local.set $4
           (f64.sub
            (local.get $4)
            (call $_scalbn
             (f64.const 1)
             (local.get $8)
            )
           )
          )
         )
         (local.set $7
          (i32.const 2)
         )
        )
       )
      )
      (br_if $__rjti$4
       (f64.ne
        (local.get $4)
        (f64.const 0)
       )
      )
      (if
       (i32.gt_s
        (local.get $3)
        (local.get $12)
       )
       (block
        (local.set $6
         (local.get $3)
        )
        (local.set $10
         (i32.const 0)
        )
        (loop $while-in13
         (local.set $10
          (i32.or
           (i32.load
            (i32.add
             (i32.shl
              (local.tee $6
               (i32.add
                (local.get $6)
                (i32.const -1)
               )
              )
              (i32.const 2)
             )
             (local.get $9)
            )
           )
           (local.get $10)
          )
         )
         (br_if $while-in13
          (i32.gt_s
           (local.get $6)
           (local.get $12)
          )
         )
        )
        (br_if $__rjti$3
         (local.get $10)
        )
       )
      )
      (local.set $6
       (i32.const 1)
      )
      (loop $while-in15
       (local.set $5
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (if
        (i32.eqz
         (i32.load
          (i32.add
           (i32.shl
            (i32.sub
             (local.get $12)
             (local.get $6)
            )
            (i32.const 2)
           )
           (local.get $9)
          )
         )
        )
        (block
         (local.set $6
          (local.get $5)
         )
         (br $while-in15)
        )
       )
      )
      (local.set $6
       (i32.add
        (local.get $3)
        (local.get $6)
       )
      )
      (loop $while-in17
       (f64.store
        (i32.add
         (i32.shl
          (local.tee $7
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (i32.const 3)
         )
         (local.get $14)
        )
        (f64.convert_i32_s
         (i32.load
          (i32.add
           (i32.shl
            (i32.add
             (local.tee $5
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (local.get $13)
            )
            (i32.const 2)
           )
           (i32.const 8240)
          )
         )
        )
       )
       (local.set $4
        (f64.const 0)
       )
       (local.set $3
        (i32.const 0)
       )
       (loop $while-in19
        (local.set $4
         (f64.add
          (local.get $4)
          (f64.mul
           (f64.load
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 3)
             )
             (local.get $0)
            )
           )
           (f64.load
            (i32.add
             (i32.shl
              (i32.sub
               (local.get $7)
               (local.get $3)
              )
              (i32.const 3)
             )
             (local.get $14)
            )
           )
          )
         )
        )
        (br_if $while-in19
         (i32.ne
          (local.tee $3
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (i32.const 1)
         )
        )
       )
       (f64.store
        (i32.add
         (i32.shl
          (local.get $5)
          (i32.const 3)
         )
         (local.get $11)
        )
        (local.get $4)
       )
       (if
        (i32.lt_s
         (local.get $5)
         (local.get $6)
        )
        (block
         (local.set $3
          (local.get $5)
         )
         (br $while-in17)
        )
       )
      )
      (local.set $3
       (local.get $6)
      )
      (br $while-in5)
     )
    )
    (local.set $0
     (local.get $3)
    )
    (local.set $2
     (local.get $8)
    )
    (loop $while-in21
     (local.set $2
      (i32.add
       (local.get $2)
       (i32.const -24)
      )
     )
     (br_if $while-in21
      (i32.eqz
       (i32.load
        (i32.add
         (i32.shl
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const -1)
           )
          )
          (i32.const 2)
         )
         (local.get $9)
        )
       )
      )
     )
    )
    (br $__rjto$4)
   )
   (i32.store
    (i32.add
     (i32.shl
      (local.tee $0
       (if (result i32)
        (f64.ge
         (local.tee $4
          (call $_scalbn
           (local.get $4)
           (i32.sub
            (i32.const 0)
            (local.get $8)
           )
          )
         )
         (f64.const 16777216)
        )
        (block (result i32)
         (i32.store
          (i32.add
           (i32.shl
            (local.get $3)
            (i32.const 2)
           )
           (local.get $9)
          )
          (i32.trunc_f64_s
           (f64.sub
            (local.get $4)
            (f64.mul
             (f64.convert_i32_s
              (local.tee $6
               (i32.trunc_f64_s
                (f64.mul
                 (local.get $4)
                 (f64.const 5.960464477539063e-08)
                )
               )
              )
             )
             (f64.const 16777216)
            )
           )
          )
         )
         (local.set $2
          (i32.add
           (local.get $2)
           (local.get $21)
          )
         )
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (block (result i32)
         (local.set $6
          (i32.trunc_f64_s
           (local.get $4)
          )
         )
         (local.set $2
          (local.get $8)
         )
         (local.get $3)
        )
       )
      )
      (i32.const 2)
     )
     (local.get $9)
    )
    (local.get $6)
   )
  )
  (local.set $4
   (call $_scalbn
    (f64.const 1)
    (local.get $2)
   )
  )
  (if
   (local.tee $8
    (i32.gt_s
     (local.get $0)
     (i32.const -1)
    )
   )
   (block
    (local.set $2
     (local.get $0)
    )
    (loop $while-in23
     (f64.store
      (i32.add
       (i32.shl
        (local.get $2)
        (i32.const 3)
       )
       (local.get $11)
      )
      (f64.mul
       (local.get $4)
       (f64.convert_i32_s
        (i32.load
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
          (local.get $9)
         )
        )
       )
      )
     )
     (local.set $4
      (f64.mul
       (local.get $4)
       (f64.const 5.960464477539063e-08)
      )
     )
     (local.set $3
      (i32.add
       (local.get $2)
       (i32.const -1)
      )
     )
     (if
      (i32.gt_s
       (local.get $2)
       (i32.const 0)
      )
      (block
       (local.set $2
        (local.get $3)
       )
       (br $while-in23)
      )
     )
    )
    (if
     (local.get $8)
     (block
      (local.set $2
       (local.get $0)
      )
      (loop $while-in25
       (local.set $13
        (i32.sub
         (local.get $0)
         (local.get $2)
        )
       )
       (local.set $4
        (f64.const 0)
       )
       (local.set $3
        (i32.const 0)
       )
       (loop $while-in27
        (local.set $4
         (f64.add
          (local.get $4)
          (f64.mul
           (f64.load
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 3)
             )
             (i32.const 8512)
            )
           )
           (f64.load
            (i32.add
             (i32.shl
              (i32.add
               (local.get $2)
               (local.get $3)
              )
              (i32.const 3)
             )
             (local.get $11)
            )
           )
          )
         )
        )
        (local.set $6
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (if
         (i32.eqz
          (i32.or
           (i32.ge_s
            (local.get $3)
            (local.get $12)
           )
           (i32.ge_u
            (local.get $3)
            (local.get $13)
           )
          )
         )
         (block
          (local.set $3
           (local.get $6)
          )
          (br $while-in27)
         )
        )
       )
       (f64.store
        (i32.add
         (i32.shl
          (local.get $13)
          (i32.const 3)
         )
         (local.get $16)
        )
        (local.get $4)
       )
       (local.set $3
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
       )
       (if
        (i32.gt_s
         (local.get $2)
         (i32.const 0)
        )
        (block
         (local.set $2
          (local.get $3)
         )
         (br $while-in25)
        )
       )
      )
     )
    )
   )
  )
  (if
   (local.get $8)
   (block
    (local.set $4
     (f64.const 0)
    )
    (loop $while-in31
     (local.set $4
      (f64.add
       (local.get $4)
       (f64.load
        (i32.add
         (i32.shl
          (local.get $0)
          (i32.const 3)
         )
         (local.get $16)
        )
       )
      )
     )
     (local.set $2
      (i32.add
       (local.get $0)
       (i32.const -1)
      )
     )
     (if
      (i32.gt_s
       (local.get $0)
       (i32.const 0)
      )
      (block
       (local.set $0
        (local.get $2)
       )
       (br $while-in31)
      )
     )
    )
   )
   (local.set $4
    (f64.const 0)
   )
  )
  (f64.store
   (local.get $1)
   (select
    (f64.neg
     (local.get $4)
    )
    (local.get $4)
    (local.get $7)
   )
  )
  (global.set $STACKTOP
   (local.get $20)
  )
  (i32.and
   (local.get $5)
   (i32.const 7)
  )
 )
 (func $___rem_pio2f (; 588 ;) (; has Stack IR ;) (param $0 f32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.get $4)
    (i32.const 8)
   )
  )
  (local.set $1
   (if (result i32)
    (i32.lt_u
     (local.tee $2
      (i32.and
       (local.tee $8
        (i32.reinterpret_f32
         (local.get $0)
        )
       )
       (i32.const 2147483647)
      )
     )
     (i32.const 1305022427)
    )
    (block (result i32)
     (local.set $2
      (i32.trunc_f64_s
       (local.tee $6
        (f64.add
         (f64.add
          (f64.mul
           (local.tee $3
            (f64.promote_f32
             (local.get $0)
            )
           )
           (f64.const 0.6366197723675814)
          )
          (f64.const 6755399441055744)
         )
         (f64.const -6755399441055744)
        )
       )
      )
     )
     (f64.store
      (local.get $1)
      (f64.sub
       (f64.sub
        (local.get $3)
        (f64.mul
         (local.get $6)
         (f64.const 1.5707963109016418)
        )
       )
       (f64.mul
        (local.get $6)
        (f64.const 1.5893254773528196e-08)
       )
      )
     )
     (local.get $2)
    )
    (block $do-once (result i32)
     (if
      (i32.gt_u
       (local.get $2)
       (i32.const 2139095039)
      )
      (block
       (f64.store
        (local.get $1)
        (f64.promote_f32
         (f32.sub
          (local.get $0)
          (local.get $0)
         )
        )
       )
       (br $do-once
        (i32.const 0)
       )
      )
     )
     (f64.store
      (local.get $5)
      (f64.promote_f32
       (f32.reinterpret_i32
        (i32.sub
         (local.get $2)
         (i32.shl
          (local.tee $2
           (i32.add
            (i32.shr_u
             (local.get $2)
             (i32.const 23)
            )
            (i32.const -150)
           )
          )
          (i32.const 23)
         )
        )
       )
      )
     )
     (local.set $2
      (call $___rem_pio2_large
       (local.get $5)
       (local.get $4)
       (local.get $2)
      )
     )
     (local.set $3
      (f64.load
       (local.get $4)
      )
     )
     (if (result i32)
      (i32.lt_s
       (local.get $8)
       (i32.const 0)
      )
      (block (result i32)
       (f64.store
        (local.get $1)
        (f64.neg
         (local.get $3)
        )
       )
       (i32.sub
        (i32.const 0)
        (local.get $2)
       )
      )
      (block (result i32)
       (f64.store
        (local.get $1)
        (local.get $3)
       )
       (local.get $2)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $1)
 )
 (func $_fwrite (; 589 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local.set $4
   (i32.mul
    (local.get $1)
    (local.get $2)
   )
  )
  (drop
   (i32.atomic.load offset=76
    (local.get $3)
   )
  )
  (local.set $0
   (call $___fwritex
    (local.get $0)
    (local.get $4)
    (local.get $3)
   )
  )
  (local.set $2
   (select
    (local.get $2)
    (i32.const 0)
    (local.get $1)
   )
  )
  (if (result i32)
   (i32.ne
    (local.get $0)
    (local.get $4)
   )
   (i32.div_u
    (local.get $0)
    (local.get $1)
   )
   (local.get $2)
  )
 )
 (func $___unlist_locked_file (; 590 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (if
   (i32.load offset=68
    (local.get $0)
   )
   (block
    (if
     (local.tee $1
      (i32.load offset=132
       (local.get $0)
      )
     )
     (i32.store offset=128
      (local.get $1)
      (i32.load offset=128
       (local.get $0)
      )
     )
    )
    (i32.store
     (if (result i32)
      (local.tee $0
       (i32.load offset=128
        (local.get $0)
       )
      )
      (i32.add
       (local.get $0)
       (i32.const 132)
      )
      (i32.add
       (global.get $__pthread_ptr)
       (i32.const 232)
      )
     )
     (local.get $1)
    )
   )
  )
 )
 (func $___overflow (; 591 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $2)
   (local.tee $6
    (i32.and
     (local.get $1)
     (i32.const 255)
    )
   )
  )
  (drop
   (block $do-once (result i32)
    (block $__rjti$0
     (br $do-once
      (if (result i32)
       (local.tee $3
        (i32.load offset=16
         (local.get $0)
        )
       )
       (br $__rjti$0)
       (if (result i32)
        (call $___towrite
         (local.get $0)
        )
        (i32.const -1)
        (block
         (local.set $3
          (i32.load offset=16
           (local.get $0)
          )
         )
         (br $__rjti$0)
        )
       )
      )
     )
    )
    (if
     (i32.lt_u
      (local.tee $4
       (i32.load offset=20
        (local.get $0)
       )
      )
      (local.get $3)
     )
     (if
      (i32.ne
       (local.tee $1
        (i32.and
         (local.get $1)
         (i32.const 255)
        )
       )
       (i32.load8_s offset=75
        (local.get $0)
       )
      )
      (block
       (i32.store offset=20
        (local.get $0)
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (i32.store8
        (local.get $4)
        (local.get $6)
       )
       (br $do-once
        (local.get $1)
       )
      )
     )
    )
    (if (result i32)
     (i32.eq
      (call_indirect (type $FUNCSIG$iiii)
       (local.get $0)
       (local.get $2)
       (i32.const 1)
       (i32.add
        (i32.and
         (i32.load offset=36
          (local.get $0)
         )
         (i32.const 15)
        )
        (i32.const 58)
       )
      )
      (i32.const 1)
     )
     (i32.load8_u
      (local.get $2)
     )
     (i32.const -1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_fopen (; 592 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 48)
   )
  )
  (local.set $3
   (i32.add
    (local.get $1)
    (i32.const 32)
   )
  )
  (local.set $2
   (i32.add
    (local.get $1)
    (i32.const 16)
   )
  )
  (local.set $0
   (if (result i32)
    (call $_strchr
     (i32.const 16680)
     (i32.load8_s
      (i32.const 15962)
     )
    )
    (block (result i32)
     (local.set $4
      (call $___fmodeflags)
     )
     (i32.store
      (local.get $1)
      (local.get $0)
     )
     (i32.store offset=4
      (local.get $1)
      (i32.or
       (local.get $4)
       (i32.const 32768)
      )
     )
     (i32.store offset=8
      (local.get $1)
      (i32.const 438)
     )
     (if (result i32)
      (i32.lt_s
       (local.tee $1
        (call $___syscall_ret
         (call $___syscall5
          (i32.const 5)
          (local.get $1)
         )
        )
       )
       (i32.const 0)
      )
      (i32.const 0)
      (block (result i32)
       (if
        (i32.and
         (local.get $4)
         (i32.const 524288)
        )
        (block
         (i32.store
          (local.get $2)
          (local.get $1)
         )
         (i32.store offset=4
          (local.get $2)
          (i32.const 2)
         )
         (i32.store offset=8
          (local.get $2)
          (i32.const 1)
         )
         (drop
          (call $___syscall221
           (i32.const 221)
           (local.get $2)
          )
         )
        )
       )
       (if (result i32)
        (local.tee $0
         (call $___fdopen
          (local.get $1)
         )
        )
        (local.get $0)
        (block (result i32)
         (i32.store
          (local.get $3)
          (local.get $1)
         )
         (drop
          (call $___syscall6
           (i32.const 6)
           (local.get $3)
          )
         )
         (i32.const 0)
        )
       )
      )
     )
    )
    (block (result i32)
     (i32.store
      (call $___errno_location)
      (i32.const 22)
     )
     (i32.const 0)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $___fmodeflags (; 593 ;) (; has Stack IR ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local.set $0
   (i32.eqz
    (call $_strchr
     (i32.const 15962)
     (i32.const 43)
    )
   )
  )
  (select
   (i32.or
    (local.tee $0
     (select
      (i32.or
       (local.tee $0
        (select
         (local.tee $0
          (select
           (local.tee $0
            (select
             (local.tee $0
              (select
               (i32.ne
                (local.tee $1
                 (i32.load8_s
                  (i32.const 15962)
                 )
                )
                (i32.const 114)
               )
               (i32.const 2)
               (local.get $0)
              )
             )
             (i32.or
              (local.get $0)
              (i32.const 128)
             )
             (i32.eqz
              (call $_strchr
               (i32.const 15962)
               (i32.const 120)
              )
             )
            )
           )
           (i32.or
            (local.get $0)
            (i32.const 524288)
           )
           (i32.eqz
            (call $_strchr
             (i32.const 15962)
             (i32.const 101)
            )
           )
          )
         )
         (i32.or
          (local.get $0)
          (i32.const 64)
         )
         (i32.eq
          (local.get $1)
          (i32.const 114)
         )
        )
       )
       (i32.const 512)
      )
      (local.get $0)
      (i32.eq
       (local.get $1)
       (i32.const 119)
      )
     )
    )
    (i32.const 1024)
   )
   (local.get $0)
   (i32.eq
    (local.get $1)
    (i32.const 97)
   )
  )
 )
 (func $___fdopen (; 594 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 64)
   )
  )
  (local.set $3
   (i32.add
    (local.get $1)
    (i32.const 40)
   )
  )
  (local.set $4
   (i32.add
    (local.get $1)
    (i32.const 24)
   )
  )
  (local.set $5
   (i32.add
    (local.get $1)
    (i32.const 16)
   )
  )
  (local.set $2
   (local.get $1)
  )
  (local.set $7
   (i32.add
    (local.get $1)
    (i32.const 56)
   )
  )
  (if
   (call $_strchr
    (i32.const 16680)
    (i32.load8_s
     (i32.const 15962)
    )
   )
   (if
    (local.tee $1
     (call $_malloc
      (i32.const 1176)
     )
    )
    (block
     (drop
      (call $_memset
       (local.get $1)
       (i32.const 0)
       (i32.const 144)
      )
     )
     (if
      (i32.eqz
       (call $_strchr
        (i32.const 15962)
        (i32.const 43)
       )
      )
      (i32.store
       (local.get $1)
       (select
        (i32.const 8)
        (i32.const 4)
        (i32.eq
         (i32.load8_s
          (i32.const 15962)
         )
         (i32.const 114)
        )
       )
      )
     )
     (if
      (call $_strchr
       (i32.const 15962)
       (i32.const 101)
      )
      (block
       (i32.store
        (local.get $2)
        (local.get $0)
       )
       (i32.store offset=4
        (local.get $2)
        (i32.const 2)
       )
       (i32.store offset=8
        (local.get $2)
        (i32.const 1)
       )
       (drop
        (call $___syscall221
         (i32.const 221)
         (local.get $2)
        )
       )
      )
     )
     (if
      (i32.eq
       (i32.load8_s
        (i32.const 15962)
       )
       (i32.const 97)
      )
      (block
       (i32.store
        (local.get $5)
        (local.get $0)
       )
       (i32.store offset=4
        (local.get $5)
        (i32.const 3)
       )
       (if
        (i32.eqz
         (i32.and
          (local.tee $2
           (call $___syscall221
            (i32.const 221)
            (local.get $5)
           )
          )
          (i32.const 1024)
         )
        )
        (block
         (i32.store
          (local.get $4)
          (local.get $0)
         )
         (i32.store offset=4
          (local.get $4)
          (i32.const 4)
         )
         (i32.store offset=8
          (local.get $4)
          (i32.or
           (local.get $2)
           (i32.const 1024)
          )
         )
         (drop
          (call $___syscall221
           (i32.const 221)
           (local.get $4)
          )
         )
        )
       )
       (i32.store
        (local.get $1)
        (local.tee $2
         (i32.or
          (i32.load
           (local.get $1)
          )
          (i32.const 128)
         )
        )
       )
      )
      (local.set $2
       (i32.load
        (local.get $1)
       )
      )
     )
     (i32.store offset=60
      (local.get $1)
      (local.get $0)
     )
     (i32.store offset=44
      (local.get $1)
      (i32.add
       (local.get $1)
       (i32.const 152)
      )
     )
     (i32.store offset=48
      (local.get $1)
      (i32.const 1024)
     )
     (i32.store8 offset=75
      (local.get $1)
      (i32.const -1)
     )
     (if
      (i32.eqz
       (i32.and
        (local.get $2)
        (i32.const 8)
       )
      )
      (block
       (i32.store
        (local.get $3)
        (local.get $0)
       )
       (i32.store offset=4
        (local.get $3)
        (i32.const 21523)
       )
       (i32.store offset=8
        (local.get $3)
        (local.get $7)
       )
       (if
        (i32.eqz
         (call $___syscall54
          (i32.const 54)
          (local.get $3)
         )
        )
        (i32.store8 offset=75
         (local.get $1)
         (i32.const 10)
        )
       )
      )
     )
     (i32.store offset=32
      (local.get $1)
      (i32.const 8)
     )
     (i32.store offset=36
      (local.get $1)
      (i32.const 1)
     )
     (i32.store offset=40
      (local.get $1)
      (i32.const 2)
     )
     (i32.store offset=12
      (local.get $1)
      (i32.const 3)
     )
     (if
      (i32.eqz
       (i32.load
        (i32.const 28124)
       )
      )
      (i32.atomic.store offset=76
       (local.get $1)
       (i32.const -1)
      )
     )
     (call $___ofl_add
      (local.get $1)
     )
    )
    (local.set $1
     (i32.const 0)
    )
   )
   (block
    (i32.store
     (call $___errno_location)
     (i32.const 22)
    )
    (local.set $1
     (i32.const 0)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $1)
 )
 (func $___ofl_add (; 595 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (i32.store offset=56
   (local.get $0)
   (i32.load
    (local.tee $1
     (call $___ofl_lock)
    )
   )
  )
  (if
   (local.tee $2
    (i32.load
     (local.get $1)
    )
   )
   (i32.store offset=52
    (local.get $2)
    (local.get $0)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $0)
  )
  (call $___unlock
   (i32.const 28184)
  )
 )
 (func $___ofl_lock (; 596 ;) (; has Stack IR ;) (result i32)
  (call $___lock
   (i32.const 28184)
  )
  (i32.const 28192)
 )
 (func $_fclose (; 597 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (drop
   (if (result i32)
    (i32.gt_s
     (i32.atomic.load offset=76
      (local.get $0)
     )
     (i32.const -1)
    )
    (i32.const 1)
    (i32.const 0)
   )
  )
  (call $___unlist_locked_file
   (local.get $0)
  )
  (if
   (i32.eqz
    (local.tee $4
     (i32.ne
      (i32.and
       (i32.load
        (local.get $0)
       )
       (i32.const 1)
      )
      (i32.const 0)
     )
    )
   )
   (block
    (local.set $1
     (call $___ofl_lock)
    )
    (if
     (local.tee $2
      (i32.load offset=52
       (local.get $0)
      )
     )
     (i32.store offset=56
      (local.get $2)
      (i32.load offset=56
       (local.get $0)
      )
     )
    )
    (if
     (local.tee $3
      (i32.load offset=56
       (local.get $0)
      )
     )
     (i32.store offset=52
      (local.get $3)
      (local.get $2)
     )
    )
    (if
     (i32.eq
      (local.get $0)
      (i32.load
       (local.get $1)
      )
     )
     (i32.store
      (local.get $1)
      (local.get $3)
     )
    )
    (call $___unlock
     (i32.const 28184)
    )
   )
  )
  (drop
   (call $_fflush
    (local.get $0)
   )
  )
  (drop
   (call_indirect (type $FUNCSIG$ii)
    (local.get $0)
    (i32.add
     (i32.and
      (i32.load offset=12
       (local.get $0)
      )
      (i32.const 31)
     )
     (i32.const 20)
    )
   )
  )
  (if
   (local.tee $1
    (i32.load offset=96
     (local.get $0)
    )
   )
   (call $_free
    (local.get $1)
   )
  )
  (if
   (i32.eqz
    (local.get $4)
   )
   (call $_free
    (local.get $0)
   )
  )
 )
 (func $_fflush (; 598 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (if
   (local.get $0)
   (local.set $0
    (block $do-once (result i32)
     (if
      (i32.le_s
       (i32.atomic.load offset=76
        (local.get $0)
       )
       (i32.const -1)
      )
      (br $do-once
       (call $___fflush_unlocked
        (local.get $0)
       )
      )
     )
     (call $___fflush_unlocked
      (local.get $0)
     )
    )
   )
   (block
    (local.set $0
     (if (result i32)
      (i32.atomic.load
       (i32.const 8960)
      )
      (call $_fflush
       (i32.atomic.load
        (i32.const 8960)
       )
      )
      (i32.const 0)
     )
    )
    (if
     (local.tee $1
      (i32.load
       (call $___ofl_lock)
      )
     )
     (loop $while-in
      (drop
       (if (result i32)
        (i32.gt_s
         (i32.atomic.load offset=76
          (local.get $1)
         )
         (i32.const -1)
        )
        (i32.const 1)
        (i32.const 0)
       )
      )
      (if
       (i32.gt_u
        (i32.load offset=20
         (local.get $1)
        )
        (i32.load offset=28
         (local.get $1)
        )
       )
       (local.set $0
        (i32.or
         (call $___fflush_unlocked
          (local.get $1)
         )
         (local.get $0)
        )
       )
      )
      (br_if $while-in
       (local.tee $1
        (i32.load offset=56
         (local.get $1)
        )
       )
      )
     )
    )
    (call $___unlock
     (i32.const 28184)
    )
   )
  )
  (local.get $0)
 )
 (func $___fflush_unlocked (; 599 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (block $__rjto$0 (result i32)
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.le_u
      (i32.load offset=20
       (local.get $0)
      )
      (i32.load offset=28
       (local.get $0)
      )
     )
    )
    (local.set $1
     (i32.load offset=36
      (local.get $0)
     )
    )
    (drop
     (call_indirect (type $FUNCSIG$iiii)
      (local.get $0)
      (i32.const 0)
      (i32.const 0)
      (i32.add
       (i32.and
        (local.get $1)
        (i32.const 15)
       )
       (i32.const 58)
      )
     )
    )
    (br_if $__rjti$0
     (i32.load offset=20
      (local.get $0)
     )
    )
    (br $__rjto$0
     (i32.const -1)
    )
   )
   (if
    (i32.lt_u
     (local.tee $1
      (i32.load offset=4
       (local.get $0)
      )
     )
     (local.tee $2
      (i32.load offset=8
       (local.get $0)
      )
     )
    )
    (block
     (local.set $3
      (i32.load offset=40
       (local.get $0)
      )
     )
     (drop
      (call_indirect (type $FUNCSIG$jiji)
       (local.get $0)
       (i64.extend_i32_s
        (i32.sub
         (local.get $1)
         (local.get $2)
        )
       )
       (i32.const 1)
       (i32.add
        (i32.and
         (local.get $3)
         (i32.const 3)
        )
        (i32.const 80)
       )
      )
     )
    )
   )
   (i32.store offset=16
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=28
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=20
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=8
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=4
    (local.get $0)
    (i32.const 0)
   )
   (i32.const 0)
  )
 )
 (func $_strstr (; 600 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (if
   (local.tee $2
    (i32.load8_s
     (local.get $1)
    )
   )
   (if
    (local.tee $0
     (call $_strchr
      (local.get $0)
      (local.get $2)
     )
    )
    (if
     (i32.load8_s offset=1
      (local.get $1)
     )
     (local.set $0
      (if (result i32)
       (i32.load8_s offset=1
        (local.get $0)
       )
       (block $do-once (result i32)
        (if
         (i32.eqz
          (i32.load8_s offset=2
           (local.get $1)
          )
         )
         (br $do-once
          (call $_twobyte_strstr
           (local.get $0)
           (local.get $1)
          )
         )
        )
        (if (result i32)
         (i32.load8_s offset=2
          (local.get $0)
         )
         (block (result i32)
          (if
           (i32.eqz
            (i32.load8_s offset=3
             (local.get $1)
            )
           )
           (br $do-once
            (call $_threebyte_strstr
             (local.get $0)
             (local.get $1)
            )
           )
          )
          (if (result i32)
           (i32.load8_s offset=3
            (local.get $0)
           )
           (if (result i32)
            (i32.load8_s offset=4
             (local.get $1)
            )
            (call $_twoway_strstr
             (local.get $0)
             (local.get $1)
            )
            (call $_fourbyte_strstr
             (local.get $0)
             (local.get $1)
            )
           )
           (i32.const 0)
          )
         )
         (i32.const 0)
        )
       )
       (i32.const 0)
      )
     )
    )
    (local.set $0
     (i32.const 0)
    )
   )
  )
  (local.get $0)
 )
 (func $_twobyte_strstr (; 601 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (i32.or
    (i32.load8_u offset=1
     (local.get $1)
    )
    (i32.shl
     (i32.load8_u
      (local.get $1)
     )
     (i32.const 8)
    )
   )
  )
  (if (result i32)
   (local.tee $2
    (i32.load8_s
     (local.tee $1
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
    )
   )
   (block $label$break$L1 (result i32)
    (local.set $0
     (i32.or
      (i32.and
       (local.get $2)
       (i32.const 255)
      )
      (i32.shl
       (i32.load8_u
        (local.get $0)
       )
       (i32.const 8)
      )
     )
    )
    (loop $while-in
     (if
      (i32.ne
       (local.get $3)
       (local.tee $0
        (i32.and
         (local.get $0)
         (i32.const 65535)
        )
       )
      )
      (block
       (local.set $0
        (i32.or
         (i32.and
          (local.tee $2
           (i32.load8_s
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
           )
          )
          (i32.const 255)
         )
         (i32.shl
          (local.get $0)
          (i32.const 8)
         )
        )
       )
       (drop
        (br_if $label$break$L1
         (i32.const 0)
         (i32.eqz
          (local.get $2)
         )
        )
       )
       (br $while-in)
      )
     )
    )
    (i32.add
     (local.get $1)
     (i32.const -1)
    )
   )
   (i32.const 0)
  )
 )
 (func $_threebyte_strstr (; 602 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.eqz
    (i32.or
     (i32.eq
      (local.tee $2
       (i32.or
        (i32.or
         (i32.shl
          (i32.load8_u
           (local.get $0)
          )
          (i32.const 24)
         )
         (i32.shl
          (i32.load8_u offset=1
           (local.get $0)
          )
          (i32.const 16)
         )
        )
        (i32.shl
         (i32.and
          (local.tee $3
           (i32.load8_s
            (local.tee $0
             (i32.add
              (local.get $0)
              (i32.const 2)
             )
            )
           )
          )
          (i32.const 255)
         )
         (i32.const 8)
        )
       )
      )
      (local.tee $4
       (i32.or
        (i32.or
         (i32.shl
          (i32.load8_u
           (local.get $1)
          )
          (i32.const 24)
         )
         (i32.shl
          (i32.load8_u offset=1
           (local.get $1)
          )
          (i32.const 16)
         )
        )
        (i32.shl
         (i32.load8_u offset=2
          (local.get $1)
         )
         (i32.const 8)
        )
       )
      )
     )
     (local.tee $1
      (i32.eqz
       (local.get $3)
      )
     )
    )
   )
   (block
    (local.set $1
     (local.get $2)
    )
    (local.set $1
     (loop $while-in (result i32)
      (if (result i32)
       (i32.or
        (i32.eq
         (local.get $4)
         (local.tee $1
          (i32.shl
           (i32.or
            (i32.and
             (local.tee $2
              (i32.load8_s
               (local.tee $0
                (i32.add
                 (local.get $0)
                 (i32.const 1)
                )
               )
              )
             )
             (i32.const 255)
            )
            (local.get $1)
           )
           (i32.const 8)
          )
         )
        )
        (local.tee $2
         (i32.eqz
          (local.get $2)
         )
        )
       )
       (local.get $2)
       (br $while-in)
      )
     )
    )
   )
  )
  (select
   (i32.const 0)
   (i32.add
    (local.get $0)
    (i32.const -2)
   )
   (local.get $1)
  )
 )
 (func $_fourbyte_strstr (; 603 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.eqz
    (i32.or
     (i32.eq
      (local.tee $3
       (i32.or
        (i32.load8_u offset=3
         (local.get $1)
        )
        (i32.or
         (i32.or
          (i32.shl
           (i32.load8_u
            (local.get $1)
           )
           (i32.const 24)
          )
          (i32.shl
           (i32.load8_u offset=1
            (local.get $1)
           )
           (i32.const 16)
          )
         )
         (i32.shl
          (i32.load8_u offset=2
           (local.get $1)
          )
          (i32.const 8)
         )
        )
       )
      )
      (local.tee $2
       (i32.or
        (i32.and
         (local.tee $4
          (i32.load8_s
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 3)
            )
           )
          )
         )
         (i32.const 255)
        )
        (i32.or
         (i32.or
          (i32.shl
           (i32.load8_u
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.shl
           (i32.load8_u offset=1
            (local.get $0)
           )
           (i32.const 16)
          )
         )
         (i32.shl
          (i32.load8_u offset=2
           (local.get $0)
          )
          (i32.const 8)
         )
        )
       )
      )
     )
     (local.tee $0
      (i32.eqz
       (local.get $4)
      )
     )
    )
   )
   (block
    (local.set $0
     (local.get $1)
    )
    (local.set $1
     (local.get $2)
    )
    (local.set $0
     (loop $while-in (result i32)
      (if (result i32)
       (i32.or
        (i32.eq
         (local.get $3)
         (local.tee $1
          (i32.or
           (i32.and
            (local.tee $2
             (i32.load8_s
              (local.tee $0
               (i32.add
                (local.get $0)
                (i32.const 1)
               )
              )
             )
            )
            (i32.const 255)
           )
           (i32.shl
            (local.get $1)
            (i32.const 8)
           )
          )
         )
        )
        (local.tee $2
         (i32.eqz
          (local.get $2)
         )
        )
       )
       (block (result i32)
        (local.set $1
         (local.get $0)
        )
        (local.get $2)
       )
       (br $while-in)
      )
     )
    )
   )
  )
  (select
   (i32.const 0)
   (i32.add
    (local.get $1)
    (i32.const -3)
   )
   (local.get $0)
  )
 )
 (func $_twoway_strstr (; 604 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $15
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $13
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 1056)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 1056)
   )
  )
  (i64.store
   (local.tee $12
    (i32.add
     (local.get $13)
     (i32.const 1024)
    )
   )
   (i64.const 0)
  )
  (i64.store offset=8
   (local.get $12)
   (i64.const 0)
  )
  (i64.store offset=16
   (local.get $12)
   (i64.const 0)
  )
  (i64.store offset=24
   (local.get $12)
   (i64.const 0)
  )
  (block $label$break$L34
   (block $__rjti$0
    (if
     (local.tee $3
      (i32.load8_s
       (local.get $1)
      )
     )
     (block $label$break$L1
      (loop $while-in
       (if
        (i32.eqz
         (i32.load8_s
          (i32.add
           (local.get $0)
           (local.get $6)
          )
         )
        )
        (block
         (local.set $0
          (i32.const 0)
         )
         (br $label$break$L1)
        )
       )
       (i32.store
        (local.tee $2
         (i32.add
          (i32.shl
           (i32.shr_u
            (local.tee $3
             (i32.and
              (local.get $3)
              (i32.const 255)
             )
            )
            (i32.const 5)
           )
           (i32.const 2)
          )
          (local.get $12)
         )
        )
        (i32.or
         (i32.load
          (local.get $2)
         )
         (i32.shl
          (i32.const 1)
          (i32.and
           (local.get $3)
           (i32.const 31)
          )
         )
        )
       )
       (i32.store
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 2)
         )
         (local.get $13)
        )
        (local.tee $6
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
       )
       (br_if $while-in
        (local.tee $3
         (i32.load8_s
          (i32.add
           (local.get $1)
           (local.get $6)
          )
         )
        )
       )
      )
      (if
       (local.tee $10
        (i32.gt_u
         (local.get $6)
         (i32.const 1)
        )
       )
       (block
        (local.set $7
         (i32.const 1)
        )
        (local.set $2
         (i32.const -1)
        )
        (local.set $4
         (i32.const 1)
        )
        (local.set $5
         (i32.const 1)
        )
        (loop $while-in1
         (if
          (i32.eq
           (local.tee $3
            (i32.load8_s
             (i32.add
              (local.get $1)
              (i32.add
               (local.get $2)
               (local.get $4)
              )
             )
            )
           )
           (local.tee $9
            (i32.load8_s
             (i32.add
              (local.get $1)
              (local.get $7)
             )
            )
           )
          )
          (block
           (if
            (i32.eq
             (local.get $4)
             (local.get $5)
            )
            (block
             (local.set $8
              (i32.add
               (local.get $5)
               (local.get $8)
              )
             )
             (local.set $4
              (i32.const 1)
             )
            )
            (local.set $4
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
           )
           (local.set $3
            (local.get $2)
           )
          )
          (local.set $5
           (if (result i32)
            (i32.gt_s
             (i32.and
              (local.get $3)
              (i32.const 255)
             )
             (i32.and
              (local.get $9)
              (i32.const 255)
             )
            )
            (block (result i32)
             (local.set $3
              (local.get $2)
             )
             (local.set $4
              (i32.const 1)
             )
             (i32.sub
              (local.tee $8
               (local.get $7)
              )
              (local.get $2)
             )
            )
            (block (result i32)
             (local.set $8
              (i32.add
               (local.tee $3
                (local.get $8)
               )
               (i32.const 1)
              )
             )
             (local.set $4
              (i32.const 1)
             )
             (i32.const 1)
            )
           )
          )
         )
         (if
          (i32.lt_u
           (local.tee $7
            (i32.add
             (local.get $4)
             (local.get $8)
            )
           )
           (local.get $6)
          )
          (block
           (local.set $2
            (local.get $3)
           )
           (br $while-in1)
          )
         )
        )
        (if
         (local.get $10)
         (block
          (local.set $10
           (i32.const 1)
          )
          (local.set $8
           (i32.const -1)
          )
          (local.set $4
           (i32.const 0)
          )
          (local.set $9
           (i32.const 1)
          )
          (local.set $7
           (i32.const 1)
          )
          (loop $while-in4
           (if
            (i32.eq
             (local.tee $2
              (i32.load8_s
               (i32.add
                (local.get $1)
                (i32.add
                 (local.get $8)
                 (local.get $9)
                )
               )
              )
             )
             (local.tee $11
              (i32.load8_s
               (i32.add
                (local.get $1)
                (local.get $10)
               )
              )
             )
            )
            (block
             (if
              (i32.eq
               (local.get $7)
               (local.get $9)
              )
              (block
               (local.set $4
                (i32.add
                 (local.get $4)
                 (local.get $7)
                )
               )
               (local.set $9
                (i32.const 1)
               )
              )
              (local.set $9
               (i32.add
                (local.get $9)
                (i32.const 1)
               )
              )
             )
             (local.set $2
              (local.get $8)
             )
            )
            (local.set $7
             (if (result i32)
              (i32.lt_s
               (i32.and
                (local.get $2)
                (i32.const 255)
               )
               (i32.and
                (local.get $11)
                (i32.const 255)
               )
              )
              (block (result i32)
               (local.set $9
                (i32.const 1)
               )
               (i32.sub
                (local.tee $4
                 (local.get $10)
                )
                (local.tee $2
                 (local.get $8)
                )
               )
              )
              (block (result i32)
               (local.set $4
                (i32.add
                 (local.tee $2
                  (local.get $4)
                 )
                 (i32.const 1)
                )
               )
               (local.set $9
                (i32.const 1)
               )
               (i32.const 1)
              )
             )
            )
           )
           (br_if $__rjti$0
            (i32.ge_u
             (local.tee $10
              (i32.add
               (local.get $4)
               (local.get $9)
              )
             )
             (local.get $6)
            )
           )
           (local.set $8
            (local.get $2)
           )
           (br $while-in4)
          )
         )
         (block
          (local.set $2
           (i32.const -1)
          )
          (local.set $7
           (i32.const 1)
          )
          (br $__rjti$0)
         )
        )
       )
       (block
        (local.set $3
         (i32.const -1)
        )
        (local.set $2
         (i32.const -1)
        )
        (local.set $5
         (i32.const 1)
        )
        (local.set $7
         (i32.const 1)
        )
        (br $__rjti$0)
       )
      )
     )
     (block
      (local.set $3
       (i32.const -1)
      )
      (local.set $2
       (i32.const -1)
      )
      (local.set $5
       (i32.const 1)
      )
      (local.set $7
       (i32.const 1)
      )
      (br $__rjti$0)
     )
    )
    (br $label$break$L34)
   )
   (local.set $10
    (if (result i32)
     (call $_memcmp
      (local.get $1)
      (i32.add
       (local.get $1)
       (local.tee $8
        (select
         (local.get $7)
         (local.get $5)
         (local.tee $5
          (i32.gt_u
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
      (local.tee $4
       (i32.add
        (local.tee $11
         (select
          (local.get $2)
          (local.get $3)
          (local.get $5)
         )
        )
        (i32.const 1)
       )
      )
     )
     (block (result i32)
      (local.set $8
       (local.tee $3
        (i32.add
         (select
          (local.get $11)
          (local.tee $3
           (i32.add
            (i32.sub
             (local.get $6)
             (local.get $11)
            )
            (i32.const -1)
           )
          )
          (i32.gt_u
           (local.get $11)
           (local.get $3)
          )
         )
         (i32.const 1)
        )
       )
      )
      (local.set $9
       (i32.sub
        (local.get $6)
        (local.get $3)
       )
      )
      (i32.const 0)
     )
     (local.tee $9
      (i32.sub
       (local.get $6)
       (local.get $8)
      )
     )
    )
   )
   (local.set $14
    (i32.or
     (local.get $6)
     (i32.const 63)
    )
   )
   (local.set $16
    (i32.add
     (local.get $6)
     (i32.const -1)
    )
   )
   (local.set $17
    (i32.ne
     (local.get $10)
     (i32.const 0)
    )
   )
   (local.set $7
    (i32.const 0)
   )
   (local.set $3
    (local.get $0)
   )
   (loop $while-in9
    (if
     (i32.lt_u
      (i32.sub
       (local.get $3)
       (local.tee $5
        (local.get $0)
       )
      )
      (local.get $6)
     )
     (local.set $3
      (if (result i32)
       (local.tee $2
        (call $_memchr
         (local.get $3)
         (local.get $14)
        )
       )
       (if (result i32)
        (i32.lt_u
         (i32.sub
          (local.get $2)
          (local.get $5)
         )
         (local.get $6)
        )
        (block
         (local.set $0
          (i32.const 0)
         )
         (br $label$break$L34)
        )
        (local.get $2)
       )
       (i32.add
        (local.get $3)
        (local.get $14)
       )
      )
     )
    )
    (if
     (i32.and
      (i32.load
       (i32.add
        (i32.shl
         (i32.shr_u
          (local.tee $2
           (i32.load8_u
            (i32.add
             (local.get $0)
             (local.get $16)
            )
           )
          )
          (i32.const 5)
         )
         (i32.const 2)
        )
        (local.get $12)
       )
      )
      (i32.shl
       (i32.const 1)
       (i32.and
        (local.get $2)
        (i32.const 31)
       )
      )
     )
     (block $label$break$L48
      (if
       (local.tee $2
        (i32.sub
         (local.get $6)
         (i32.load
          (i32.add
           (i32.shl
            (local.get $2)
            (i32.const 2)
           )
           (local.get $13)
          )
         )
        )
       )
       (block
        (local.set $5
         (select
          (local.get $9)
          (local.get $2)
          (i32.and
           (i32.and
            (local.get $17)
            (i32.ne
             (local.get $7)
             (i32.const 0)
            )
           )
           (i32.lt_u
            (local.get $2)
            (local.get $8)
           )
          )
         )
        )
        (local.set $2
         (i32.const 0)
        )
        (br $label$break$L48)
       )
      )
      (if
       (local.tee $5
        (i32.load8_s
         (i32.add
          (local.get $1)
          (local.tee $2
           (select
            (local.get $4)
            (local.get $7)
            (local.tee $18
             (i32.gt_u
              (local.get $4)
              (local.get $7)
             )
            )
           )
          )
         )
        )
       )
       (block $label$break$L53
        (loop $while-in15
         (if
          (i32.eq
           (i32.load8_u
            (i32.add
             (local.get $0)
             (local.get $2)
            )
           )
           (i32.and
            (local.get $5)
            (i32.const 255)
           )
          )
          (block
           (br_if $label$break$L53
            (i32.eqz
             (local.tee $5
              (i32.load8_s
               (i32.add
                (local.get $1)
                (local.tee $2
                 (i32.add
                  (local.get $2)
                  (i32.const 1)
                 )
                )
               )
              )
             )
            )
           )
           (br $while-in15)
          )
         )
        )
        (local.set $5
         (i32.sub
          (local.get $2)
          (local.get $11)
         )
        )
        (local.set $2
         (i32.const 0)
        )
        (br $label$break$L48)
       )
      )
      (br_if $label$break$L34
       (i32.eqz
        (local.get $18)
       )
      )
      (local.set $2
       (local.get $4)
      )
      (loop $while-in17
       (if
        (i32.ne
         (i32.load8_s
          (i32.add
           (local.get $1)
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const -1)
            )
           )
          )
         )
         (i32.load8_s
          (i32.add
           (local.get $0)
           (local.get $2)
          )
         )
        )
        (block
         (local.set $5
          (local.get $8)
         )
         (local.set $2
          (local.get $10)
         )
         (br $label$break$L48)
        )
       )
       (br_if $while-in17
        (i32.gt_u
         (local.get $2)
         (local.get $7)
        )
       )
      )
      (br $label$break$L34)
     )
     (block
      (local.set $5
       (local.get $6)
      )
      (local.set $2
       (i32.const 0)
      )
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (local.get $5)
     )
    )
    (local.set $7
     (local.get $2)
    )
    (br $while-in9)
   )
  )
  (global.set $STACKTOP
   (local.get $15)
  )
  (local.get $0)
 )
 (func $___memrchr (; 605 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (local.get $1)
   (block $label$break$L1 (result i32)
    (loop $while-in
     (if
      (i32.ne
       (i32.load8_u
        (i32.add
         (local.get $0)
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const -1)
          )
         )
        )
       )
       (i32.const 46)
      )
      (if
       (local.get $1)
       (br $while-in)
       (br $label$break$L1
        (i32.const 0)
       )
      )
     )
    )
    (i32.add
     (local.get $0)
     (local.get $1)
    )
   )
   (i32.const 0)
  )
 )
 (func $_srand (; 606 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i64.store
   (local.get $1)
   (i64.const 0)
  )
  (i64.store
   (local.get $1)
   (i64.extend_i32_u
    (i32.add
     (local.get $0)
     (i32.const -1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_fputc (; 607 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (block $do-once
   (if
    (i32.ge_s
     (i32.atomic.load offset=76
      (local.get $1)
     )
     (i32.const 0)
    )
    (block
     (local.set $3
      (i32.and
       (local.get $0)
       (i32.const 255)
      )
     )
     (block $__rjto$0
      (block $__rjti$0
       (br_if $__rjti$0
        (i32.eq
         (i32.load8_s offset=75
          (local.get $1)
         )
         (i32.and
          (local.get $0)
          (i32.const 255)
         )
        )
       )
       (br_if $__rjti$0
        (i32.ge_u
         (local.tee $2
          (i32.load offset=20
           (local.get $1)
          )
         )
         (i32.load offset=16
          (local.get $1)
         )
        )
       )
       (i32.store offset=20
        (local.get $1)
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (i32.store8
        (local.get $2)
        (local.get $3)
       )
       (br $__rjto$0)
      )
      (call $___overflow
       (local.get $1)
       (local.get $0)
      )
     )
     (br $do-once)
    )
   )
   (local.set $3
    (i32.and
     (local.get $0)
     (i32.const 255)
    )
   )
   (if
    (i32.ne
     (i32.load8_s offset=75
      (local.get $1)
     )
     (i32.and
      (local.get $0)
      (i32.const 255)
     )
    )
    (if
     (i32.lt_u
      (local.tee $2
       (i32.load offset=20
        (local.get $1)
       )
      )
      (i32.load offset=16
       (local.get $1)
      )
     )
     (block
      (i32.store offset=20
       (local.get $1)
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $2)
       (local.get $3)
      )
      (br $do-once)
     )
    )
   )
   (call $___overflow
    (local.get $1)
    (local.get $0)
   )
  )
 )
 (func $_strcspn (; 608 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $2
   (i32.const 15944)
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.eqz
      (local.tee $1
       (i32.load8_s
        (i32.const 15944)
       )
      )
     )
    )
    (br_if $__rjti$0
     (i32.eqz
      (i32.load8_s
       (i32.const 15945)
      )
     )
    )
    (drop
     (call $_memset
      (local.get $3)
      (i32.const 0)
      (i32.const 32)
     )
    )
    (if
     (local.tee $1
      (i32.load8_s
       (i32.const 15944)
      )
     )
     (loop $while-in
      (i32.store
       (local.tee $5
        (i32.add
         (i32.shl
          (i32.shr_u
           (local.tee $1
            (i32.and
             (local.get $1)
             (i32.const 255)
            )
           )
           (i32.const 5)
          )
          (i32.const 2)
         )
         (local.get $3)
        )
       )
       (i32.or
        (i32.load
         (local.get $5)
        )
        (i32.shl
         (i32.const 1)
         (i32.and
          (local.get $1)
          (i32.const 31)
         )
        )
       )
      )
      (br_if $while-in
       (local.tee $1
        (i32.load8_s
         (local.tee $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
    (if
     (local.tee $1
      (i32.load8_s
       (local.get $0)
      )
     )
     (block $label$break$L1
      (local.set $2
       (local.get $0)
      )
      (loop $while-in1
       (br_if $label$break$L1
        (i32.and
         (i32.load
          (i32.add
           (i32.shl
            (i32.shr_u
             (local.tee $1
              (i32.and
               (local.get $1)
               (i32.const 255)
              )
             )
             (i32.const 5)
            )
            (i32.const 2)
           )
           (local.get $3)
          )
         )
         (i32.shl
          (i32.const 1)
          (i32.and
           (local.get $1)
           (i32.const 31)
          )
         )
        )
       )
       (br_if $while-in1
        (local.tee $1
         (i32.load8_s
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
     )
     (local.set $2
      (local.get $0)
     )
    )
    (br $__rjto$0)
   )
   (local.set $2
    (call $___strchrnul
     (local.get $0)
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (i32.sub
   (local.get $2)
   (local.get $0)
  )
 )
 (func $_cosf (; 609 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.shr_u
    (local.tee $2
     (i32.reinterpret_f32
      (local.get $0)
     )
    )
    (i32.const 31)
   )
  )
  (local.set $0
   (if (result f32)
    (i32.lt_u
     (local.tee $2
      (i32.and
       (local.get $2)
       (i32.const 2147483647)
      )
     )
     (i32.const 1061752795)
    )
    (if (result f32)
     (i32.lt_u
      (local.get $2)
      (i32.const 964689920)
     )
     (f32.const 1)
     (call $___cosdf
      (f64.promote_f32
       (local.get $0)
      )
     )
    )
    (block $label$break$L1 (result f32)
     (if
      (i32.lt_u
       (local.get $2)
       (i32.const 1081824210)
      )
      (block
       (local.set $1
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
       )
       (local.set $3
        (f64.promote_f32
         (local.get $0)
        )
       )
       (if
        (i32.gt_u
         (local.get $2)
         (i32.const 1075235811)
        )
        (br $label$break$L1
         (f32.neg
          (call $___cosdf
           (f64.add
            (select
             (f64.const 3.141592653589793)
             (f64.const -3.141592653589793)
             (local.get $1)
            )
            (local.get $3)
           )
          )
         )
        )
       )
       (if
        (local.get $1)
        (br $label$break$L1
         (call $___sindf
          (f64.add
           (local.get $3)
           (f64.const 1.5707963267948966)
          )
         )
        )
        (br $label$break$L1
         (call $___sindf
          (f64.sub
           (f64.const 1.5707963267948966)
           (local.get $3)
          )
         )
        )
       )
      )
     )
     (if
      (i32.lt_u
       (local.get $2)
       (i32.const 1088565718)
      )
      (block
       (local.set $1
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.get $2)
         (i32.const 1085271519)
        )
        (br $label$break$L1
         (call $___cosdf
          (f64.add
           (select
            (f64.const 6.283185307179586)
            (f64.const -6.283185307179586)
            (local.get $1)
           )
           (f64.promote_f32
            (local.get $0)
           )
          )
         )
        )
       )
       (if
        (local.get $1)
        (br $label$break$L1
         (call $___sindf
          (f64.add
           (f64.promote_f32
            (f32.neg
             (local.get $0)
            )
           )
           (f64.const -4.71238898038469)
          )
         )
        )
        (br $label$break$L1
         (call $___sindf
          (f64.add
           (f64.promote_f32
            (local.get $0)
           )
           (f64.const -4.71238898038469)
          )
         )
        )
       )
      )
     )
     (drop
      (br_if $label$break$L1
       (f32.sub
        (local.get $0)
        (local.get $0)
       )
       (i32.gt_u
        (local.get $2)
        (i32.const 2139095039)
       )
      )
     )
     (block $switch-default
      (block $switch-case1
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-case0 $switch-case1 $switch-default
          (i32.and
           (call $___rem_pio2f
            (local.get $0)
            (local.get $1)
           )
           (i32.const 3)
          )
         )
        )
        (br $label$break$L1
         (call $___cosdf
          (f64.load
           (local.get $1)
          )
         )
        )
       )
       (br $label$break$L1
        (call $___sindf
         (f64.neg
          (f64.load
           (local.get $1)
          )
         )
        )
       )
      )
      (br $label$break$L1
       (f32.neg
        (call $___cosdf
         (f64.load
          (local.get $1)
         )
        )
       )
      )
     )
     (call $___sindf
      (f64.load
       (local.get $1)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $_sinf (; 610 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.shr_u
    (local.tee $2
     (i32.reinterpret_f32
      (local.get $0)
     )
    )
    (i32.const 31)
   )
  )
  (if
   (i32.lt_u
    (local.tee $2
     (i32.and
      (local.get $2)
      (i32.const 2147483647)
     )
    )
    (i32.const 1061752795)
   )
   (if
    (i32.ge_u
     (local.get $2)
     (i32.const 964689920)
    )
    (local.set $0
     (call $___sindf
      (f64.promote_f32
       (local.get $0)
      )
     )
    )
   )
   (local.set $0
    (block $label$break$L1 (result f32)
     (if
      (i32.lt_u
       (local.get $2)
       (i32.const 1081824210)
      )
      (block
       (local.set $1
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
       )
       (local.set $3
        (f64.promote_f32
         (local.get $0)
        )
       )
       (if
        (i32.ge_u
         (local.get $2)
         (i32.const 1075235812)
        )
        (br $label$break$L1
         (call $___sindf
          (f64.neg
           (f64.add
            (select
             (f64.const 3.141592653589793)
             (f64.const -3.141592653589793)
             (local.get $1)
            )
            (local.get $3)
           )
          )
         )
        )
       )
       (if
        (local.get $1)
        (br $label$break$L1
         (f32.neg
          (call $___cosdf
           (f64.add
            (local.get $3)
            (f64.const 1.5707963267948966)
           )
          )
         )
        )
        (br $label$break$L1
         (call $___cosdf
          (f64.add
           (local.get $3)
           (f64.const -1.5707963267948966)
          )
         )
        )
       )
      )
     )
     (if
      (i32.lt_u
       (local.get $2)
       (i32.const 1088565718)
      )
      (block
       (local.set $1
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
       )
       (local.set $3
        (f64.promote_f32
         (local.get $0)
        )
       )
       (if
        (i32.ge_u
         (local.get $2)
         (i32.const 1085271520)
        )
        (br $label$break$L1
         (call $___sindf
          (f64.add
           (select
            (f64.const 6.283185307179586)
            (f64.const -6.283185307179586)
            (local.get $1)
           )
           (local.get $3)
          )
         )
        )
       )
       (if
        (local.get $1)
        (br $label$break$L1
         (call $___cosdf
          (f64.add
           (local.get $3)
           (f64.const 4.71238898038469)
          )
         )
        )
        (br $label$break$L1
         (f32.neg
          (call $___cosdf
           (f64.add
            (local.get $3)
            (f64.const -4.71238898038469)
           )
          )
         )
        )
       )
      )
     )
     (drop
      (br_if $label$break$L1
       (f32.sub
        (local.get $0)
        (local.get $0)
       )
       (i32.gt_u
        (local.get $2)
        (i32.const 2139095039)
       )
      )
     )
     (block $switch-default
      (block $switch-case1
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-case0 $switch-case1 $switch-default
          (i32.and
           (call $___rem_pio2f
            (local.get $0)
            (local.get $1)
           )
           (i32.const 3)
          )
         )
        )
        (br $label$break$L1
         (call $___sindf
          (f64.load
           (local.get $1)
          )
         )
        )
       )
       (br $label$break$L1
        (call $___cosdf
         (f64.load
          (local.get $1)
         )
        )
       )
      )
      (br $label$break$L1
       (call $___sindf
        (f64.neg
         (f64.load
          (local.get $1)
         )
        )
       )
      )
     )
     (f32.neg
      (call $___cosdf
       (f64.load
        (local.get $1)
       )
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $_atanf (; 611 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (local $1 i32)
  (local $2 f32)
  (local $3 f32)
  (local $4 i32)
  (local.set $4
   (i32.shr_u
    (local.tee $1
     (i32.reinterpret_f32
      (local.get $0)
     )
    )
    (i32.const 31)
   )
  )
  (if
   (i32.gt_u
    (local.tee $1
     (i32.and
      (local.get $1)
      (i32.const 2147483647)
     )
    )
    (i32.const 1283457023)
   )
   (return
    (select
     (local.get $0)
     (select
      (f32.const -1.570796251296997)
      (f32.const 1.570796251296997)
      (local.get $4)
     )
     (i32.gt_u
      (local.get $1)
      (i32.const 2139095040)
     )
    )
   )
  )
  (if
   (i32.lt_u
    (local.get $1)
    (i32.const 1054867456)
   )
   (local.set $1
    (if (result i32)
     (i32.lt_u
      (local.get $1)
      (i32.const 964689920)
     )
     (return
      (local.get $0)
     )
     (i32.const -1)
    )
   )
   (block
    (local.set $0
     (f32.abs
      (local.get $0)
     )
    )
    (local.set $0
     (if (result f32)
      (i32.lt_u
       (local.get $1)
       (i32.const 1066926080)
      )
      (if (result f32)
       (i32.lt_u
        (local.get $1)
        (i32.const 1060110336)
       )
       (block (result f32)
        (local.set $1
         (i32.const 0)
        )
        (f32.div
         (f32.add
          (f32.mul
           (local.get $0)
           (f32.const 2)
          )
          (f32.const -1)
         )
         (f32.add
          (local.get $0)
          (f32.const 2)
         )
        )
       )
       (block (result f32)
        (local.set $1
         (i32.const 1)
        )
        (f32.div
         (f32.add
          (local.get $0)
          (f32.const -1)
         )
         (f32.add
          (local.get $0)
          (f32.const 1)
         )
        )
       )
      )
      (if (result f32)
       (i32.lt_u
        (local.get $1)
        (i32.const 1075576832)
       )
       (block (result f32)
        (local.set $1
         (i32.const 2)
        )
        (f32.div
         (f32.add
          (local.get $0)
          (f32.const -1.5)
         )
         (f32.add
          (f32.mul
           (local.get $0)
           (f32.const 1.5)
          )
          (f32.const 1)
         )
        )
       )
       (block (result f32)
        (local.set $1
         (i32.const 3)
        )
        (f32.div
         (f32.const -1)
         (local.get $0)
        )
       )
      )
     )
    )
   )
  )
  (local.set $2
   (f32.mul
    (local.tee $3
     (f32.mul
      (local.get $0)
      (local.get $0)
     )
    )
    (local.get $3)
   )
  )
  (local.set $3
   (f32.mul
    (local.get $3)
    (f32.add
     (f32.mul
      (local.get $2)
      (f32.add
       (f32.mul
        (local.get $2)
        (f32.const 0.06168760731816292)
       )
       (f32.const 0.14253635704517365)
      )
     )
     (f32.const 0.333333283662796)
    )
   )
  )
  (local.set $2
   (f32.mul
    (local.get $2)
    (f32.sub
     (f32.const -0.19999158382415771)
     (f32.mul
      (local.get $2)
      (f32.const 0.106480173766613)
     )
    )
   )
  )
  (if (result f32)
   (i32.lt_s
    (local.get $1)
    (i32.const 0)
   )
   (f32.sub
    (local.get $0)
    (f32.mul
     (local.get $0)
     (f32.add
      (local.get $2)
      (local.get $3)
     )
    )
   )
   (select
    (local.tee $0
     (f32.sub
      (f32.load
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (i32.const 8576)
       )
      )
      (f32.sub
       (f32.sub
        (f32.mul
         (local.get $0)
         (f32.add
          (local.get $2)
          (local.get $3)
         )
        )
        (f32.load
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (i32.const 8592)
         )
        )
       )
       (local.get $0)
      )
     )
    )
    (f32.neg
     (local.get $0)
    )
    (i32.eqz
     (local.get $4)
    )
   )
  )
 )
 (func $_atan2f (; 612 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (result f32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.gt_u
      (local.tee $6
       (i32.and
        (local.tee $5
         (i32.reinterpret_f32
          (local.get $1)
         )
        )
        (i32.const 2147483647)
       )
      )
      (i32.const 2139095040)
     )
    )
    (br_if $__rjti$0
     (i32.gt_u
      (local.tee $3
       (i32.and
        (local.tee $2
         (i32.reinterpret_f32
          (local.get $0)
         )
        )
        (i32.const 2147483647)
       )
      )
      (i32.const 2139095040)
     )
    )
    (block $label$break$L1
     (if
      (i32.eq
       (local.get $5)
       (i32.const 1065353216)
      )
      (block
       (local.set $0
        (call $_atanf
         (local.get $0)
        )
       )
       (br $label$break$L1)
      )
     )
     (local.set $2
      (i32.or
       (local.tee $7
        (i32.shr_u
         (local.get $2)
         (i32.const 31)
        )
       )
       (i32.and
        (i32.shr_u
         (local.get $5)
         (i32.const 30)
        )
        (i32.const 2)
       )
      )
     )
     (if
      (i32.eqz
       (local.get $3)
      )
      (block $switch
       (block $switch-case2
        (block $switch-case1
         (br_table $label$break$L1 $label$break$L1 $switch-case1 $switch-case2 $switch
          (i32.and
           (local.get $2)
           (i32.const 3)
          )
         )
        )
        (local.set $0
         (f32.const 3.1415927410125732)
        )
        (br $label$break$L1)
       )
       (local.set $0
        (f32.const -3.1415927410125732)
       )
       (br $label$break$L1)
      )
     )
     (block $label$break$L14
      (if
       (i32.lt_s
        (local.tee $4
         (i32.and
          (local.get $5)
          (i32.const 2147483647)
         )
        )
        (i32.const 2139095040)
       )
       (block
        (br_if $label$break$L14
         (local.get $4)
        )
        (local.set $0
         (select
          (f32.const -1.5707963705062866)
          (f32.const 1.5707963705062866)
          (local.get $7)
         )
        )
        (br $label$break$L1)
       )
       (block
        (br_if $label$break$L14
         (i32.sub
          (local.get $4)
          (i32.const 2139095040)
         )
        )
        (local.set $4
         (i32.and
          (local.get $2)
          (i32.const 255)
         )
        )
        (if
         (i32.eq
          (local.get $3)
          (i32.const 2139095040)
         )
         (block $switch10
          (block $switch-case14
           (block $switch-case13
            (block $switch-case12
             (block $switch-case11
              (br_table $switch-case11 $switch-case12 $switch-case13 $switch-case14 $switch10
               (i32.and
                (local.get $4)
                (i32.const 3)
               )
              )
             )
             (local.set $0
              (f32.const 0.7853981852531433)
             )
             (br $label$break$L1)
            )
            (local.set $0
             (f32.const -0.7853981852531433)
            )
            (br $label$break$L1)
           )
           (local.set $0
            (f32.const 2.356194496154785)
           )
           (br $label$break$L1)
          )
          (local.set $0
           (f32.const -2.356194496154785)
          )
          (br $label$break$L1)
         )
         (block $switch16
          (block $switch-case20
           (block $switch-case19
            (block $switch-case18
             (block $switch-case17
              (br_table $switch-case17 $switch-case18 $switch-case19 $switch-case20 $switch16
               (i32.and
                (local.get $4)
                (i32.const 3)
               )
              )
             )
             (local.set $0
              (f32.const 0)
             )
             (br $label$break$L1)
            )
            (local.set $0
             (f32.const -0)
            )
            (br $label$break$L1)
           )
           (local.set $0
            (f32.const 3.1415927410125732)
           )
           (br $label$break$L1)
          )
          (local.set $0
           (f32.const -3.1415927410125732)
          )
          (br $label$break$L1)
         )
        )
       )
      )
     )
     (if
      (i32.or
       (i32.eq
        (local.get $3)
        (i32.const 2139095040)
       )
       (i32.lt_u
        (i32.add
         (local.get $6)
         (i32.const 218103808)
        )
        (local.get $3)
       )
      )
      (block
       (local.set $0
        (select
         (f32.const -1.5707963705062866)
         (f32.const 1.5707963705062866)
         (local.get $7)
        )
       )
       (br $label$break$L1)
      )
     )
     (local.set $0
      (if (result f32)
       (i32.and
        (i32.lt_s
         (local.get $5)
         (i32.const 0)
        )
        (i32.lt_u
         (i32.add
          (local.get $3)
          (i32.const 218103808)
         )
         (local.get $6)
        )
       )
       (f32.const 0)
       (call $_atanf
        (f32.abs
         (f32.div
          (local.get $0)
          (local.get $1)
         )
        )
       )
      )
     )
     (block $switch-default26
      (block $switch-case25
       (block $switch-case24
        (br_table $label$break$L1 $switch-case24 $switch-case25 $switch-default26
         (i32.and
          (local.get $2)
          (i32.const 3)
         )
        )
       )
       (local.set $0
        (f32.neg
         (local.get $0)
        )
       )
       (br $label$break$L1)
      )
      (local.set $0
       (f32.sub
        (f32.const 3.1415927410125732)
        (f32.add
         (local.get $0)
         (f32.const 8.742277657347586e-08)
        )
       )
      )
      (br $label$break$L1)
     )
     (local.set $0
      (f32.add
       (f32.add
        (local.get $0)
        (f32.const 8.742277657347586e-08)
       )
       (f32.const -3.1415927410125732)
      )
     )
    )
    (br $__rjto$0)
   )
   (local.set $0
    (f32.add
     (local.get $0)
     (local.get $1)
    )
   )
  )
  (local.get $0)
 )
 (func $_pow (; 613 ;) (; has Stack IR ;) (param $0 f64) (param $1 f64) (result f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 f64)
  (local $9 i64)
  (local $10 i32)
  (local $11 f64)
  (local $12 f64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i64)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 f64)
  (local $21 f64)
  (local $22 f64)
  (if
   (i32.eqz
    (i32.or
     (local.tee $3
      (i32.and
       (local.tee $7
        (i32.wrap_i64
         (i64.shr_u
          (local.tee $9
           (i64.reinterpret_f64
            (local.get $1)
           )
          )
          (i64.const 32)
         )
        )
       )
       (i32.const 2147483647)
      )
     )
     (local.tee $10
      (i32.wrap_i64
       (local.get $9)
      )
     )
    )
   )
   (return
    (f64.const 1)
   )
  )
  (if
   (i32.and
    (i32.eq
     (local.tee $13
      (i32.wrap_i64
       (i64.shr_u
        (local.tee $16
         (i64.reinterpret_f64
          (local.get $0)
         )
        )
        (i64.const 32)
       )
      )
     )
     (i32.const 1072693248)
    )
    (local.tee $17
     (i32.eqz
      (local.tee $14
       (i32.wrap_i64
        (local.get $16)
       )
      )
     )
    )
   )
   (return
    (f64.const 1)
   )
  )
  (block $folding-inner2
   (block $folding-inner1
    (block $folding-inner0
     (if
      (i32.le_u
       (local.tee $5
        (i32.and
         (local.get $13)
         (i32.const 2147483647)
        )
       )
       (i32.const 2146435072)
      )
      (if
       (i32.eqz
        (i32.or
         (i32.and
          (i32.eq
           (local.get $5)
           (i32.const 2146435072)
          )
          (i32.ne
           (local.get $14)
           (i32.const 0)
          )
         )
         (i32.gt_u
          (local.get $3)
          (i32.const 2146435072)
         )
        )
       )
       (if
        (i32.eqz
         (i32.and
          (local.tee $18
           (i32.eq
            (local.get $3)
            (i32.const 2146435072)
           )
          )
          (i32.ne
           (local.get $10)
           (i32.const 0)
          )
         )
        )
        (block
         (block $__rjto$1
          (block $__rjti$1
           (block $__rjti$0
            (br_if $__rjti$0
             (i32.eqz
              (local.tee $15
               (i32.lt_s
                (local.get $13)
                (i32.const 0)
               )
              )
             )
            )
            (local.set $2
             (if (result i32)
              (i32.gt_u
               (local.get $3)
               (i32.const 1128267775)
              )
              (block
               (local.set $2
                (i32.const 2)
               )
               (br $__rjti$0)
              )
              (if (result i32)
               (i32.gt_u
                (local.get $3)
                (i32.const 1072693247)
               )
               (block (result i32)
                (local.set $2
                 (i32.shr_u
                  (local.get $3)
                  (i32.const 20)
                 )
                )
                (if
                 (i32.gt_u
                  (local.get $3)
                  (i32.const 1094713343)
                 )
                 (block
                  (local.set $2
                   (select
                    (i32.sub
                     (i32.const 2)
                     (i32.and
                      (local.tee $19
                       (i32.shr_u
                        (local.get $10)
                        (local.tee $2
                         (i32.sub
                          (i32.const 1075)
                          (local.get $2)
                         )
                        )
                       )
                      )
                      (i32.const 1)
                     )
                    )
                    (i32.const 0)
                    (i32.eq
                     (local.get $10)
                     (i32.shl
                      (local.get $19)
                      (local.get $2)
                     )
                    )
                   )
                  )
                  (br $__rjti$0)
                 )
                )
                (if (result i32)
                 (local.get $10)
                 (i32.const 0)
                 (block
                  (local.set $2
                   (select
                    (i32.sub
                     (i32.const 2)
                     (i32.and
                      (local.tee $10
                       (i32.shr_u
                        (local.get $3)
                        (local.tee $2
                         (i32.sub
                          (i32.const 1043)
                          (local.get $2)
                         )
                        )
                       )
                      )
                      (i32.const 1)
                     )
                    )
                    (i32.const 0)
                    (i32.eq
                     (local.get $3)
                     (i32.shl
                      (local.get $10)
                      (local.get $2)
                     )
                    )
                   )
                  )
                  (br $__rjti$1)
                 )
                )
               )
               (br $__rjti$0)
              )
             )
            )
            (br $__rjto$1)
           )
           (br_if $__rjti$1
            (i32.eqz
             (local.get $10)
            )
           )
           (br $__rjto$1)
          )
          (if
           (local.get $18)
           (block
            (if
             (i32.eqz
              (i32.or
               (local.get $14)
               (i32.add
                (local.get $5)
                (i32.const -1072693248)
               )
              )
             )
             (return
              (f64.const 1)
             )
            )
            (local.set $2
             (i32.gt_s
              (local.get $7)
              (i32.const -1)
             )
            )
            (if
             (i32.gt_u
              (local.get $5)
              (i32.const 1072693247)
             )
             (return
              (select
               (local.get $1)
               (f64.const 0)
               (local.get $2)
              )
             )
             (return
              (select
               (f64.const 0)
               (f64.neg
                (local.get $1)
               )
               (local.get $2)
              )
             )
            )
           )
          )
          (if
           (i32.eq
            (local.get $3)
            (i32.const 1072693248)
           )
           (return
            (select
             (local.get $0)
             (f64.div
              (f64.const 1)
              (local.get $0)
             )
             (i32.gt_s
              (local.get $7)
              (i32.const -1)
             )
            )
           )
          )
          (if
           (i32.eq
            (local.get $7)
            (i32.const 1073741824)
           )
           (return
            (f64.mul
             (local.get $0)
             (local.get $0)
            )
           )
          )
          (if
           (i32.and
            (i32.eq
             (local.get $7)
             (i32.const 1071644672)
            )
            (i32.gt_s
             (local.get $13)
             (i32.const -1)
            )
           )
           (return
            (f64.sqrt
             (local.get $0)
            )
           )
          )
         )
         (local.set $4
          (f64.abs
           (local.get $0)
          )
         )
         (if
          (local.get $17)
          (if
           (i32.or
            (i32.eqz
             (local.get $5)
            )
            (i32.eq
             (i32.or
              (local.get $5)
              (i32.const 1073741824)
             )
             (i32.const 2146435072)
            )
           )
           (block
            (local.set $0
             (select
              (f64.div
               (f64.const 1)
               (local.get $4)
              )
              (local.get $4)
              (i32.lt_s
               (local.get $7)
               (i32.const 0)
              )
             )
            )
            (if
             (i32.eqz
              (local.get $15)
             )
             (return
              (local.get $0)
             )
            )
            (if
             (i32.or
              (i32.add
               (local.get $5)
               (i32.const -1072693248)
              )
              (local.get $2)
             )
             (return
              (select
               (f64.neg
                (local.get $0)
               )
               (local.get $0)
               (i32.eq
                (local.get $2)
                (i32.const 1)
               )
              )
             )
            )
            (br $folding-inner0)
           )
          )
         )
         (if
          (local.get $15)
          (block $label$break$L55
           (block $switch-default
            (block $switch-case1
             (br_table $folding-inner0 $switch-case1 $switch-default
              (local.get $2)
             )
            )
            (local.set $8
             (f64.const -1)
            )
            (br $label$break$L55)
           )
           (local.set $8
            (f64.const 1)
           )
          )
          (local.set $8
           (f64.const 1)
          )
         )
         (if
          (i32.gt_u
           (local.get $3)
           (i32.const 1105199104)
          )
          (block $do-once2
           (if
            (i32.gt_u
             (local.get $3)
             (i32.const 1139802112)
            )
            (if
             (i32.lt_u
              (local.get $5)
              (i32.const 1072693248)
             )
             (return
              (select
               (global.get $inf$asm2wasm$import)
               (f64.const 0)
               (i32.lt_s
                (local.get $7)
                (i32.const 0)
               )
              )
             )
             (return
              (select
               (global.get $inf$asm2wasm$import)
               (f64.const 0)
               (i32.gt_s
                (local.get $7)
                (i32.const 0)
               )
              )
             )
            )
           )
           (if
            (i32.lt_u
             (local.get $5)
             (i32.const 1072693247)
            )
            (return
             (select
              (f64.mul
               (f64.mul
                (local.get $8)
                (f64.const 1.e+300)
               )
               (f64.const 1.e+300)
              )
              (f64.mul
               (f64.mul
                (local.get $8)
                (f64.const 1e-300)
               )
               (f64.const 1e-300)
              )
              (i32.lt_s
               (local.get $7)
               (i32.const 0)
              )
             )
            )
           )
           (if
            (i32.le_u
             (local.get $5)
             (i32.const 1072693248)
            )
            (block
             (local.set $6
              (f64.sub
               (local.tee $0
                (f64.reinterpret_i64
                 (i64.and
                  (i64.reinterpret_f64
                   (f64.add
                    (local.tee $6
                     (f64.mul
                      (local.tee $0
                       (f64.add
                        (local.get $4)
                        (f64.const -1)
                       )
                      )
                      (f64.const 1.4426950216293335)
                     )
                    )
                    (local.tee $4
                     (f64.sub
                      (f64.mul
                       (local.get $0)
                       (f64.const 1.9259629911266175e-08)
                      )
                      (f64.mul
                       (f64.mul
                        (f64.mul
                         (local.get $0)
                         (local.get $0)
                        )
                        (f64.sub
                         (f64.const 0.5)
                         (f64.mul
                          (local.get $0)
                          (f64.sub
                           (f64.const 0.3333333333333333)
                           (f64.mul
                            (local.get $0)
                            (f64.const 0.25)
                           )
                          )
                         )
                        )
                       )
                       (f64.const 1.4426950408889634)
                      )
                     )
                    )
                   )
                  )
                  (i64.const -4294967296)
                 )
                )
               )
               (local.get $6)
              )
             )
             (br $do-once2)
            )
           )
           (return
            (select
             (f64.mul
              (f64.mul
               (local.get $8)
               (f64.const 1.e+300)
              )
              (f64.const 1.e+300)
             )
             (f64.mul
              (f64.mul
               (local.get $8)
               (f64.const 1e-300)
              )
              (f64.const 1e-300)
             )
             (i32.gt_s
              (local.get $7)
              (i32.const 0)
             )
            )
           )
          )
          (block
           (local.set $5
            (i32.add
             (i32.shr_s
              (local.tee $2
               (select
                (i32.wrap_i64
                 (i64.shr_u
                  (i64.reinterpret_f64
                   (local.tee $0
                    (f64.mul
                     (local.get $4)
                     (f64.const 9007199254740992)
                    )
                   )
                  )
                  (i64.const 32)
                 )
                )
                (local.get $5)
                (local.tee $7
                 (i32.lt_u
                  (local.get $5)
                  (i32.const 1048576)
                 )
                )
               )
              )
              (i32.const 20)
             )
             (select
              (i32.const -1076)
              (i32.const -1023)
              (local.get $7)
             )
            )
           )
           (local.set $2
            (i32.or
             (local.tee $3
              (i32.and
               (local.get $2)
               (i32.const 1048575)
              )
             )
             (i32.const 1072693248)
            )
           )
           (if
            (i32.lt_u
             (local.get $3)
             (i32.const 235663)
            )
            (block
             (local.set $3
              (local.get $2)
             )
             (local.set $2
              (i32.const 0)
             )
            )
            (block
             (local.set $3
              (select
               (local.get $2)
               (i32.add
                (local.get $2)
                (i32.const -1048576)
               )
               (local.tee $2
                (i32.lt_u
                 (local.get $3)
                 (i32.const 767610)
                )
               )
              )
             )
             (local.set $5
              (i32.add
               (local.get $5)
               (i32.and
                (i32.xor
                 (local.get $2)
                 (i32.const 1)
                )
                (i32.const 1)
               )
              )
             )
            )
           )
           (local.set $6
            (f64.sub
             (f64.sub
              (f64.sub
               (local.tee $0
                (f64.reinterpret_i64
                 (i64.and
                  (i64.reinterpret_f64
                   (f64.add
                    (f64.add
                     (local.tee $20
                      (f64.load
                       (i32.add
                        (i32.shl
                         (local.get $2)
                         (i32.const 3)
                        )
                        (i32.const 8640)
                       )
                      )
                     )
                     (f64.add
                      (local.tee $6
                       (f64.mul
                        (local.tee $0
                         (f64.reinterpret_i64
                          (i64.and
                           (i64.reinterpret_f64
                            (f64.add
                             (local.tee $12
                              (f64.mul
                               (local.tee $0
                                (f64.reinterpret_i64
                                 (i64.and
                                  (i64.reinterpret_f64
                                   (local.tee $4
                                    (f64.mul
                                     (local.tee $12
                                      (f64.sub
                                       (local.tee $6
                                        (f64.reinterpret_i64
                                         (i64.or
                                          (i64.and
                                           (i64.reinterpret_f64
                                            (select
                                             (local.get $0)
                                             (local.get $4)
                                             (local.get $7)
                                            )
                                           )
                                           (i64.const 4294967295)
                                          )
                                          (i64.shl
                                           (i64.extend_i32_u
                                            (local.get $3)
                                           )
                                           (i64.const 32)
                                          )
                                         )
                                        )
                                       )
                                       (local.tee $11
                                        (f64.load
                                         (i32.add
                                          (i32.shl
                                           (local.get $2)
                                           (i32.const 3)
                                          )
                                          (i32.const 8608)
                                         )
                                        )
                                       )
                                      )
                                     )
                                     (local.tee $21
                                      (f64.div
                                       (f64.const 1)
                                       (f64.add
                                        (local.get $11)
                                        (local.get $6)
                                       )
                                      )
                                     )
                                    )
                                   )
                                  )
                                  (i64.const -4294967296)
                                 )
                                )
                               )
                               (local.tee $0
                                (f64.reinterpret_i64
                                 (i64.and
                                  (i64.reinterpret_f64
                                   (f64.add
                                    (f64.add
                                     (local.tee $22
                                      (f64.mul
                                       (local.get $0)
                                       (local.get $0)
                                      )
                                     )
                                     (f64.const 3)
                                    )
                                    (local.tee $11
                                     (f64.add
                                      (f64.mul
                                       (f64.add
                                        (local.get $4)
                                        (local.get $0)
                                       )
                                       (local.tee $6
                                        (f64.mul
                                         (local.get $21)
                                         (f64.sub
                                          (f64.sub
                                           (local.get $12)
                                           (f64.mul
                                            (local.tee $12
                                             (f64.reinterpret_i64
                                              (i64.shl
                                               (i64.extend_i32_u
                                                (i32.add
                                                 (i32.add
                                                  (i32.or
                                                   (i32.shr_s
                                                    (local.get $3)
                                                    (i32.const 1)
                                                   )
                                                   (i32.const 536870912)
                                                  )
                                                  (i32.const 524288)
                                                 )
                                                 (i32.shl
                                                  (local.get $2)
                                                  (i32.const 18)
                                                 )
                                                )
                                               )
                                               (i64.const 32)
                                              )
                                             )
                                            )
                                            (local.get $0)
                                           )
                                          )
                                          (f64.mul
                                           (f64.sub
                                            (local.get $6)
                                            (f64.sub
                                             (local.get $12)
                                             (local.get $11)
                                            )
                                           )
                                           (local.get $0)
                                          )
                                         )
                                        )
                                       )
                                      )
                                      (f64.mul
                                       (f64.mul
                                        (local.tee $0
                                         (f64.mul
                                          (local.get $4)
                                          (local.get $4)
                                         )
                                        )
                                        (local.get $0)
                                       )
                                       (f64.add
                                        (f64.mul
                                         (local.get $0)
                                         (f64.add
                                          (f64.mul
                                           (local.get $0)
                                           (f64.add
                                            (f64.mul
                                             (local.get $0)
                                             (f64.add
                                              (f64.mul
                                               (local.get $0)
                                               (f64.add
                                                (f64.mul
                                                 (local.get $0)
                                                 (f64.const 0.20697501780033842)
                                                )
                                                (f64.const 0.23066074577556175)
                                               )
                                              )
                                              (f64.const 0.272728123808534)
                                             )
                                            )
                                            (f64.const 0.33333332981837743)
                                           )
                                          )
                                          (f64.const 0.4285714285785502)
                                         )
                                        )
                                        (f64.const 0.5999999999999946)
                                       )
                                      )
                                     )
                                    )
                                   )
                                  )
                                  (i64.const -4294967296)
                                 )
                                )
                               )
                              )
                             )
                             (local.tee $4
                              (f64.add
                               (f64.mul
                                (local.get $6)
                                (local.get $0)
                               )
                               (f64.mul
                                (local.get $4)
                                (f64.sub
                                 (local.get $11)
                                 (f64.sub
                                  (f64.add
                                   (local.get $0)
                                   (f64.const -3)
                                  )
                                  (local.get $22)
                                 )
                                )
                               )
                              )
                             )
                            )
                           )
                           (i64.const -4294967296)
                          )
                         )
                        )
                        (f64.const 0.9617967009544373)
                       )
                      )
                      (local.tee $4
                       (f64.add
                        (f64.load
                         (i32.add
                          (i32.shl
                           (local.get $2)
                           (i32.const 3)
                          )
                          (i32.const 8624)
                         )
                        )
                        (f64.sub
                         (f64.mul
                          (f64.sub
                           (local.get $4)
                           (f64.sub
                            (local.get $0)
                            (local.get $12)
                           )
                          )
                          (f64.const 0.9617966939259756)
                         )
                         (f64.mul
                          (local.get $0)
                          (f64.const 7.028461650952758e-09)
                         )
                        )
                       )
                      )
                     )
                    )
                    (local.tee $11
                     (f64.convert_i32_s
                      (local.get $5)
                     )
                    )
                   )
                  )
                  (i64.const -4294967296)
                 )
                )
               )
               (local.get $11)
              )
              (local.get $20)
             )
             (local.get $6)
            )
           )
          )
         )
         (local.set $1
          (f64.add
           (f64.mul
            (f64.sub
             (local.get $4)
             (local.get $6)
            )
            (local.get $1)
           )
           (f64.mul
            (f64.sub
             (local.get $1)
             (local.tee $4
              (f64.reinterpret_i64
               (i64.and
                (local.get $9)
                (i64.const -4294967296)
               )
              )
             )
            )
            (local.get $0)
           )
          )
         )
         (local.set $2
          (i32.wrap_i64
           (i64.shr_u
            (local.tee $9
             (i64.reinterpret_f64
              (local.tee $4
               (f64.add
                (local.tee $0
                 (f64.mul
                  (local.get $0)
                  (local.get $4)
                 )
                )
                (local.get $1)
               )
              )
             )
            )
            (i64.const 32)
           )
          )
         )
         (local.set $3
          (i32.wrap_i64
           (local.get $9)
          )
         )
         (if
          (i32.gt_s
           (local.get $2)
           (i32.const 1083179007)
          )
          (br_if $folding-inner1
           (i32.or
            (i32.or
             (local.get $3)
             (i32.add
              (local.get $2)
              (i32.const -1083179008)
             )
            )
            (f64.gt
             (f64.add
              (local.get $1)
              (f64.const 8.008566259537294e-17)
             )
             (f64.sub
              (local.get $4)
              (local.get $0)
             )
            )
           )
          )
          (br_if $folding-inner2
           (select
            (i32.gt_u
             (i32.and
              (local.get $2)
              (i32.const 2147482624)
             )
             (i32.const 1083231231)
            )
            (i32.const 0)
            (i32.or
             (i32.or
              (local.get $3)
              (i32.add
               (local.get $2)
               (i32.const 1064252416)
              )
             )
             (f64.le
              (local.get $1)
              (f64.sub
               (local.get $4)
               (local.get $0)
              )
             )
            )
           )
          )
         )
         (local.set $2
          (if (result i32)
           (i32.gt_u
            (local.tee $3
             (i32.and
              (local.get $2)
              (i32.const 2147483647)
             )
            )
            (i32.const 1071644672)
           )
           (block (result i32)
            (local.set $5
             (i32.and
              (i32.shr_u
               (local.tee $3
                (i32.add
                 (local.get $2)
                 (i32.shr_u
                  (i32.const 1048576)
                  (i32.add
                   (i32.shr_u
                    (local.get $3)
                    (i32.const 20)
                   )
                   (i32.const -1022)
                  )
                 )
                )
               )
               (i32.const 20)
              )
              (i32.const 2047)
             )
            )
            (local.set $9
             (i64.reinterpret_f64
              (f64.add
               (local.get $1)
               (local.tee $0
                (f64.sub
                 (local.get $0)
                 (f64.reinterpret_i64
                  (i64.shl
                   (i64.extend_i32_u
                    (i32.and
                     (local.get $3)
                     (i32.shr_s
                      (i32.const -1048576)
                      (i32.add
                       (local.get $5)
                       (i32.const -1023)
                      )
                     )
                    )
                   )
                   (i64.const 32)
                  )
                 )
                )
               )
              )
             )
            )
            (select
             (i32.sub
              (i32.const 0)
              (local.tee $3
               (i32.shr_u
                (i32.or
                 (i32.and
                  (local.get $3)
                  (i32.const 1048575)
                 )
                 (i32.const 1048576)
                )
                (i32.sub
                 (i32.const 1043)
                 (local.get $5)
                )
               )
              )
             )
             (local.get $3)
             (i32.lt_s
              (local.get $2)
              (i32.const 0)
             )
            )
           )
           (i32.const 0)
          )
         )
         (return
          (f64.mul
           (local.get $8)
           (if (result f64)
            (i32.lt_s
             (local.tee $3
              (i32.add
               (i32.wrap_i64
                (i64.shr_u
                 (local.tee $9
                  (i64.reinterpret_f64
                   (local.tee $0
                    (f64.sub
                     (f64.const 1)
                     (f64.sub
                      (f64.sub
                       (f64.div
                        (f64.mul
                         (local.tee $0
                          (f64.add
                           (local.tee $6
                            (f64.mul
                             (local.tee $4
                              (f64.reinterpret_i64
                               (i64.and
                                (local.get $9)
                                (i64.const -4294967296)
                               )
                              )
                             )
                             (f64.const 0.6931471824645996)
                            )
                           )
                           (local.tee $4
                            (f64.sub
                             (f64.mul
                              (f64.sub
                               (local.get $1)
                               (f64.sub
                                (local.get $4)
                                (local.get $0)
                               )
                              )
                              (f64.const 0.6931471805599453)
                             )
                             (f64.mul
                              (local.get $4)
                              (f64.const 1.904654299957768e-09)
                             )
                            )
                           )
                          )
                         )
                         (local.tee $1
                          (f64.sub
                           (local.get $0)
                           (f64.mul
                            (local.tee $1
                             (f64.mul
                              (local.get $0)
                              (local.get $0)
                             )
                            )
                            (f64.add
                             (f64.mul
                              (local.get $1)
                              (f64.add
                               (f64.mul
                                (local.get $1)
                                (f64.add
                                 (f64.mul
                                  (local.get $1)
                                  (f64.add
                                   (f64.mul
                                    (local.get $1)
                                    (f64.const 4.1381367970572385e-08)
                                   )
                                   (f64.const -1.6533902205465252e-06)
                                  )
                                 )
                                 (f64.const 6.613756321437934e-05)
                                )
                               )
                               (f64.const -2.7777777777015593e-03)
                              )
                             )
                             (f64.const 0.16666666666666602)
                            )
                           )
                          )
                         )
                        )
                        (f64.add
                         (local.get $1)
                         (f64.const -2)
                        )
                       )
                       (f64.add
                        (local.tee $1
                         (f64.sub
                          (local.get $4)
                          (f64.sub
                           (local.get $0)
                           (local.get $6)
                          )
                         )
                        )
                        (f64.mul
                         (local.get $0)
                         (local.get $1)
                        )
                       )
                      )
                      (local.get $0)
                     )
                    )
                   )
                  )
                 )
                 (i64.const 32)
                )
               )
               (i32.shl
                (local.get $2)
                (i32.const 20)
               )
              )
             )
             (i32.const 1048576)
            )
            (call $_scalbn
             (local.get $0)
             (local.get $2)
            )
            (f64.reinterpret_i64
             (i64.or
              (i64.and
               (local.get $9)
               (i64.const 4294967295)
              )
              (i64.shl
               (i64.extend_i32_u
                (local.get $3)
               )
               (i64.const 32)
              )
             )
            )
           )
          )
         )
        )
       )
      )
     )
     (return
      (f64.add
       (local.get $0)
       (local.get $1)
      )
     )
    )
    (return
     (f64.div
      (local.tee $0
       (f64.sub
        (local.get $0)
        (local.get $0)
       )
      )
      (local.get $0)
     )
    )
   )
   (return
    (f64.mul
     (f64.mul
      (local.get $8)
      (f64.const 1.e+300)
     )
     (f64.const 1.e+300)
    )
   )
  )
  (f64.mul
   (f64.mul
    (local.get $8)
    (f64.const 1e-300)
   )
   (f64.const 1e-300)
  )
 )
 (func $_emscripten_GetProcAddress (; 614 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (call $_strcpy
   (local.tee $1
    (call $_malloc
     (i32.add
      (call $_strlen
       (local.get $0)
      )
      (i32.const 1)
     )
    )
   )
   (local.get $0)
  )
  (if
   (local.tee $0
    (call $_strstr
     (local.get $1)
     (i32.const 16684)
    )
   )
   (i32.store8
    (local.get $0)
    (i32.const 0)
   )
  )
  (if
   (local.tee $0
    (call $_strstr
     (local.get $1)
     (i32.const 16688)
    )
   )
   (i32.store8
    (local.get $0)
    (i32.const 0)
   )
  )
  (if
   (local.tee $0
    (call $_strstr
     (local.get $1)
     (i32.const 16692)
    )
   )
   (i32.store8
    (local.get $0)
    (i32.const 0)
   )
  )
  (if
   (local.tee $0
    (call $_strstr
     (local.get $1)
     (i32.const 16696)
    )
   )
   (i32.store8
    (local.get $0)
    (i32.const 0)
   )
  )
  (if
   (local.tee $0
    (call $_strstr
     (local.get $1)
     (i32.const 16702)
    )
   )
   (i32.store8
    (local.get $0)
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (local.tee $0
     (call $_emscripten_webgl1_get_proc_address
      (local.get $1)
     )
    )
   )
   (local.set $0
    (call $__webgl1_match_ext_proc_address_without_suffix
     (local.get $1)
    )
   )
  )
  (call $_free
   (local.get $1)
  )
  (local.get $0)
 )
 (func $_emscripten_webgl1_get_proc_address (; 615 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (call $_strcmp
    (local.get $0)
    (i32.const 17036)
   )
   (if
    (call $_strcmp
     (local.get $0)
     (i32.const 17052)
    )
    (if
     (call $_strcmp
      (local.get $0)
      (i32.const 17067)
     )
     (if
      (call $_strcmp
       (local.get $0)
       (i32.const 17088)
      )
      (if
       (call $_strcmp
        (local.get $0)
        (i32.const 17101)
       )
       (if
        (call $_strcmp
         (local.get $0)
         (i32.const 17119)
        )
        (if
         (call $_strcmp
          (local.get $0)
          (i32.const 17138)
         )
         (if
          (call $_strcmp
           (local.get $0)
           (i32.const 17152)
          )
          (if
           (call $_strcmp
            (local.get $0)
            (i32.const 17165)
           )
           (if
            (call $_strcmp
             (local.get $0)
             (i32.const 17181)
            )
            (if
             (call $_strcmp
              (local.get $0)
              (i32.const 17205)
             )
             (if
              (call $_strcmp
               (local.get $0)
               (i32.const 17217)
              )
              (if
               (call $_strcmp
                (local.get $0)
                (i32.const 17237)
               )
               (if
                (call $_strcmp
                 (local.get $0)
                 (i32.const 17250)
                )
                (if
                 (call $_strcmp
                  (local.get $0)
                  (i32.const 17266)
                 )
                 (if
                  (call $_strcmp
                   (local.get $0)
                   (i32.const 17291)
                  )
                  (if
                   (call $_strcmp
                    (local.get $0)
                    (i32.const 17299)
                   )
                   (if
                    (call $_strcmp
                     (local.get $0)
                     (i32.const 17312)
                    )
                    (if
                     (call $_strcmp
                      (local.get $0)
                      (i32.const 17326)
                     )
                     (block $do-once
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17341)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 5)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17353)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 5)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17369)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17392)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17418)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17435)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 3)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17455)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17471)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 5)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17486)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 6)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17497)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 14)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17513)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 15)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17534)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 7)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17550)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 16)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17572)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 8)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17587)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 17)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17604)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 9)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17616)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 10)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17628)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17642)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 18)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17657)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 11)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17667)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 12)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17694)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 4)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17707)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 6)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17722)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 13)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17731)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 14)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17757)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17766)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 3)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17774)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 7)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17800)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17823)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 15)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17835)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 19)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17848)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 16)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17865)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 20)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17883)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 21)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17902)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 22)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17916)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17934)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17953)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 8)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17974)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 17994)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 23)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18008)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 5)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18031)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18042)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 24)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18054)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 9)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18092)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 25)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18106)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 6)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18121)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 10)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18141)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 7)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18170)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 8)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18184)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 11)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18203)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 12)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18230)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 13)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18248)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 6)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18260)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 9)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18280)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 10)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18300)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 11)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18315)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 12)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18330)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18351)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 13)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18371)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 14)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18391)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 15)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18417)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 26)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18424)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 7)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18435)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 8)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18447)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 9)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18463)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 10)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18475)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 11)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18492)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 12)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18503)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 13)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18515)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18527)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 17)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18541)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 27)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18555)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18571)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 3)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18584)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 4)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18608)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 14)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18630)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18647)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 15)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18657)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 3)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18672)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 16)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18687)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 16)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18701)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 17)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18723)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 18)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18737)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 28)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18759)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 17)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18771)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 18)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18791)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18804)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18820)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 18)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18837)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 19)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18853)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 20)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18870)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 3)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18886)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18898)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 21)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18911)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 29)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18923)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 22)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18936)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18948)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 23)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18961)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 24)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18973)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 25)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18986)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 18998)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 26)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19011)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 19)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19023)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 27)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19036)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19048)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 28)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19061)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 4)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19073)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 29)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19086)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 20)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19105)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 21)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19124)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 22)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19143)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 19)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19156)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 20)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19174)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19191)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 30)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19209)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19226)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 31)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19244)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19261)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 32)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19279)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19296)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 33)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19314)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19336)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 23)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19347)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 34)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19363)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 35)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19382)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 14)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19395)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 36)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19411)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 21)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19425)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 37)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19443)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 30)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19459)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 31)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19481)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 32)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19504)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 33)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19528)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 34)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19553)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 22)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19574)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 38)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19598)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 39)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19619)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 15)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19638)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 40)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19657)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 24)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19684)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 5)
                        )
                        (br $do-once)
                       )
                      )
                      (return
                       (select
                        (i32.const 0)
                        (i32.const 6)
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 19713)
                        )
                       )
                      )
                     )
                     (local.set $0
                      (i32.const 4)
                     )
                    )
                    (local.set $0
                     (i32.const 1)
                    )
                   )
                   (local.set $0
                    (i32.const 2)
                   )
                  )
                  (local.set $0
                   (i32.const 3)
                  )
                 )
                 (local.set $0
                  (i32.const 4)
                 )
                )
                (local.set $0
                 (i32.const 4)
                )
               )
               (local.set $0
                (i32.const 3)
               )
              )
              (local.set $0
               (i32.const 2)
              )
             )
             (local.set $0
              (i32.const 13)
             )
            )
            (local.set $0
             (i32.const 12)
            )
           )
           (local.set $0
            (i32.const 2)
           )
          )
          (local.set $0
           (i32.const 1)
          )
         )
         (local.set $0
          (i32.const 11)
         )
        )
        (local.set $0
         (i32.const 10)
        )
       )
       (local.set $0
        (i32.const 9)
       )
      )
      (local.set $0
       (i32.const 8)
      )
     )
     (local.set $0
      (i32.const 3)
     )
    )
    (local.set $0
     (i32.const 7)
    )
   )
   (local.set $0
    (i32.const 1)
   )
  )
  (local.get $0)
 )
 (func $__webgl1_match_ext_proc_address_without_suffix (; 616 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (call $_strcmp
    (local.get $0)
    (i32.const 16708)
   )
   (if (result i32)
    (call $_strcmp
     (local.get $0)
     (i32.const 16721)
    )
    (if (result i32)
     (call $_strcmp
      (local.get $0)
      (i32.const 16737)
     )
     (if (result i32)
      (call $_strcmp
       (local.get $0)
       (i32.const 16747)
      )
      (if (result i32)
       (call $_strcmp
        (local.get $0)
        (i32.const 16760)
       )
       (if (result i32)
        (call $_strcmp
         (local.get $0)
         (i32.const 16771)
        )
        (if (result i32)
         (call $_strcmp
          (local.get $0)
          (i32.const 16786)
         )
         (if (result i32)
          (call $_strcmp
           (local.get $0)
           (i32.const 16799)
          )
          (if (result i32)
           (call $_strcmp
            (local.get $0)
            (i32.const 16818)
           )
           (if (result i32)
            (call $_strcmp
             (local.get $0)
             (i32.const 16838)
            )
            (if (result i32)
             (call $_strcmp
              (local.get $0)
              (i32.const 16859)
             )
             (if (result i32)
              (call $_strcmp
               (local.get $0)
               (i32.const 16881)
              )
              (if (result i32)
               (call $_strcmp
                (local.get $0)
                (i32.const 16899)
               )
               (if (result i32)
                (call $_strcmp
                 (local.get $0)
                 (i32.const 16920)
                )
                (if (result i32)
                 (call $_strcmp
                  (local.get $0)
                  (i32.const 16938)
                 )
                 (if (result i32)
                  (call $_strcmp
                   (local.get $0)
                   (i32.const 16954)
                  )
                  (if (result i32)
                   (call $_strcmp
                    (local.get $0)
                    (i32.const 16968)
                   )
                   (if (result i32)
                    (call $_strcmp
                     (local.get $0)
                     (i32.const 16990)
                    )
                    (select
                     (i32.const 0)
                     (i32.const 6)
                     (call $_strcmp
                      (local.get $0)
                      (i32.const 17014)
                     )
                    )
                    (i32.const 5)
                   )
                   (i32.const 24)
                  )
                  (i32.const 40)
                 )
                 (i32.const 15)
                )
                (i32.const 39)
               )
               (i32.const 38)
              )
              (i32.const 22)
             )
             (i32.const 34)
            )
            (i32.const 33)
           )
           (i32.const 32)
          )
          (i32.const 31)
         )
         (i32.const 30)
        )
        (i32.const 37)
       )
       (i32.const 21)
      )
      (i32.const 36)
     )
     (i32.const 14)
    )
    (i32.const 35)
   )
   (i32.const 34)
  )
 )
 (func $___pthread_tsd_run_dtors (; 617 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.eqz
    (i32.load offset=60
     (local.tee $2
      (global.get $__pthread_ptr)
     )
    )
   )
   (return)
  )
  (loop $while-in
   (local.set $0
    (i32.const 0)
   )
   (local.set $1
    (i32.const 0)
   )
   (loop $while-in1
    (if
     (local.tee $4
      (i32.load
       (local.tee $3
        (i32.add
         (i32.load offset=116
          (local.get $2)
         )
         (i32.shl
          (local.get $0)
          (i32.const 2)
         )
        )
       )
      )
     )
     (if
      (i32.atomic.load
       (local.tee $5
        (i32.add
         (i32.shl
          (local.get $0)
          (i32.const 2)
         )
         (i32.const 26752)
        )
       )
      )
      (block
       (i32.store
        (local.get $3)
        (i32.const 0)
       )
       (call_indirect (type $FUNCSIG$vi)
        (local.get $4)
        (i32.add
         (i32.and
          (i32.atomic.load
           (local.get $5)
          )
          (i32.const 31)
         )
         (i32.const 107)
        )
       )
       (local.set $1
        (i32.const 1)
       )
      )
     )
    )
    (br_if $while-in1
     (i32.ne
      (local.tee $0
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (i32.const 128)
     )
    )
   )
   (br_if $while-in
    (i32.and
     (i32.ne
      (local.get $1)
      (i32.const 0)
     )
     (i32.lt_u
      (local.tee $6
       (i32.add
        (local.get $6)
        (i32.const 1)
       )
      )
      (i32.const 4)
     )
    )
   )
  )
 )
 (func $_emscripten_async_queue_call_on_thread (; 618 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (if
   (i32.eqz
    (local.get $1)
   )
   (call $___assert_fail
    (i32.const 19821)
    (i32.const 19826)
    (i32.const 456)
    (i32.const 20147)
   )
  )
  (block $switch
   (block $switch-default
    (block $switch-case0
     (block $switch-case
      (br_table $switch-case $switch-case0 $switch-default
       (local.get $0)
      )
     )
     (call $___assert_fail
      (i32.const 20185)
      (i32.const 19826)
      (i32.const 466)
      (i32.const 20147)
     )
     (br $switch)
    )
    (local.set $2
     (i32.load
      (i32.const 28204)
     )
    )
    (br $switch)
   )
   (local.set $2
    (local.get $0)
   )
  )
  (if
   (i32.ne
    (local.get $2)
    (i32.const 2)
   )
   (if
    (i32.ne
     (local.get $2)
     (global.get $__pthread_ptr)
    )
    (block
     (drop
      (call $___pthread_mutex_lock
       (i32.const 28212)
      )
     )
     (if
      (i32.eqz
       (local.get $2)
      )
      (call $___assert_fail
       (i32.const 19996)
       (i32.const 19826)
       (i32.const 383)
       (i32.const 20003)
      )
     )
     (block $__rjto$0
      (block $__rjti$0
       (br_if $__rjti$0
        (local.tee $5
         (i32.eqz
          (local.tee $3
           (i32.load
            (i32.const 28240)
           )
          )
         )
        )
       )
       (local.set $0
        (local.get $3)
       )
       (loop $while-in
        (if
         (i32.ne
          (local.get $2)
          (i32.load
           (local.get $0)
          )
         )
         (block
          (br_if $while-in
           (local.tee $0
            (i32.load offset=16
             (local.get $0)
            )
           )
          )
          (br $__rjti$0)
         )
        )
       )
       (br $__rjto$0)
      )
      (i32.store
       (local.tee $4
        (call $_malloc
         (i32.const 20)
        )
       )
       (local.get $2)
      )
      (i64.store offset=4 align=4
       (local.get $4)
       (i64.const 0)
      )
      (i64.store offset=12 align=4
       (local.get $4)
       (i64.const 0)
      )
      (i32.store
       (if (result i32)
        (local.get $5)
        (i32.const 28240)
        (block (result i32)
         (local.set $0
          (local.get $3)
         )
         (loop $while-in2
          (if
           (local.tee $3
            (i32.load offset=16
             (local.get $0)
            )
           )
           (block
            (local.set $0
             (local.get $3)
            )
            (br $while-in2)
           )
          )
         )
         (i32.add
          (local.get $0)
          (i32.const 16)
         )
        )
       )
       (local.get $4)
      )
      (local.set $0
       (local.get $4)
      )
     )
     (if
      (i32.eqz
       (i32.load offset=4
        (local.tee $4
         (local.get $0)
        )
       )
      )
      (i32.store offset=4
       (local.get $4)
       (call $_malloc
        (i32.const 512)
       )
      )
     )
     (if
      (i32.eq
       (local.tee $3
        (i32.atomic.load
         (local.tee $6
          (i32.add
           (local.get $0)
           (i32.const 8)
          )
         )
        )
       )
       (local.tee $7
        (i32.rem_s
         (i32.add
          (local.tee $0
           (i32.atomic.load offset=12
            (local.tee $5
             (local.get $0)
            )
           )
          )
          (i32.const 1)
         )
         (i32.const 128)
        )
       )
      )
      (block $label$break$L31
       (local.set $0
        (local.get $3)
       )
       (loop $while-in5
        (block $while-out4
         (call $___pthread_mutex_unlock
          (i32.const 28212)
         )
         (br_if $while-out4
          (i32.ne
           (local.get $2)
           (i32.load
            (i32.const 28204)
           )
          )
         )
         (drop
          (call $_emscripten_futex_wait
           (local.get $6)
           (local.get $0)
           (global.get $inf$asm2wasm$import)
          )
         )
         (drop
          (call $___pthread_mutex_lock
           (i32.const 28212)
          )
         )
         (br_if $while-in5
          (i32.eq
           (local.tee $0
            (i32.atomic.load
             (local.get $6)
            )
           )
           (local.tee $7
            (i32.rem_s
             (i32.add
              (local.tee $8
               (i32.atomic.load offset=12
                (local.get $5)
               )
              )
              (i32.const 1)
             )
             (i32.const 128)
            )
           )
          )
         )
         (local.set $3
          (local.get $0)
         )
         (local.set $0
          (local.get $8)
         )
         (br $label$break$L31)
        )
       )
       (call $_free
        (i32.load offset=184
         (local.get $1)
        )
       )
       (call $_free
        (local.get $1)
       )
       (return)
      )
     )
     (i32.store
      (i32.add
       (i32.load offset=4
        (local.get $4)
       )
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
      )
      (local.get $1)
     )
     (if
      (i32.eq
       (local.get $0)
       (local.get $3)
      )
      (block $do-once
       (if
        (i32.eq
         (i32.load
          (i32.const 28204)
         )
         (local.get $2)
        )
        (block
         (drop
          (call $_emscripten_asm_const_i
           (i32.const 0)
          )
         )
         (br $do-once)
        )
       )
       (if
        (i32.eqz
         (call $_emscripten_asm_const_ii
          (i32.const 1)
          (local.get $2)
         )
        )
        (block
         (call $_free
          (i32.load offset=184
           (local.get $1)
          )
         )
         (call $_free
          (local.get $1)
         )
         (call $___pthread_mutex_unlock
          (i32.const 28212)
         )
         (return)
        )
       )
      )
     )
     (i32.atomic.store offset=12
      (local.get $5)
      (local.get $7)
     )
     (call $___pthread_mutex_unlock
      (i32.const 28212)
     )
     (return)
    )
   )
  )
  (call $__do_call
   (local.get $1)
  )
 )
 (func $_emscripten_async_queue_on_thread_ (; 619 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i64)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $9
   (i32.and
    (i32.shr_u
     (local.get $1)
     (i32.const 25)
    )
    (i32.const 15)
   )
  )
  (if
   (i32.eqz
    (local.tee $5
     (call $_malloc
      (i32.const 192)
     )
    )
   )
   (call $___assert_fail
    (i32.const 19821)
    (i32.const 19826)
    (i32.const 172)
    (i32.const 19892)
   )
  )
  (i32.store offset=8
   (local.get $5)
   (i32.const 0)
  )
  (i32.store
   (local.get $5)
   (local.get $1)
  )
  (i32.store offset=4
   (local.get $5)
   (local.get $2)
  )
  (i32.store offset=184
   (local.get $5)
   (local.get $3)
  )
  (i32.store
   (local.get $6)
   (local.get $4)
  )
  (if
   (i32.eqz
    (local.get $9)
   )
   (block
    (i32.store offset=188
     (local.get $5)
     (i32.const 1)
    )
    (call $_emscripten_async_queue_call_on_thread
     (local.get $0)
     (local.get $5)
    )
    (global.set $STACKTOP
     (local.get $8)
    )
    (return)
   )
  )
  (local.set $2
   (i32.and
    (local.get $1)
    (i32.const 33554431)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (block $__rjto$1
   (loop $label$continue$L7
    (block $switch
     (block $switch-case2
      (block $switch-case1
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-case0 $switch-case1 $switch-case2 $__rjto$1
          (i32.and
           (local.get $2)
           (i32.const 3)
          )
         )
        )
        (local.set $4
         (i32.load
          (local.tee $3
           (i32.and
            (i32.add
             (i32.load
              (local.get $6)
             )
             (i32.const 3)
            )
            (i32.const -4)
           )
          )
         )
        )
        (i32.store
         (local.get $6)
         (i32.add
          (local.get $3)
          (i32.const 4)
         )
        )
        (i32.store
         (i32.add
          (i32.add
           (local.get $5)
           (i32.const 16)
          )
          (i32.shl
           (local.get $1)
           (i32.const 3)
          )
         )
         (local.get $4)
        )
        (br $switch)
       )
       (local.set $10
        (i64.load
         (local.tee $3
          (i32.and
           (i32.add
            (i32.load
             (local.get $6)
            )
            (i32.const 7)
           )
           (i32.const -8)
          )
         )
        )
       )
       (i32.store
        (local.get $6)
        (i32.add
         (local.get $3)
         (i32.const 8)
        )
       )
       (i64.store
        (i32.add
         (i32.add
          (local.get $5)
          (i32.const 16)
         )
         (i32.shl
          (local.get $1)
          (i32.const 3)
         )
        )
        (local.get $10)
       )
       (br $switch)
      )
      (local.set $7
       (f64.load
        (local.tee $3
         (i32.and
          (i32.add
           (i32.load
            (local.get $6)
           )
           (i32.const 7)
          )
          (i32.const -8)
         )
        )
       )
      )
      (i32.store
       (local.get $6)
       (i32.add
        (local.get $3)
        (i32.const 8)
       )
      )
      (f32.store
       (i32.add
        (i32.add
         (local.get $5)
         (i32.const 16)
        )
        (i32.shl
         (local.get $1)
         (i32.const 3)
        )
       )
       (f32.demote_f64
        (local.get $7)
       )
      )
      (br $switch)
     )
     (local.set $7
      (f64.load
       (local.tee $3
        (i32.and
         (i32.add
          (i32.load
           (local.get $6)
          )
          (i32.const 7)
         )
         (i32.const -8)
        )
       )
      )
     )
     (i32.store
      (local.get $6)
      (i32.add
       (local.get $3)
       (i32.const 8)
      )
     )
     (f64.store
      (i32.add
       (i32.add
        (local.get $5)
        (i32.const 16)
       )
       (i32.shl
        (local.get $1)
        (i32.const 3)
       )
      )
      (local.get $7)
     )
    )
    (local.set $2
     (i32.shr_u
      (local.get $2)
      (i32.const 2)
     )
    )
    (br_if $label$continue$L7
     (i32.lt_u
      (local.tee $1
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
      (local.get $9)
     )
    )
   )
   (i32.store offset=188
    (local.get $5)
    (i32.const 1)
   )
   (call $_emscripten_async_queue_call_on_thread
    (local.get $0)
    (local.get $5)
   )
   (global.set $STACKTOP
    (local.get $8)
   )
  )
 )
 (func $_emscripten_async_run_in_main_thread (; 620 ;) (; has Stack IR ;) (param $0 i32)
  (call $_emscripten_async_queue_call_on_thread
   (i32.load
    (i32.const 28204)
   )
   (local.get $0)
  )
 )
 (func $_emscripten_current_thread_process_queued_calls (; 621 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (global.get $__pthread_is_main_browser_thread)
   (if
    (i32.load
     (i32.const 28208)
    )
    (return)
    (i32.store
     (i32.const 28208)
     (i32.const 1)
    )
   )
  )
  (drop
   (call $___pthread_mutex_lock
    (i32.const 28212)
   )
  )
  (if
   (i32.eqz
    (local.tee $1
     (global.get $__pthread_ptr)
    )
   )
   (call $___assert_fail
    (i32.const 19996)
    (i32.const 19826)
    (i32.const 383)
    (i32.const 20003)
   )
  )
  (if
   (local.tee $0
    (i32.load
     (i32.const 28240)
    )
   )
   (block $label$break$L10
    (loop $while-in
     (if
      (i32.ne
       (local.get $1)
       (i32.load
        (local.get $0)
       )
      )
      (block
       (br_if $label$break$L10
        (i32.eqz
         (local.tee $0
          (i32.load offset=16
           (local.get $0)
          )
         )
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $2
     (i32.eq
      (local.tee $1
       (i32.atomic.load
        (local.tee $3
         (i32.add
          (local.get $0)
          (i32.const 8)
         )
        )
       )
      )
      (i32.atomic.load offset=12
       (local.tee $4
        (local.get $0)
       )
      )
     )
    )
    (call $___pthread_mutex_unlock
     (i32.const 28212)
    )
    (if
     (i32.eqz
      (local.get $2)
     )
     (block
      (local.set $2
       (local.get $0)
      )
      (local.set $0
       (local.get $1)
      )
      (loop $while-in2
       (call $__do_call
        (i32.load
         (i32.add
          (i32.load offset=4
           (local.get $2)
          )
          (i32.shl
           (local.get $0)
           (i32.const 2)
          )
         )
        )
       )
       (drop
        (call $___pthread_mutex_lock
         (i32.const 28212)
        )
       )
       (i32.atomic.store
        (local.get $3)
        (local.tee $0
         (i32.rem_s
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
          (i32.const 128)
         )
        )
       )
       (local.set $1
        (i32.eq
         (i32.atomic.load offset=12
          (local.get $4)
         )
         (local.get $0)
        )
       )
       (call $___pthread_mutex_unlock
        (i32.const 28212)
       )
       (br_if $while-in2
        (i32.eqz
         (local.get $1)
        )
       )
      )
     )
    )
    (drop
     (call $_emscripten_futex_wake
      (local.get $3)
      (i32.const 2147483647)
     )
    )
    (if
     (i32.eqz
      (global.get $__pthread_is_main_browser_thread)
     )
     (return)
    )
    (i32.store
     (i32.const 28208)
     (i32.const 0)
    )
    (return)
   )
  )
  (call $___pthread_mutex_unlock
   (i32.const 28212)
  )
  (if
   (i32.eqz
    (global.get $__pthread_is_main_browser_thread)
   )
   (return)
  )
  (i32.store
   (i32.const 28208)
   (i32.const 0)
  )
 )
 (func $_emscripten_main_browser_thread_id (; 622 ;) (; has Stack IR ;) (result i32)
  (i32.load
   (i32.const 28204)
  )
 )
 (func $_emscripten_main_thread_process_queued_calls (; 623 ;) (; has Stack IR ;)
  (if
   (i32.eqz
    (global.get $__pthread_is_main_browser_thread)
   )
   (return)
  )
  (call $_emscripten_current_thread_process_queued_calls)
 )
 (func $_emscripten_register_main_browser_thread_id (; 624 ;) (; has Stack IR ;) (param $0 i32)
  (i32.store
   (i32.const 28204)
   (local.get $0)
  )
 )
 (func $_emscripten_run_in_main_runtime_thread_js (; 625 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f64)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 192)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 192)
   )
  )
  (if
   (local.tee $9
    (i32.ne
     (local.get $3)
     (i32.const 0)
    )
   )
   (block
    (i32.store offset=8
     (local.get $5)
     (i32.const 0)
    )
    (local.set $8
     (i32.add
      (local.get $5)
      (i32.const 184)
     )
    )
    (local.set $4
     (local.get $5)
    )
   )
   (if
    (local.tee $6
     (call $_malloc
      (i32.const 192)
     )
    )
    (block
     (i32.store offset=8
      (local.get $6)
      (i32.const 0)
     )
     (i32.store offset=4
      (local.get $6)
      (i32.const 0)
     )
     (local.set $8
      (i32.add
       (local.get $6)
       (i32.const 184)
      )
     )
     (local.set $4
      (local.get $6)
     )
    )
    (call $___assert_fail
     (i32.const 19821)
     (i32.const 19826)
     (i32.const 172)
     (i32.const 19892)
    )
   )
  )
  (i32.store
   (local.get $8)
   (i32.const 0)
  )
  (i32.store offset=188
   (local.get $4)
   (i32.sub
    (i32.const 1)
    (local.get $3)
   )
  )
  (i32.store
   (local.get $4)
   (i32.const -2126512128)
  )
  (i32.store offset=4
   (local.get $4)
   (local.get $0)
  )
  (if
   (i32.ge_s
    (local.get $1)
    (i32.const 20)
   )
   (call $___assert_fail
    (i32.const 19914)
    (i32.const 19826)
    (i32.const 782)
    (i32.const 19955)
   )
  )
  (i32.store offset=16
   (local.get $4)
   (local.get $1)
  )
  (if
   (i32.gt_s
    (local.get $1)
    (i32.const 0)
   )
   (drop
    (call $_memcpy
     (i32.add
      (local.get $4)
      (i32.const 24)
     )
     (local.get $2)
     (i32.shl
      (local.get $1)
      (i32.const 3)
     )
    )
   )
  )
  (local.set $0
   (i32.load
    (i32.const 28204)
   )
  )
  (if (result f64)
   (local.get $9)
   (block (result f64)
    (call $_emscripten_async_queue_call_on_thread
     (local.get $0)
     (local.get $5)
    )
    (call $_emscripten_wait_for_call_v
     (local.get $5)
     (global.get $inf$asm2wasm$import)
    )
    (local.set $10
     (f64.load offset=176
      (local.get $5)
     )
    )
    (global.set $STACKTOP
     (local.get $7)
    )
    (local.get $10)
   )
   (block (result f64)
    (call $_emscripten_async_queue_call_on_thread
     (local.get $0)
     (local.get $4)
    )
    (global.set $STACKTOP
     (local.get $7)
    )
    (f64.const 0)
   )
  )
 )
 (func $_emscripten_sync_run_in_main_thread (; 626 ;) (; has Stack IR ;) (param $0 i32)
  (call $_emscripten_async_queue_call_on_thread
   (i32.load
    (i32.const 28204)
   )
   (local.get $0)
  )
  (call $_emscripten_wait_for_call_v
   (local.get $0)
   (global.get $inf$asm2wasm$import)
  )
 )
 (func $_emscripten_sync_run_in_main_thread_0 (; 627 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 192)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 192)
   )
  )
  (drop
   (call $_memset
    (local.get $1)
    (i32.const 0)
    (i32.const 192)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $0)
  )
  (i32.store offset=176
   (local.get $1)
   (i32.const 0)
  )
  (call $_emscripten_async_queue_call_on_thread
   (i32.load
    (i32.const 28204)
   )
   (local.get $1)
  )
  (call $_emscripten_wait_for_call_v
   (local.get $1)
   (global.get $inf$asm2wasm$import)
  )
  (local.set $0
   (i32.load offset=176
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
  (local.get $0)
 )
 (func $_emscripten_sync_run_in_main_thread_1 (; 628 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 192)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 192)
   )
  )
  (drop
   (call $_memset
    (local.get $2)
    (i32.const 0)
    (i32.const 192)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $0)
  )
  (i32.store offset=16
   (local.get $2)
   (local.get $1)
  )
  (i32.store offset=176
   (local.get $2)
   (i32.const 0)
  )
  (call $_emscripten_async_queue_call_on_thread
   (i32.load
    (i32.const 28204)
   )
   (local.get $2)
  )
  (call $_emscripten_wait_for_call_v
   (local.get $2)
   (global.get $inf$asm2wasm$import)
  )
  (local.set $0
   (i32.load offset=176
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_emscripten_sync_run_in_main_thread_2 (; 629 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 192)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 192)
   )
  )
  (drop
   (call $_memset
    (local.get $3)
    (i32.const 0)
    (i32.const 192)
   )
  )
  (i32.store
   (local.get $3)
   (local.get $0)
  )
  (i32.store offset=16
   (local.get $3)
   (local.get $1)
  )
  (i32.store offset=24
   (local.get $3)
   (local.get $2)
  )
  (i32.store offset=176
   (local.get $3)
   (i32.const 0)
  )
  (call $_emscripten_async_queue_call_on_thread
   (i32.load
    (i32.const 28204)
   )
   (local.get $3)
  )
  (call $_emscripten_wait_for_call_v
   (local.get $3)
   (global.get $inf$asm2wasm$import)
  )
  (local.set $0
   (i32.load offset=176
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (local.get $0)
 )
 (func $_emscripten_sync_run_in_main_thread_3 (; 630 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 192)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 192)
   )
  )
  (drop
   (call $_memset
    (local.get $4)
    (i32.const 0)
    (i32.const 192)
   )
  )
  (i32.store
   (local.get $4)
   (local.get $0)
  )
  (i32.store offset=16
   (local.get $4)
   (local.get $1)
  )
  (i32.store offset=24
   (local.get $4)
   (local.get $2)
  )
  (i32.store offset=32
   (local.get $4)
   (local.get $3)
  )
  (i32.store offset=176
   (local.get $4)
   (i32.const 0)
  )
  (call $_emscripten_async_queue_call_on_thread
   (i32.load
    (i32.const 28204)
   )
   (local.get $4)
  )
  (call $_emscripten_wait_for_call_v
   (local.get $4)
   (global.get $inf$asm2wasm$import)
  )
  (local.set $0
   (i32.load offset=176
    (local.get $4)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $_emscripten_sync_run_in_main_thread_4 (; 631 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 192)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 192)
   )
  )
  (drop
   (call $_memset
    (local.get $5)
    (i32.const 0)
    (i32.const 192)
   )
  )
  (i32.store
   (local.get $5)
   (local.get $0)
  )
  (i32.store offset=16
   (local.get $5)
   (local.get $1)
  )
  (i32.store offset=24
   (local.get $5)
   (local.get $2)
  )
  (i32.store offset=32
   (local.get $5)
   (local.get $3)
  )
  (i32.store offset=40
   (local.get $5)
   (local.get $4)
  )
  (i32.store offset=176
   (local.get $5)
   (i32.const 0)
  )
  (call $_emscripten_async_queue_call_on_thread
   (i32.load
    (i32.const 28204)
   )
   (local.get $5)
  )
  (call $_emscripten_wait_for_call_v
   (local.get $5)
   (global.get $inf$asm2wasm$import)
  )
  (local.set $0
   (i32.load offset=176
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $_emscripten_sync_run_in_main_thread_5 (; 632 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 192)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 192)
   )
  )
  (drop
   (call $_memset
    (local.get $6)
    (i32.const 0)
    (i32.const 192)
   )
  )
  (i32.store
   (local.get $6)
   (local.get $0)
  )
  (i32.store offset=16
   (local.get $6)
   (local.get $1)
  )
  (i32.store offset=24
   (local.get $6)
   (local.get $2)
  )
  (i32.store offset=32
   (local.get $6)
   (local.get $3)
  )
  (i32.store offset=40
   (local.get $6)
   (local.get $4)
  )
  (i32.store offset=48
   (local.get $6)
   (local.get $5)
  )
  (i32.store offset=176
   (local.get $6)
   (i32.const 0)
  )
  (call $_emscripten_async_queue_call_on_thread
   (i32.load
    (i32.const 28204)
   )
   (local.get $6)
  )
  (call $_emscripten_wait_for_call_v
   (local.get $6)
   (global.get $inf$asm2wasm$import)
  )
  (local.set $0
   (i32.load offset=176
    (local.get $6)
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $0)
 )
 (func $_emscripten_sync_run_in_main_thread_6 (; 633 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 192)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 192)
   )
  )
  (drop
   (call $_memset
    (local.get $7)
    (i32.const 0)
    (i32.const 192)
   )
  )
  (i32.store
   (local.get $7)
   (local.get $0)
  )
  (i32.store offset=16
   (local.get $7)
   (local.get $1)
  )
  (i32.store offset=24
   (local.get $7)
   (local.get $2)
  )
  (i32.store offset=32
   (local.get $7)
   (local.get $3)
  )
  (i32.store offset=40
   (local.get $7)
   (local.get $4)
  )
  (i32.store offset=48
   (local.get $7)
   (local.get $5)
  )
  (i32.store offset=56
   (local.get $7)
   (local.get $6)
  )
  (i32.store offset=176
   (local.get $7)
   (i32.const 0)
  )
  (call $_emscripten_async_queue_call_on_thread
   (i32.load
    (i32.const 28204)
   )
   (local.get $7)
  )
  (call $_emscripten_wait_for_call_v
   (local.get $7)
   (global.get $inf$asm2wasm$import)
  )
  (local.set $0
   (i32.load offset=176
    (local.get $7)
   )
  )
  (global.set $STACKTOP
   (local.get $8)
  )
  (local.get $0)
 )
 (func $_emscripten_sync_run_in_main_thread_7 (; 634 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 192)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 192)
   )
  )
  (drop
   (call $_memset
    (local.get $8)
    (i32.const 0)
    (i32.const 192)
   )
  )
  (i32.store
   (local.get $8)
   (local.get $0)
  )
  (i32.store offset=16
   (local.get $8)
   (local.get $1)
  )
  (i32.store offset=24
   (local.get $8)
   (local.get $2)
  )
  (i32.store offset=32
   (local.get $8)
   (local.get $3)
  )
  (i32.store offset=40
   (local.get $8)
   (local.get $4)
  )
  (i32.store offset=48
   (local.get $8)
   (local.get $5)
  )
  (i32.store offset=56
   (local.get $8)
   (local.get $6)
  )
  (i32.store
   (i32.sub
    (local.get $8)
    (i32.const -64)
   )
   (local.get $7)
  )
  (i32.store offset=176
   (local.get $8)
   (i32.const 0)
  )
  (call $_emscripten_async_queue_call_on_thread
   (i32.load
    (i32.const 28204)
   )
   (local.get $8)
  )
  (call $_emscripten_wait_for_call_v
   (local.get $8)
   (global.get $inf$asm2wasm$import)
  )
  (local.set $0
   (i32.load offset=176
    (local.get $8)
   )
  )
  (global.set $STACKTOP
   (local.get $9)
  )
  (local.get $0)
 )
 (func $_emscripten_sync_run_in_main_thread_xprintf_varargs (; 635 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 336)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 336)
   )
  )
  (local.set $4
   (i32.add
    (local.get $5)
    (i32.const 144)
   )
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $5)
     (i32.const 128)
    )
   )
   (local.get $3)
  )
  (local.set $9
   (i32.add
    (local.tee $6
     (call $_vsnprintf
      (local.get $5)
      (i32.const 128)
      (local.get $2)
      (local.get $7)
     )
    )
    (i32.const 1)
   )
  )
  (local.set $2
   (if (result i32)
    (i32.gt_s
     (local.get $6)
     (i32.const 127)
    )
    (block (result i32)
     (local.set $6
      (call $_malloc
       (local.get $9)
      )
     )
     (i32.store
      (local.get $7)
      (local.get $3)
     )
     (drop
      (call $_vsnprintf
       (local.get $6)
       (local.get $9)
       (local.get $2)
       (local.get $7)
      )
     )
     (local.get $6)
    )
    (local.get $5)
   )
  )
  (drop
   (call $_memset
    (local.get $4)
    (i32.const 0)
    (i32.const 192)
   )
  )
  (i32.store
   (local.get $4)
   (local.get $0)
  )
  (i32.store offset=16
   (local.get $4)
   (local.get $1)
  )
  (i32.store offset=24
   (local.get $4)
   (local.get $2)
  )
  (i32.store offset=176
   (local.get $4)
   (i32.const 0)
  )
  (call $_emscripten_async_queue_call_on_thread
   (i32.load
    (i32.const 28204)
   )
   (local.get $4)
  )
  (call $_emscripten_wait_for_call_v
   (local.get $4)
   (global.get $inf$asm2wasm$import)
  )
  (if
   (i32.eq
    (local.get $2)
    (local.get $5)
   )
   (block
    (local.set $0
     (i32.load offset=176
      (local.get $4)
     )
    )
    (global.set $STACKTOP
     (local.get $8)
    )
    (return
     (local.get $0)
    )
   )
  )
  (call $_free
   (local.get $2)
  )
  (local.set $0
   (i32.load offset=176
    (local.get $4)
   )
  )
  (global.set $STACKTOP
   (local.get $8)
  )
  (local.get $0)
 )
 (func $_proxy_main (; 636 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 48)
   )
  )
  (if
   (i32.eqz
    (call $_emscripten_has_threading_support)
   )
   (block
    (local.set $0
     (call $___call_main
      (i32.load
       (i32.const 28196)
      )
      (i32.load
       (i32.const 28200)
      )
     )
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return
     (local.get $0)
    )
   )
  )
  (call $_pthread_attr_init
   (local.tee $2
    (i32.add
     (local.get $4)
     (i32.const 4)
    )
   )
  )
  (i32.store offset=12
   (local.get $2)
   (i32.const 0)
  )
  (i32.store offset=8
   (local.get $2)
   (i32.const 0)
  )
  (i32.store
   (local.get $2)
   (i32.const 49152)
  )
  (if
   (call $_emscripten_asm_const_i
    (i32.const 2)
   )
   (i32.store offset=36
    (local.get $2)
    (i32.const 19768)
   )
  )
  (i32.store
   (i32.const 28196)
   (local.get $0)
  )
  (i32.store
   (i32.const 28200)
   (local.get $1)
  )
  (local.set $0
   (if (result i32)
    (call $_pthread_create
     (local.get $4)
     (local.get $2)
     (i32.const 16)
     (i32.const 28196)
    )
    (call $___call_main
     (i32.load
      (i32.const 28196)
     )
     (i32.load
      (i32.const 28200)
     )
    )
    (block (result i32)
     (drop
      (call $_emscripten_asm_const_i
       (i32.const 3)
      )
     )
     (i32.const 0)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $__emscripten_atomic_fetch_and_add_u64 (; 637 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (result i64)
  (local $2 i32)
  (local.set $2
   (i32.add
    (i32.shl
     (i32.and
      (i32.shr_u
       (local.get $0)
       (i32.const 3)
      )
      (i32.const 255)
     )
     (i32.const 2)
    )
    (i32.const 25728)
   )
  )
  (loop $while-in
   (br_if $while-in
    (i32.atomic.rmw.cmpxchg
     (local.get $2)
     (i32.const 0)
     (i32.const 1)
    )
   )
  )
  (i64.store
   (local.get $0)
   (i64.add
    (local.get $1)
    (local.tee $1
     (i64.load
      (local.get $0)
     )
    )
   )
  )
  (i32.atomic.store
   (local.get $2)
   (i32.const 0)
  )
  (local.get $1)
 )
 (func $__emscripten_atomic_fetch_and_and_u64 (; 638 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (result i64)
  (local $2 i32)
  (local.set $2
   (i32.add
    (i32.shl
     (i32.and
      (i32.shr_u
       (local.get $0)
       (i32.const 3)
      )
      (i32.const 255)
     )
     (i32.const 2)
    )
    (i32.const 25728)
   )
  )
  (loop $while-in
   (br_if $while-in
    (i32.atomic.rmw.cmpxchg
     (local.get $2)
     (i32.const 0)
     (i32.const 1)
    )
   )
  )
  (i64.store
   (local.get $0)
   (i64.and
    (local.get $1)
    (local.tee $1
     (i64.load
      (local.get $0)
     )
    )
   )
  )
  (i32.atomic.store
   (local.get $2)
   (i32.const 0)
  )
  (local.get $1)
 )
 (func $__emscripten_atomic_fetch_and_or_u64 (; 639 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (result i64)
  (local $2 i32)
  (local.set $2
   (i32.add
    (i32.shl
     (i32.and
      (i32.shr_u
       (local.get $0)
       (i32.const 3)
      )
      (i32.const 255)
     )
     (i32.const 2)
    )
    (i32.const 25728)
   )
  )
  (loop $while-in
   (br_if $while-in
    (i32.atomic.rmw.cmpxchg
     (local.get $2)
     (i32.const 0)
     (i32.const 1)
    )
   )
  )
  (i64.store
   (local.get $0)
   (i64.or
    (local.get $1)
    (local.tee $1
     (i64.load
      (local.get $0)
     )
    )
   )
  )
  (i32.atomic.store
   (local.get $2)
   (i32.const 0)
  )
  (local.get $1)
 )
 (func $__emscripten_atomic_fetch_and_sub_u64 (; 640 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (result i64)
  (local $2 i32)
  (local $3 i64)
  (local.set $2
   (i32.add
    (i32.shl
     (i32.and
      (i32.shr_u
       (local.get $0)
       (i32.const 3)
      )
      (i32.const 255)
     )
     (i32.const 2)
    )
    (i32.const 25728)
   )
  )
  (loop $while-in
   (br_if $while-in
    (i32.atomic.rmw.cmpxchg
     (local.get $2)
     (i32.const 0)
     (i32.const 1)
    )
   )
  )
  (i64.store
   (local.get $0)
   (i64.sub
    (local.tee $3
     (i64.load
      (local.get $0)
     )
    )
    (local.get $1)
   )
  )
  (i32.atomic.store
   (local.get $2)
   (i32.const 0)
  )
  (local.get $3)
 )
 (func $__emscripten_atomic_fetch_and_xor_u64 (; 641 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (result i64)
  (local $2 i32)
  (local.set $2
   (i32.add
    (i32.shl
     (i32.and
      (i32.shr_u
       (local.get $0)
       (i32.const 3)
      )
      (i32.const 255)
     )
     (i32.const 2)
    )
    (i32.const 25728)
   )
  )
  (loop $while-in
   (br_if $while-in
    (i32.atomic.rmw.cmpxchg
     (local.get $2)
     (i32.const 0)
     (i32.const 1)
    )
   )
  )
  (i64.store
   (local.get $0)
   (i64.xor
    (local.get $1)
    (local.tee $1
     (i64.load
      (local.get $0)
     )
    )
   )
  )
  (i32.atomic.store
   (local.get $2)
   (i32.const 0)
  )
  (local.get $1)
 )
 (func $_emscripten_atomic_cas_u64 (; 642 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (param $2 i64) (result i64)
  (local $3 i32)
  (local.set $3
   (i32.add
    (i32.shl
     (i32.and
      (i32.shr_u
       (local.get $0)
       (i32.const 3)
      )
      (i32.const 255)
     )
     (i32.const 2)
    )
    (i32.const 25728)
   )
  )
  (loop $while-in
   (br_if $while-in
    (i32.atomic.rmw.cmpxchg
     (local.get $3)
     (i32.const 0)
     (i32.const 1)
    )
   )
  )
  (if
   (i64.eq
    (local.get $1)
    (local.tee $1
     (i64.load
      (local.get $0)
     )
    )
   )
   (i64.store
    (local.get $0)
    (local.get $2)
   )
  )
  (i32.atomic.store
   (local.get $3)
   (i32.const 0)
  )
  (local.get $1)
 )
 (func $_emscripten_atomic_exchange_u64 (; 643 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (result i64)
  (local $2 i32)
  (local $3 i64)
  (local.set $2
   (i32.add
    (i32.shl
     (i32.and
      (i32.shr_u
       (local.get $0)
       (i32.const 3)
      )
      (i32.const 255)
     )
     (i32.const 2)
    )
    (i32.const 25728)
   )
  )
  (loop $while-in
   (br_if $while-in
    (i32.atomic.rmw.cmpxchg
     (local.get $2)
     (i32.const 0)
     (i32.const 1)
    )
   )
  )
  (local.set $3
   (i64.load
    (local.get $0)
   )
  )
  (i64.store
   (local.get $0)
   (local.get $1)
  )
  (i32.atomic.store
   (local.get $2)
   (i32.const 0)
  )
  (local.get $3)
 )
 (func $_emscripten_atomic_load_f32 (; 644 ;) (; has Stack IR ;) (param $0 i32) (result f32)
  (f32.reinterpret_i32
   (i32.atomic.load
    (local.get $0)
   )
  )
 )
 (func $_emscripten_atomic_load_f64 (; 645 ;) (; has Stack IR ;) (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 f64)
  (local.set $1
   (i32.add
    (i32.shl
     (i32.and
      (i32.shr_u
       (local.get $0)
       (i32.const 3)
      )
      (i32.const 255)
     )
     (i32.const 2)
    )
    (i32.const 25728)
   )
  )
  (loop $while-in
   (br_if $while-in
    (i32.atomic.rmw.cmpxchg
     (local.get $1)
     (i32.const 0)
     (i32.const 1)
    )
   )
  )
  (local.set $2
   (f64.load
    (local.get $0)
   )
  )
  (i32.atomic.store
   (local.get $1)
   (i32.const 0)
  )
  (local.get $2)
 )
 (func $_emscripten_atomic_load_u64 (; 646 ;) (; has Stack IR ;) (param $0 i32) (result i64)
  (local $1 i32)
  (local $2 i64)
  (local.set $1
   (i32.add
    (i32.shl
     (i32.and
      (i32.shr_u
       (local.get $0)
       (i32.const 3)
      )
      (i32.const 255)
     )
     (i32.const 2)
    )
    (i32.const 25728)
   )
  )
  (loop $while-in
   (br_if $while-in
    (i32.atomic.rmw.cmpxchg
     (local.get $1)
     (i32.const 0)
     (i32.const 1)
    )
   )
  )
  (local.set $2
   (i64.load
    (local.get $0)
   )
  )
  (i32.atomic.store
   (local.get $1)
   (i32.const 0)
  )
  (local.get $2)
 )
 (func $_emscripten_atomic_store_f32 (; 647 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (result f32)
  (i32.atomic.store
   (local.get $0)
   (local.tee $0
    (i32.reinterpret_f32
     (local.get $1)
    )
   )
  )
  (f32.convert_i32_u
   (local.get $0)
  )
 )
 (func $_emscripten_atomic_store_f64 (; 648 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (result f64)
  (local $2 i32)
  (local.set $2
   (i32.add
    (i32.shl
     (i32.and
      (i32.shr_u
       (local.get $0)
       (i32.const 3)
      )
      (i32.const 255)
     )
     (i32.const 2)
    )
    (i32.const 25728)
   )
  )
  (loop $while-in
   (br_if $while-in
    (i32.atomic.rmw.cmpxchg
     (local.get $2)
     (i32.const 0)
     (i32.const 1)
    )
   )
  )
  (f64.store
   (local.get $0)
   (local.get $1)
  )
  (i32.atomic.store
   (local.get $2)
   (i32.const 0)
  )
  (local.get $1)
 )
 (func $_emscripten_atomic_store_u64 (; 649 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (result i64)
  (local $2 i32)
  (local.set $2
   (i32.add
    (i32.shl
     (i32.and
      (i32.shr_u
       (local.get $0)
       (i32.const 3)
      )
      (i32.const 255)
     )
     (i32.const 2)
    )
    (i32.const 25728)
   )
  )
  (loop $while-in
   (br_if $while-in
    (i32.atomic.rmw.cmpxchg
     (local.get $2)
     (i32.const 0)
     (i32.const 1)
    )
   )
  )
  (i64.store
   (local.get $0)
   (local.get $1)
  )
  (i32.atomic.store
   (local.get $2)
   (i32.const 0)
  )
  (local.get $1)
 )
 (func $_pthread_attr_init (; 650 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 48)
   )
  )
  (i64.store align=4
   (local.get $1)
   (i64.const 0)
  )
  (i64.store offset=8 align=4
   (local.get $1)
   (i64.const 0)
  )
  (i64.store offset=16 align=4
   (local.get $1)
   (i64.const 0)
  )
  (i64.store offset=24 align=4
   (local.get $1)
   (i64.const 0)
  )
  (i64.store offset=32 align=4
   (local.get $1)
   (i64.const 0)
  )
  (i32.store offset=40
   (local.get $1)
   (i32.const 0)
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (local.get $1)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load offset=8 align=4
    (local.get $1)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load offset=16 align=4
    (local.get $1)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load offset=24 align=4
    (local.get $1)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load offset=32 align=4
    (local.get $1)
   )
  )
  (i32.store offset=40
   (local.get $0)
   (i32.load offset=40
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $___emscripten_thread_main (; 651 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (call $___call_main
   (i32.load
    (local.get $0)
   )
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $_emscripten_wait_for_call_v (; 652 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64)
  (local $2 f64)
  (local $3 f64)
  (if
   (i32.atomic.load
    (local.tee $0
     (i32.add
      (local.get $0)
      (i32.const 8)
     )
    )
   )
   (return)
  )
  (local.set $2
   (f64.add
    (local.tee $3
     (call $_emscripten_get_now)
    )
    (local.get $1)
   )
  )
  (if
   (f64.lt
    (local.get $3)
    (local.get $2)
   )
   (block
    (local.set $1
     (local.get $3)
    )
    (loop $while-in
     (drop
      (call $_emscripten_futex_wait
       (local.get $0)
       (i32.const 0)
       (f64.sub
        (local.get $2)
        (local.get $1)
       )
      )
     )
     (br_if $while-in
      (i32.and
       (i32.eqz
        (i32.atomic.load
         (local.get $0)
        )
       )
       (f64.lt
        (local.tee $1
         (call $_emscripten_get_now)
        )
        (local.get $2)
       )
      )
     )
    )
   )
  )
 )
 (func $__do_call (; 653 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (if
   (i32.eq
    (i32.and
     (local.tee $1
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 402653184)
    )
    (i32.const 402653184)
   )
   (call $___assert_fail
    (i32.const 20012)
    (i32.const 19826)
    (i32.const 202)
    (i32.const 20087)
   )
  )
  (block $label$break$L4
   (if
    (i32.lt_s
     (local.get $1)
     (i32.const 234881024)
    )
    (if
     (i32.lt_s
      (local.get $1)
      (i32.const 100663336)
     )
     (block
      (if
       (i32.lt_s
        (local.get $1)
        (i32.const 67108864)
       )
       (block
        (if
         (i32.ge_s
          (local.get $1)
          (i32.const 33554432)
         )
         (block
          (block $switch-default
           (block $switch-case0
            (block $switch-case
             (br_table $switch-case $switch-default $switch-case0 $switch-default
              (i32.sub
               (local.get $1)
               (i32.const 33554432)
              )
             )
            )
            (local.set $1
             (i32.load offset=4
              (local.get $0)
             )
            )
            (call_indirect (type $FUNCSIG$vi)
             (i32.load offset=16
              (local.get $0)
             )
             (i32.add
              (i32.and
               (local.get $1)
               (i32.const 31)
              )
              (i32.const 107)
             )
            )
            (br $label$break$L4)
           )
           (local.set $1
            (i32.load offset=4
             (local.get $0)
            )
           )
           (call_indirect (type $FUNCSIG$vf)
            (f32.load offset=16
             (local.get $0)
            )
            (i32.add
             (i32.and
              (local.get $1)
              (i32.const 3)
             )
             (i32.const 92)
            )
           )
           (br $label$break$L4)
          )
          (call $___assert_fail
           (i32.const 20096)
           (i32.const 19826)
           (i32.const 349)
           (i32.const 20087)
          )
         )
        )
        (if
         (i32.lt_s
          (local.get $1)
          (i32.const 0)
         )
         (if
          (i32.eqz
           (i32.sub
            (local.get $1)
            (i32.const -2126512128)
           )
          )
          (block
           (f64.store offset=176
            (local.get $0)
            (call $_emscripten_receive_on_main_thread_js
             (i32.load offset=4
              (local.get $0)
             )
             (i32.load offset=16
              (local.get $0)
             )
             (i32.add
              (local.get $0)
              (i32.const 24)
             )
            )
           )
           (br $label$break$L4)
          )
         )
         (if
          (i32.eqz
           (local.get $1)
          )
          (block
           (local.set $1
            (i32.load offset=4
             (local.get $0)
            )
           )
           (call_indirect (type $FUNCSIG$v)
            (i32.add
             (i32.and
              (local.get $1)
              (i32.const 7)
             )
             (i32.const 84)
            )
           )
           (br $label$break$L4)
          )
         )
        )
        (call $___assert_fail
         (i32.const 20096)
         (i32.const 19826)
         (i32.const 349)
         (i32.const 20087)
        )
       )
      )
      (if
       (i32.lt_s
        (local.get $1)
        (i32.const 67108874)
       )
       (block
        (block $switch-default10
         (block $switch-case9
          (block $switch-case8
           (br_table $switch-case8 $switch-default10 $switch-default10 $switch-default10 $switch-default10 $switch-default10 $switch-default10 $switch-default10 $switch-case9 $switch-default10
            (i32.sub
             (local.get $1)
             (i32.const 67108864)
            )
           )
          )
          (local.set $1
           (i32.load offset=4
            (local.get $0)
           )
          )
          (call_indirect (type $FUNCSIG$vii)
           (i32.load offset=16
            (local.get $0)
           )
           (i32.load offset=24
            (local.get $0)
           )
           (i32.add
            (i32.and
             (local.get $1)
             (i32.const 63)
            )
            (i32.const 159)
           )
          )
          (br $label$break$L4)
         )
         (local.set $1
          (i32.load offset=4
           (local.get $0)
          )
         )
         (call_indirect (type $FUNCSIG$vif)
          (i32.load offset=16
           (local.get $0)
          )
          (f32.load offset=24
           (local.get $0)
          )
          (i32.add
           (i32.and
            (local.get $1)
            (i32.const 3)
           )
           (i32.const 143)
          )
         )
         (br $label$break$L4)
        )
        (call $___assert_fail
         (i32.const 20096)
         (i32.const 19826)
         (i32.const 349)
         (i32.const 20087)
        )
       )
      )
      (if
       (i32.lt_s
        (local.get $1)
        (i32.const 100663296)
       )
       (block
        (if
         (i32.eqz
          (i32.sub
           (local.get $1)
           (i32.const 67108874)
          )
         )
         (block
          (local.set $1
           (i32.load offset=4
            (local.get $0)
           )
          )
          (call_indirect (type $FUNCSIG$vff)
           (f32.load offset=16
            (local.get $0)
           )
           (f32.load offset=24
            (local.get $0)
           )
           (i32.add
            (i32.and
             (local.get $1)
             (i32.const 3)
            )
            (i32.const 96)
           )
          )
          (br $label$break$L4)
         )
        )
        (call $___assert_fail
         (i32.const 20096)
         (i32.const 19826)
         (i32.const 349)
         (i32.const 20087)
        )
       )
      )
      (block $switch-default17
       (block $switch-case16
        (if
         (local.tee $1
          (i32.sub
           (local.get $1)
           (i32.const 100663296)
          )
         )
         (if
          (i32.eq
           (local.get $1)
           (i32.const 32)
          )
          (br $switch-case16)
          (br $switch-default17)
         )
        )
        (local.set $1
         (i32.load offset=4
          (local.get $0)
         )
        )
        (call_indirect (type $FUNCSIG$viii)
         (i32.load offset=16
          (local.get $0)
         )
         (i32.load offset=24
          (local.get $0)
         )
         (i32.load offset=32
          (local.get $0)
         )
         (i32.add
          (i32.and
           (local.get $1)
           (i32.const 63)
          )
          (i32.const 226)
         )
        )
        (br $label$break$L4)
       )
       (local.set $1
        (i32.load offset=4
         (local.get $0)
        )
       )
       (call_indirect (type $FUNCSIG$viif)
        (i32.load offset=16
         (local.get $0)
        )
        (i32.load offset=24
         (local.get $0)
        )
        (f32.load offset=32
         (local.get $0)
        )
        (i32.add
         (i32.and
          (local.get $1)
          (i32.const 1)
         )
         (i32.const 223)
        )
       )
       (br $label$break$L4)
      )
      (call $___assert_fail
       (i32.const 20096)
       (i32.const 19826)
       (i32.const 349)
       (i32.const 20087)
      )
     )
     (block
      (if
       (i32.lt_s
        (local.get $1)
        (i32.const 134217896)
       )
       (block
        (if
         (i32.lt_s
          (local.get $1)
          (i32.const 134217728)
         )
         (block $switch-default21
          (block $switch-case20
           (block $switch-case19
            (br_table $switch-case19 $switch-default21 $switch-case20 $switch-default21
             (i32.sub
              (local.get $1)
              (i32.const 100663336)
             )
            )
           )
           (local.set $1
            (i32.load offset=4
             (local.get $0)
            )
           )
           (call_indirect (type $FUNCSIG$viff)
            (i32.load offset=16
             (local.get $0)
            )
            (f32.load offset=24
             (local.get $0)
            )
            (f32.load offset=32
             (local.get $0)
            )
            (i32.add
             (i32.and
              (local.get $1)
              (i32.const 3)
             )
             (i32.const 147)
            )
           )
           (br $label$break$L4)
          )
          (drop
           (i32.load offset=4
            (local.get $0)
           )
          )
          (call_indirect (type $FUNCSIG$vfff)
           (f32.load offset=16
            (local.get $0)
           )
           (f32.load offset=24
            (local.get $0)
           )
           (f32.load offset=32
            (local.get $0)
           )
           (i32.const 100)
          )
          (br $label$break$L4)
         )
         (block $switch-default25
          (block $switch-case24
           (if
            (local.tee $2
             (i32.add
              (local.get $1)
              (i32.const -134217728)
             )
            )
            (if
             (i32.eq
              (local.get $2)
              (i32.const 32)
             )
             (br $switch-case24)
             (br $switch-default25)
            )
           )
           (local.set $1
            (i32.load offset=4
             (local.get $0)
            )
           )
           (call_indirect (type $FUNCSIG$viiii)
            (i32.load offset=16
             (local.get $0)
            )
            (i32.load offset=24
             (local.get $0)
            )
            (i32.load offset=32
             (local.get $0)
            )
            (i32.load offset=40
             (local.get $0)
            )
            (i32.add
             (i32.and
              (local.get $1)
              (i32.const 31)
             )
             (i32.const 290)
            )
           )
           (br $label$break$L4)
          )
          (drop
           (i32.load offset=4
            (local.get $0)
           )
          )
          (call_indirect (type $FUNCSIG$viifi)
           (i32.load offset=16
            (local.get $0)
           )
           (i32.load offset=24
            (local.get $0)
           )
           (f32.load offset=32
            (local.get $0)
           )
           (i32.load offset=40
            (local.get $0)
           )
           (i32.const 225)
          )
          (br $label$break$L4)
         )
        )
        (call $___assert_fail
         (i32.const 20096)
         (i32.const 19826)
         (i32.const 349)
         (i32.const 20087)
        )
       )
      )
      (if
       (i32.lt_s
        (local.get $1)
        (i32.const 167772160)
       )
       (block
        (block $switch-default29
         (block $switch-case28
          (block $switch-case27
           (br_table $switch-case27 $switch-default29 $switch-case28 $switch-default29
            (i32.sub
             (local.get $1)
             (i32.const 134217896)
            )
           )
          )
          (local.set $1
           (i32.load offset=4
            (local.get $0)
           )
          )
          (call_indirect (type $FUNCSIG$vifff)
           (i32.load offset=16
            (local.get $0)
           )
           (f32.load offset=24
            (local.get $0)
           )
           (f32.load offset=32
            (local.get $0)
           )
           (f32.load offset=40
            (local.get $0)
           )
           (i32.add
            (i32.and
             (local.get $1)
             (i32.const 3)
            )
            (i32.const 151)
           )
          )
          (br $label$break$L4)
         )
         (local.set $1
          (i32.load offset=4
           (local.get $0)
          )
         )
         (call_indirect (type $FUNCSIG$vffff)
          (f32.load offset=16
           (local.get $0)
          )
          (f32.load offset=24
           (local.get $0)
          )
          (f32.load offset=32
           (local.get $0)
          )
          (f32.load offset=40
           (local.get $0)
          )
          (i32.add
           (i32.and
            (local.get $1)
            (i32.const 3)
           )
           (i32.const 101)
          )
         )
         (br $label$break$L4)
        )
        (call $___assert_fail
         (i32.const 20096)
         (i32.const 19826)
         (i32.const 349)
         (i32.const 20087)
        )
       )
      )
      (if
       (i32.lt_s
        (local.get $1)
        (i32.const 167772840)
       )
       (block
        (if
         (i32.eqz
          (i32.sub
           (local.get $1)
           (i32.const 167772160)
          )
         )
         (block
          (local.set $1
           (i32.load offset=4
            (local.get $0)
           )
          )
          (call_indirect (type $FUNCSIG$viiiii)
           (i32.load offset=16
            (local.get $0)
           )
           (i32.load offset=24
            (local.get $0)
           )
           (i32.load offset=32
            (local.get $0)
           )
           (i32.load offset=40
            (local.get $0)
           )
           (i32.load offset=48
            (local.get $0)
           )
           (i32.add
            (i32.and
             (local.get $1)
             (i32.const 7)
            )
            (i32.const 322)
           )
          )
          (br $label$break$L4)
         )
        )
        (call $___assert_fail
         (i32.const 20096)
         (i32.const 19826)
         (i32.const 349)
         (i32.const 20087)
        )
       )
      )
      (if
       (i32.lt_s
        (local.get $1)
        (i32.const 201326592)
       )
       (if
        (i32.eqz
         (i32.sub
          (local.get $1)
          (i32.const 167772840)
         )
        )
        (block
         (local.set $1
          (i32.load offset=4
           (local.get $0)
          )
         )
         (call_indirect (type $FUNCSIG$viffff)
          (i32.load offset=16
           (local.get $0)
          )
          (f32.load offset=24
           (local.get $0)
          )
          (f32.load offset=32
           (local.get $0)
          )
          (f32.load offset=40
           (local.get $0)
          )
          (f32.load offset=48
           (local.get $0)
          )
          (i32.add
           (i32.and
            (local.get $1)
            (i32.const 3)
           )
           (i32.const 155)
          )
         )
         (br $label$break$L4)
        )
       )
       (if
        (i32.eqz
         (i32.sub
          (local.get $1)
          (i32.const 201326592)
         )
        )
        (block
         (local.set $1
          (i32.load offset=4
           (local.get $0)
          )
         )
         (call_indirect (type $FUNCSIG$viiiiii)
          (i32.load offset=16
           (local.get $0)
          )
          (i32.load offset=24
           (local.get $0)
          )
          (i32.load offset=32
           (local.get $0)
          )
          (i32.load offset=40
           (local.get $0)
          )
          (i32.load offset=48
           (local.get $0)
          )
          (i32.load offset=56
           (local.get $0)
          )
          (i32.add
           (i32.and
            (local.get $1)
            (i32.const 1)
           )
           (i32.const 330)
          )
         )
         (br $label$break$L4)
        )
       )
      )
      (call $___assert_fail
       (i32.const 20096)
       (i32.const 19826)
       (i32.const 349)
       (i32.const 20087)
      )
     )
    )
    (block
     (if
      (i32.lt_s
       (local.get $1)
       (i32.const 622854144)
      )
      (block
       (if
        (i32.lt_s
         (local.get $1)
         (i32.const 369098752)
        )
        (block
         (if
          (i32.lt_s
           (local.get $1)
           (i32.const 301989888)
          )
          (if
           (i32.lt_s
            (local.get $1)
            (i32.const 268435456)
           )
           (if
            (i32.eqz
             (i32.sub
              (local.get $1)
              (i32.const 234881024)
             )
            )
            (block
             (local.set $1
              (i32.load offset=4
               (local.get $0)
              )
             )
             (call_indirect (type $FUNCSIG$viiiiiii)
              (i32.load offset=16
               (local.get $0)
              )
              (i32.load offset=24
               (local.get $0)
              )
              (i32.load offset=32
               (local.get $0)
              )
              (i32.load offset=40
               (local.get $0)
              )
              (i32.load offset=48
               (local.get $0)
              )
              (i32.load offset=56
               (local.get $0)
              )
              (i32.load
               (i32.sub
                (local.get $0)
                (i32.const -64)
               )
              )
              (i32.add
               (i32.and
                (local.get $1)
                (i32.const 3)
               )
               (i32.const 332)
              )
             )
             (br $label$break$L4)
            )
           )
           (if
            (i32.eqz
             (i32.sub
              (local.get $1)
              (i32.const 268435456)
             )
            )
            (block
             (local.set $1
              (i32.load offset=4
               (local.get $0)
              )
             )
             (call_indirect (type $FUNCSIG$viiiiiiii)
              (i32.load offset=16
               (local.get $0)
              )
              (i32.load offset=24
               (local.get $0)
              )
              (i32.load offset=32
               (local.get $0)
              )
              (i32.load offset=40
               (local.get $0)
              )
              (i32.load offset=48
               (local.get $0)
              )
              (i32.load offset=56
               (local.get $0)
              )
              (i32.load
               (i32.sub
                (local.get $0)
                (i32.const -64)
               )
              )
              (i32.load offset=72
               (local.get $0)
              )
              (i32.add
               (i32.and
                (local.get $1)
                (i32.const 3)
               )
               (i32.const 336)
              )
             )
             (br $label$break$L4)
            )
           )
          )
          (if
           (i32.lt_s
            (local.get $1)
            (i32.const 335544320)
           )
           (if
            (i32.eqz
             (i32.sub
              (local.get $1)
              (i32.const 301989888)
             )
            )
            (block
             (local.set $1
              (i32.load offset=4
               (local.get $0)
              )
             )
             (call_indirect (type $FUNCSIG$viiiiiiiii)
              (i32.load offset=16
               (local.get $0)
              )
              (i32.load offset=24
               (local.get $0)
              )
              (i32.load offset=32
               (local.get $0)
              )
              (i32.load offset=40
               (local.get $0)
              )
              (i32.load offset=48
               (local.get $0)
              )
              (i32.load offset=56
               (local.get $0)
              )
              (i32.load
               (i32.sub
                (local.get $0)
                (i32.const -64)
               )
              )
              (i32.load offset=72
               (local.get $0)
              )
              (i32.load offset=80
               (local.get $0)
              )
              (i32.add
               (i32.and
                (local.get $1)
                (i32.const 3)
               )
               (i32.const 340)
              )
             )
             (br $label$break$L4)
            )
           )
           (if
            (i32.eqz
             (i32.sub
              (local.get $1)
              (i32.const 335544320)
             )
            )
            (block
             (drop
              (i32.load offset=4
               (local.get $0)
              )
             )
             (call_indirect (type $FUNCSIG$viiiiiiiiii)
              (i32.load offset=16
               (local.get $0)
              )
              (i32.load offset=24
               (local.get $0)
              )
              (i32.load offset=32
               (local.get $0)
              )
              (i32.load offset=40
               (local.get $0)
              )
              (i32.load offset=48
               (local.get $0)
              )
              (i32.load offset=56
               (local.get $0)
              )
              (i32.load
               (i32.sub
                (local.get $0)
                (i32.const -64)
               )
              )
              (i32.load offset=72
               (local.get $0)
              )
              (i32.load offset=80
               (local.get $0)
              )
              (i32.load offset=88
               (local.get $0)
              )
              (i32.const 344)
             )
             (br $label$break$L4)
            )
           )
          )
         )
         (call $___assert_fail
          (i32.const 20096)
          (i32.const 19826)
          (i32.const 349)
          (i32.const 20087)
         )
        )
       )
       (if
        (i32.lt_s
         (local.get $1)
         (i32.const 570425344)
        )
        (block
         (if
          (i32.lt_s
           (local.get $1)
           (i32.const 536870912)
          )
          (if
           (i32.eqz
            (i32.sub
             (local.get $1)
             (i32.const 369098752)
            )
           )
           (block
            (drop
             (i32.load offset=4
              (local.get $0)
             )
            )
            (call_indirect (type $FUNCSIG$viiiiiiiiiii)
             (i32.load offset=16
              (local.get $0)
             )
             (i32.load offset=24
              (local.get $0)
             )
             (i32.load offset=32
              (local.get $0)
             )
             (i32.load offset=40
              (local.get $0)
             )
             (i32.load offset=48
              (local.get $0)
             )
             (i32.load offset=56
              (local.get $0)
             )
             (i32.load
              (i32.sub
               (local.get $0)
               (i32.const -64)
              )
             )
             (i32.load offset=72
              (local.get $0)
             )
             (i32.load offset=80
              (local.get $0)
             )
             (i32.load offset=88
              (local.get $0)
             )
             (i32.load offset=96
              (local.get $0)
             )
             (i32.const 345)
            )
            (br $label$break$L4)
           )
          )
          (if
           (i32.eqz
            (i32.sub
             (local.get $1)
             (i32.const 536870912)
            )
           )
           (block
            (local.set $1
             (i32.load offset=4
              (local.get $0)
             )
            )
            (i32.store offset=176
             (local.get $0)
             (call_indirect (type $FUNCSIG$i)
              (i32.add
               (i32.and
                (local.get $1)
                (i32.const 3)
               )
               (i32.const 16)
              )
             )
            )
            (br $label$break$L4)
           )
          )
         )
         (call $___assert_fail
          (i32.const 20096)
          (i32.const 19826)
          (i32.const 349)
          (i32.const 20087)
         )
        )
       )
       (if
        (i32.lt_s
         (local.get $1)
         (i32.const 603979776)
        )
        (block
         (if
          (i32.eqz
           (i32.sub
            (local.get $1)
            (i32.const 570425344)
           )
          )
          (block
           (local.set $1
            (i32.load offset=4
             (local.get $0)
            )
           )
           (i32.store offset=176
            (local.get $0)
            (call_indirect (type $FUNCSIG$ii)
             (i32.load offset=16
              (local.get $0)
             )
             (i32.add
              (i32.and
               (local.get $1)
               (i32.const 31)
              )
              (i32.const 20)
             )
            )
           )
           (br $label$break$L4)
          )
         )
         (call $___assert_fail
          (i32.const 20096)
          (i32.const 19826)
          (i32.const 349)
          (i32.const 20087)
         )
        )
       )
       (if
        (i32.lt_s
         (local.get $1)
         (i32.const 621805568)
        )
        (if
         (i32.eqz
          (i32.sub
           (local.get $1)
           (i32.const 603979776)
          )
         )
         (block
          (local.set $1
           (i32.load offset=4
            (local.get $0)
           )
          )
          (i32.store offset=176
           (local.get $0)
           (call_indirect (type $FUNCSIG$iii)
            (i32.load offset=16
             (local.get $0)
            )
            (i32.load offset=24
             (local.get $0)
            )
            (i32.add
             (i32.and
              (local.get $1)
              (i32.const 3)
             )
             (i32.const 54)
            )
           )
          )
          (br $label$break$L4)
         )
        )
        (if
         (i32.eqz
          (i32.sub
           (local.get $1)
           (i32.const 621805568)
          )
         )
         (block
          (i32.store offset=176
           (local.get $0)
           (call $_emscripten_syscall
            (i32.load offset=16
             (local.get $0)
            )
            (i32.load offset=24
             (local.get $0)
            )
           )
          )
          (br $label$break$L4)
         )
        )
       )
       (call $___assert_fail
        (i32.const 20096)
        (i32.const 19826)
        (i32.const 349)
        (i32.const 20087)
       )
      )
     )
     (if
      (i32.lt_s
       (local.get $1)
       (i32.const 704643072)
      )
      (block
       (if
        (i32.lt_s
         (local.get $1)
         (i32.const 657457152)
        )
        (block
         (if
          (i32.lt_s
           (local.get $1)
           (i32.const 637534208)
          )
          (if
           (i32.eqz
            (i32.sub
             (local.get $1)
             (i32.const 622854144)
            )
           )
           (block
            (i32.store offset=176
             (local.get $0)
             (call $_emscripten_webgl_create_context
              (i32.load offset=16
               (local.get $0)
              )
              (i32.load offset=24
               (local.get $0)
              )
             )
            )
            (br $label$break$L4)
           )
          )
          (if
           (i32.eqz
            (i32.sub
             (local.get $1)
             (i32.const 637534208)
            )
           )
           (block
            (local.set $1
             (i32.load offset=4
              (local.get $0)
             )
            )
            (i32.store offset=176
             (local.get $0)
             (call_indirect (type $FUNCSIG$iiii)
              (i32.load offset=16
               (local.get $0)
              )
              (i32.load offset=24
               (local.get $0)
              )
              (i32.load offset=32
               (local.get $0)
              )
              (i32.add
               (i32.and
                (local.get $1)
                (i32.const 15)
               )
               (i32.const 58)
              )
             )
            )
            (br $label$break$L4)
           )
          )
         )
         (call $___assert_fail
          (i32.const 20096)
          (i32.const 19826)
          (i32.const 349)
          (i32.const 20087)
         )
        )
       )
       (if
        (i32.lt_s
         (local.get $1)
         (i32.const 671088640)
        )
        (block
         (if
          (i32.eqz
           (i32.sub
            (local.get $1)
            (i32.const 657457152)
           )
          )
          (block
           (i32.store offset=176
            (local.get $0)
            (call $_emscripten_set_canvas_element_size
             (i32.load offset=16
              (local.get $0)
             )
             (i32.load offset=24
              (local.get $0)
             )
             (i32.load offset=32
              (local.get $0)
             )
            )
           )
           (br $label$break$L4)
          )
         )
         (call $___assert_fail
          (i32.const 20096)
          (i32.const 19826)
          (i32.const 349)
          (i32.const 20087)
         )
        )
       )
       (if
        (i32.lt_s
         (local.get $1)
         (i32.const 687865856)
        )
        (if
         (i32.eqz
          (i32.sub
           (local.get $1)
           (i32.const 671088640)
          )
         )
         (block
          (drop
           (i32.load offset=4
            (local.get $0)
           )
          )
          (i32.store offset=176
           (local.get $0)
           (call_indirect (type $FUNCSIG$iiiii)
            (i32.load offset=16
             (local.get $0)
            )
            (i32.load offset=24
             (local.get $0)
            )
            (i32.load offset=32
             (local.get $0)
            )
            (i32.load offset=40
             (local.get $0)
            )
            (i32.const 74)
           )
          )
          (br $label$break$L4)
         )
        )
        (if
         (i32.eqz
          (i32.sub
           (local.get $1)
           (i32.const 687865856)
          )
         )
         (block
          (i32.store offset=176
           (local.get $0)
           (call $_pthread_create
            (i32.load offset=16
             (local.get $0)
            )
            (i32.load offset=24
             (local.get $0)
            )
            (i32.load offset=32
             (local.get $0)
            )
            (i32.load offset=40
             (local.get $0)
            )
           )
          )
          (br $label$break$L4)
         )
        )
       )
       (call $___assert_fail
        (i32.const 20096)
        (i32.const 19826)
        (i32.const 349)
        (i32.const 20087)
       )
      )
      (block
       (if
        (i32.lt_s
         (local.get $1)
         (i32.const 771751936)
        )
        (block
         (if
          (i32.lt_s
           (local.get $1)
           (i32.const 738197504)
          )
          (if
           (i32.eqz
            (i32.sub
             (local.get $1)
             (i32.const 704643072)
            )
           )
           (block
            (drop
             (i32.load offset=4
              (local.get $0)
             )
            )
            (i32.store offset=176
             (local.get $0)
             (call_indirect (type $FUNCSIG$iiiiii)
              (i32.load offset=16
               (local.get $0)
              )
              (i32.load offset=24
               (local.get $0)
              )
              (i32.load offset=32
               (local.get $0)
              )
              (i32.load offset=40
               (local.get $0)
              )
              (i32.load offset=48
               (local.get $0)
              )
              (i32.const 75)
             )
            )
            (br $label$break$L4)
           )
          )
          (if
           (i32.eqz
            (i32.sub
             (local.get $1)
             (i32.const 738197504)
            )
           )
           (block
            (drop
             (i32.load offset=4
              (local.get $0)
             )
            )
            (i32.store offset=176
             (local.get $0)
             (call_indirect (type $FUNCSIG$iiiiiii)
              (i32.load offset=16
               (local.get $0)
              )
              (i32.load offset=24
               (local.get $0)
              )
              (i32.load offset=32
               (local.get $0)
              )
              (i32.load offset=40
               (local.get $0)
              )
              (i32.load offset=48
               (local.get $0)
              )
              (i32.load offset=56
               (local.get $0)
              )
              (i32.const 76)
             )
            )
            (br $label$break$L4)
           )
          )
         )
         (call $___assert_fail
          (i32.const 20096)
          (i32.const 19826)
          (i32.const 349)
          (i32.const 20087)
         )
        )
       )
       (if
        (i32.lt_s
         (local.get $1)
         (i32.const 805306368)
        )
        (block
         (if
          (i32.eqz
           (i32.sub
            (local.get $1)
            (i32.const 771751936)
           )
          )
          (block
           (drop
            (i32.load offset=4
             (local.get $0)
            )
           )
           (i32.store offset=176
            (local.get $0)
            (call_indirect (type $FUNCSIG$iiiiiiii)
             (i32.load offset=16
              (local.get $0)
             )
             (i32.load offset=24
              (local.get $0)
             )
             (i32.load offset=32
              (local.get $0)
             )
             (i32.load offset=40
              (local.get $0)
             )
             (i32.load offset=48
              (local.get $0)
             )
             (i32.load offset=56
              (local.get $0)
             )
             (i32.load
              (i32.sub
               (local.get $0)
               (i32.const -64)
              )
             )
             (i32.const 77)
            )
           )
           (br $label$break$L4)
          )
         )
         (call $___assert_fail
          (i32.const 20096)
          (i32.const 19826)
          (i32.const 349)
          (i32.const 20087)
         )
        )
       )
       (if
        (i32.lt_s
         (local.get $1)
         (i32.const 838860800)
        )
        (if
         (i32.eqz
          (i32.sub
           (local.get $1)
           (i32.const 805306368)
          )
         )
         (block
          (drop
           (i32.load offset=4
            (local.get $0)
           )
          )
          (i32.store offset=176
           (local.get $0)
           (call_indirect (type $FUNCSIG$iiiiiiiii)
            (i32.load offset=16
             (local.get $0)
            )
            (i32.load offset=24
             (local.get $0)
            )
            (i32.load offset=32
             (local.get $0)
            )
            (i32.load offset=40
             (local.get $0)
            )
            (i32.load offset=48
             (local.get $0)
            )
            (i32.load offset=56
             (local.get $0)
            )
            (i32.load
             (i32.sub
              (local.get $0)
              (i32.const -64)
             )
            )
            (i32.load offset=72
             (local.get $0)
            )
            (i32.const 78)
           )
          )
          (br $label$break$L4)
         )
        )
        (if
         (i32.eqz
          (i32.sub
           (local.get $1)
           (i32.const 838860800)
          )
         )
         (block
          (drop
           (i32.load offset=4
            (local.get $0)
           )
          )
          (i32.store offset=176
           (local.get $0)
           (call_indirect (type $FUNCSIG$iiiiiiiiii)
            (i32.load offset=16
             (local.get $0)
            )
            (i32.load offset=24
             (local.get $0)
            )
            (i32.load offset=32
             (local.get $0)
            )
            (i32.load offset=40
             (local.get $0)
            )
            (i32.load offset=48
             (local.get $0)
            )
            (i32.load offset=56
             (local.get $0)
            )
            (i32.load
             (i32.sub
              (local.get $0)
              (i32.const -64)
             )
            )
            (i32.load offset=72
             (local.get $0)
            )
            (i32.load offset=80
             (local.get $0)
            )
            (i32.const 79)
           )
          )
          (br $label$break$L4)
         )
        )
       )
       (call $___assert_fail
        (i32.const 20096)
        (i32.const 19826)
        (i32.const 349)
        (i32.const 20087)
       )
      )
     )
    )
   )
  )
  (if
   (i32.load offset=188
    (local.get $0)
   )
   (block
    (call $_free
     (i32.load offset=184
      (local.get $0)
     )
    )
    (call $_free
     (local.get $0)
    )
   )
   (block
    (i32.store
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 8)
      )
     )
     (i32.const 1)
    )
    (drop
     (call $_emscripten_futex_wake
      (local.get $0)
      (i32.const 2147483647)
     )
    )
   )
  )
 )
 (func $___pthread_mutex_unlock (; 654 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $6
   (i32.atomic.load offset=8
    (local.get $0)
   )
  )
  (local.set $5
   (i32.xor
    (i32.and
     (local.tee $2
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 128)
    )
    (i32.const 128)
   )
  )
  (local.set $3
   (if (result i32)
    (local.tee $7
     (i32.eqz
      (i32.and
       (local.get $2)
       (i32.const 15)
      )
     )
    )
    (block (result i32)
     (local.set $4
      (i32.add
       (local.get $0)
       (i32.const 4)
      )
     )
     (i32.const 0)
    )
    (block (result i32)
     (local.set $1
      (i32.and
       (i32.atomic.load
        (local.tee $4
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
        )
       )
       (i32.const 2147483647)
      )
     )
     (if
      (i32.ne
       (local.get $1)
       (i32.load offset=52
        (local.tee $3
         (global.get $__pthread_ptr)
        )
       )
      )
      (return)
     )
     (if
      (i32.eq
       (i32.and
        (local.get $2)
        (i32.const 3)
       )
       (i32.const 1)
      )
      (if
       (local.tee $1
        (i32.load offset=20
         (local.get $0)
        )
       )
       (block
        (i32.store offset=20
         (local.get $0)
         (i32.add
          (local.get $1)
          (i32.const -1)
         )
        )
        (return)
       )
      )
     )
     (local.set $1
      (i32.add
       (local.get $0)
       (i32.const 16)
      )
     )
     (if
      (i32.eqz
       (local.get $5)
      )
      (block
       (i32.atomic.store offset=176
        (local.get $3)
        (local.get $1)
       )
       (drop
        (i32.atomic.rmw.add
         (i32.const 28244)
         (i32.const 1)
        )
       )
      )
     )
     (i32.atomic.store
      (local.tee $1
       (i32.load offset=12
        (local.get $0)
       )
      )
      (local.tee $0
       (i32.load offset=16
        (local.get $0)
       )
      )
     )
     (if
      (i32.ne
       (i32.add
        (local.get $3)
        (i32.const 168)
       )
       (local.get $0)
      )
      (i32.atomic.store
       (i32.add
        (local.get $0)
        (i32.const -4)
       )
       (local.get $1)
      )
     )
     (local.get $3)
    )
   )
  )
  (local.set $2
   (select
    (i32.const 2147483647)
    (i32.const 0)
    (i32.and
     (local.get $2)
     (i32.const 8)
    )
   )
  )
  (loop $while-in
   (br_if $while-in
    (i32.ne
     (local.tee $0
      (i32.atomic.load
       (local.get $4)
      )
     )
     (i32.atomic.rmw.cmpxchg
      (local.get $4)
      (local.get $0)
      (local.get $2)
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.or
     (local.get $7)
     (i32.ne
      (local.get $5)
      (i32.const 0)
     )
    )
   )
   (block
    (i32.atomic.store offset=176
     (local.get $3)
     (i32.const 0)
    )
    (call $___vm_unlock)
   )
  )
  (if
   (i32.eqz
    (i32.or
     (i32.ne
      (local.get $6)
      (i32.const 0)
     )
     (i32.lt_s
      (local.get $0)
      (i32.const 0)
     )
    )
   )
   (return)
  )
  (drop
   (call $_emscripten_futex_wake
    (local.get $4)
    (i32.const 1)
   )
  )
 )
 (func $___vm_unlock (; 655 ;) (; has Stack IR ;)
  (if
   (i32.ne
    (i32.atomic.rmw.add
     (i32.const 28244)
     (i32.const -1)
    )
    (i32.const 1)
   )
   (return)
  )
  (if
   (i32.eqz
    (i32.atomic.load
     (i32.const 28248)
    )
   )
   (return)
  )
  (drop
   (call $_emscripten_futex_wake
    (i32.const 28244)
    (i32.const 2147483647)
   )
  )
 )
 (func $___pthread_mutex_lock (; 656 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 15)
    )
   )
   (if
    (i32.eqz
     (i32.atomic.rmw.cmpxchg
      (i32.add
       (local.get $0)
       (i32.const 4)
      )
      (i32.const 0)
      (i32.const 16)
     )
    )
    (return
     (i32.const 0)
    )
   )
  )
  (call $___pthread_mutex_timedlock
   (local.get $0)
  )
 )
 (func $___pthread_mutex_timedlock (; 657 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 15)
    )
   )
   (if
    (i32.atomic.rmw.cmpxchg
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
     (i32.const 0)
     (i32.const 16)
    )
    (drop
     (i32.load
      (local.get $0)
     )
    )
    (return
     (i32.const 0)
    )
   )
  )
  (if
   (i32.ne
    (local.tee $1
     (call $___pthread_mutex_trylock
      (local.get $0)
     )
    )
    (i32.const 16)
   )
   (return
    (local.get $1)
   )
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.const 4)
   )
  )
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
  )
  (local.set $2
   (i32.const 99)
  )
  (loop $while-in
   (block $while-out
    (br_if $while-out
     (i32.eqz
      (i32.atomic.load
       (local.get $3)
      )
     )
    )
    (br_if $while-out
     (i32.atomic.load
      (local.get $4)
     )
    )
    (local.set $1
     (i32.add
      (local.get $2)
      (i32.const -1)
     )
    )
    (if
     (local.get $2)
     (block
      (local.set $2
       (local.get $1)
      )
      (br $while-in)
     )
    )
   )
  )
  (if
   (i32.ne
    (local.tee $1
     (call $___pthread_mutex_trylock
      (local.get $0)
     )
    )
    (i32.const 16)
   )
   (return
    (local.get $1)
   )
  )
  (loop $while-in1 (result i32)
   (block $__rjti$0 (result i32)
    (if
     (local.tee $2
      (i32.atomic.load
       (local.get $3)
      )
     )
     (if
      (i32.or
       (i32.eqz
        (i32.and
         (local.get $2)
         (i32.const 1073741824)
        )
       )
       (i32.eqz
        (i32.and
         (local.tee $1
          (i32.load
           (local.get $0)
          )
         )
         (i32.const 4)
        )
       )
      )
      (block
       (if
        (i32.eq
         (i32.and
          (local.get $1)
          (i32.const 3)
         )
         (i32.const 2)
        )
        (drop
         (br_if $__rjti$0
          (i32.const 35)
          (i32.eq
           (i32.load offset=52
            (global.get $__pthread_ptr)
           )
           (i32.and
            (local.get $2)
            (i32.const 2147483647)
           )
          )
         )
        )
       )
       (drop
        (i32.atomic.rmw.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (drop
        (i32.atomic.rmw.cmpxchg
         (local.get $3)
         (local.get $2)
         (local.tee $1
          (i32.or
           (local.get $2)
           (i32.const -2147483648)
          )
         )
        )
       )
       (local.set $1
        (call $___timedwait
         (local.get $3)
         (local.get $1)
        )
       )
       (drop
        (i32.atomic.rmw.sub
         (local.get $4)
         (i32.const 1)
        )
       )
       (drop
        (br_if $__rjti$0
         (local.get $1)
         (i32.ne
          (i32.or
           (local.get $1)
           (i32.const 4)
          )
          (i32.const 4)
         )
        )
       )
      )
     )
    )
    (br_if $while-in1
     (i32.eq
      (local.tee $1
       (call $___pthread_mutex_trylock
        (local.get $0)
       )
      )
      (i32.const 16)
     )
    )
    (local.get $1)
   )
  )
 )
 (func $___timedwait (; 658 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (call $___pthread_setcancelstate
   (i32.const 1)
   (local.get $2)
  )
  (local.set $0
   (call $___timedwait_cp
    (local.get $0)
    (local.get $1)
   )
  )
  (call $___pthread_setcancelstate
   (i32.load
    (local.get $2)
   )
   (i32.const 0)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $___pthread_setcancelstate (; 659 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (if
   (i32.gt_u
    (local.get $0)
    (i32.const 2)
   )
   (return)
  )
  (local.set $2
   (global.get $__pthread_ptr)
  )
  (if
   (local.get $1)
   (i32.store
    (local.get $1)
    (i32.atomic.load offset=72
     (local.get $2)
    )
   )
  )
  (i32.atomic.store offset=72
   (local.get $2)
   (local.get $0)
  )
 )
 (func $___timedwait_cp (; 660 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $2
   (global.get $inf$asm2wasm$import)
  )
  (block $label$break$L16
   (if
    (global.get $__pthread_is_main_browser_thread)
    (block
     (local.set $4
      (f64.add
       (local.get $2)
       (call $_emscripten_get_now)
      )
     )
     (loop $while-in2
      (block $while-out1
       (if
        (call $__pthread_isduecanceled
         (global.get $__pthread_ptr)
        )
        (block
         (local.set $0
          (i32.const 125)
         )
         (br $while-out1)
        )
       )
       (call $_emscripten_main_thread_process_queued_calls)
       (if
        (f64.le
         (local.tee $2
          (f64.sub
           (local.get $4)
           (call $_emscripten_get_now)
          )
         )
         (f64.const 0)
        )
        (block
         (local.set $0
          (i32.const 110)
         )
         (br $while-out1)
        )
       )
       (br_if $while-in2
        (i32.eq
         (local.tee $5
          (i32.sub
           (i32.const 0)
           (call $_emscripten_futex_wait
            (local.get $0)
            (local.get $1)
            (select
             (f64.const 1)
             (local.tee $2
              (select
               (f64.const 100)
               (local.get $2)
               (f64.gt
                (local.get $2)
                (f64.const 100)
               )
              )
             )
             (f64.gt
              (local.get $2)
              (f64.const 1)
             )
            )
           )
          )
         )
         (i32.const 110)
        )
       )
       (local.set $0
        (local.get $5)
       )
       (br $label$break$L16)
      )
     )
    )
    (block
     (if
      (i32.ne
       (i32.atomic.load offset=76
        (global.get $__pthread_ptr)
       )
       (i32.const 1)
      )
      (block
       (local.set $0
        (i32.sub
         (i32.const 0)
         (call $_emscripten_futex_wait
          (local.get $0)
          (local.get $1)
          (local.get $2)
         )
        )
       )
       (br $label$break$L16)
      )
     )
     (local.set $4
      (f64.add
       (local.get $2)
       (call $_emscripten_get_now)
      )
     )
     (loop $while-in
      (block $while-out
       (if
        (call $__pthread_isduecanceled
         (global.get $__pthread_ptr)
        )
        (block
         (local.set $0
          (i32.const 125)
         )
         (br $while-out)
        )
       )
       (if
        (f64.le
         (local.tee $2
          (f64.sub
           (local.get $4)
           (call $_emscripten_get_now)
          )
         )
         (f64.const 0)
        )
        (block
         (local.set $0
          (i32.const 110)
         )
         (br $while-out)
        )
       )
       (br_if $while-in
        (i32.eq
         (local.tee $5
          (i32.sub
           (i32.const 0)
           (call $_emscripten_futex_wait
            (local.get $0)
            (local.get $1)
            (select
             (f64.const 100)
             (local.get $2)
             (f64.gt
              (local.get $2)
              (f64.const 100)
             )
            )
           )
          )
         )
         (i32.const 110)
        )
       )
       (local.set $0
        (local.get $5)
       )
       (br $label$break$L16)
      )
     )
    )
   )
   (global.set $STACKTOP
    (local.get $3)
   )
   (return
    (local.get $0)
   )
  )
  (block $switch
   (block $switch-case4
    (br_table $switch-case4 $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch-case4 $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch-case4 $switch
     (i32.sub
      (local.get $0)
      (i32.const 4)
     )
    )
   )
   (global.set $STACKTOP
    (local.get $3)
   )
   (return
    (local.get $0)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (i32.const 0)
 )
 (func $__pthread_isduecanceled (; 661 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.eq
   (i32.load
    (local.get $0)
   )
   (i32.const 2)
  )
 )
 (func $___pthread_mutex_trylock (; 662 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (i32.and
    (i32.load
     (local.get $0)
    )
    (i32.const 15)
   )
   (call $___pthread_mutex_trylock_owner
    (local.get $0)
   )
   (i32.and
    (i32.atomic.rmw.cmpxchg
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
     (i32.const 0)
     (i32.const 16)
    )
    (i32.const 16)
   )
  )
 )
 (func $___pthread_mutex_trylock_owner (; 663 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (if
   (i32.and
    (i32.eq
     (local.tee $2
      (i32.load offset=52
       (local.tee $1
        (global.get $__pthread_ptr)
       )
      )
     )
     (local.tee $5
      (i32.and
       (local.tee $3
        (i32.atomic.load
         (local.tee $6
          (i32.add
           (local.get $0)
           (i32.const 4)
          )
         )
        )
       )
       (i32.const 2147483647)
      )
     )
    )
    (i32.eq
     (i32.and
      (local.get $4)
      (i32.const 3)
     )
     (i32.const 1)
    )
   )
   (block
    (if
     (i32.gt_u
      (local.tee $1
       (i32.load offset=20
        (local.get $0)
       )
      )
      (i32.const 2147483646)
     )
     (return
      (i32.const 11)
     )
    )
    (i32.store offset=20
     (local.get $0)
     (i32.add
      (local.get $1)
      (i32.const 1)
     )
    )
    (return
     (i32.const 0)
    )
   )
  )
  (if
   (i32.eq
    (local.get $5)
    (i32.const 2147483647)
   )
   (return
    (i32.const 131)
   )
  )
  (if
   (i32.and
    (i32.load
     (local.get $0)
    )
    (i32.const 128)
   )
   (block
    (if
     (i32.eqz
      (i32.load offset=172
       (local.get $1)
      )
     )
     (i32.store offset=172
      (local.get $1)
      (i32.const -12)
     )
    )
    (local.set $2
     (select
      (i32.or
       (local.get $2)
       (i32.const -2147483648)
      )
      (local.get $2)
      (i32.atomic.load offset=8
       (local.get $0)
      )
     )
    )
    (i32.atomic.store offset=176
     (local.get $1)
     (i32.add
      (local.get $0)
      (i32.const 16)
     )
    )
   )
  )
  (if
   (i32.or
    (i32.eqz
     (local.tee $5
      (i32.ne
       (local.get $5)
       (i32.const 0)
      )
     )
    )
    (i32.eqz
     (i32.or
      (i32.eqz
       (i32.and
        (local.get $3)
        (i32.const 1073741824)
       )
      )
      (i32.eqz
       (i32.and
        (local.get $4)
        (i32.const 4)
       )
      )
     )
    )
   )
   (if
    (i32.eq
     (local.get $3)
     (i32.atomic.rmw.cmpxchg
      (local.get $6)
      (local.get $3)
      (local.get $2)
     )
    )
    (block
     (i32.store
      (local.tee $3
       (i32.add
        (local.get $0)
        (i32.const 16)
       )
      )
      (local.tee $4
       (i32.atomic.load
        (local.tee $2
         (i32.add
          (local.get $1)
          (i32.const 168)
         )
        )
       )
      )
     )
     (i32.store offset=12
      (local.get $0)
      (local.get $2)
     )
     (if
      (i32.ne
       (local.get $2)
       (local.get $4)
      )
      (i32.atomic.store
       (i32.add
        (local.get $4)
        (i32.const -4)
       )
       (local.get $3)
      )
     )
     (i32.atomic.store
      (local.get $2)
      (local.get $3)
     )
     (i32.atomic.store offset=176
      (local.get $1)
      (i32.const 0)
     )
     (if
      (i32.eqz
       (local.get $5)
      )
      (return
       (i32.const 0)
      )
     )
     (i32.store offset=20
      (local.get $0)
      (i32.const 0)
     )
     (i32.store
      (local.get $0)
      (i32.or
       (i32.load
        (local.get $0)
       )
       (i32.const 8)
      )
     )
     (return
      (i32.const 130)
     )
    )
   )
  )
  (i32.atomic.store offset=176
   (local.get $1)
   (i32.const 0)
  )
  (i32.const 16)
 )
 (func $_pthread_mutexattr_init (; 664 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.store
   (local.get $0)
   (i32.const 0)
  )
  (i32.const 0)
 )
 (func $_pthread_mutex_init (; 665 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (i64.store align=4
   (local.get $1)
   (i64.const 0)
  )
  (i64.store offset=8 align=4
   (local.get $1)
   (i64.const 0)
  )
  (i64.store offset=16 align=4
   (local.get $1)
   (i64.const 0)
  )
  (i32.store offset=24
   (local.get $1)
   (i32.const 0)
  )
  (i64.store align=4
   (i32.const 28756)
   (i64.load align=4
    (local.get $1)
   )
  )
  (i64.store align=4
   (i32.const 28764)
   (i64.load offset=8 align=4
    (local.get $1)
   )
  )
  (i64.store align=4
   (i32.const 28772)
   (i64.load offset=16 align=4
    (local.get $1)
   )
  )
  (i32.store
   (i32.const 28780)
   (i32.load offset=24
    (local.get $1)
   )
  )
  (if
   (i32.eqz
    (local.get $0)
   )
   (block
    (global.set $STACKTOP
     (local.get $2)
    )
    (return)
   )
  )
  (i32.store
   (i32.const 28756)
   (i32.load
    (local.get $0)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_emscripten_thread_sleep (; 666 ;) (; has Stack IR ;) (param $0 f64)
  (local $1 i32)
  (local $2 f64)
  (local $3 f64)
  (local.set $0
   (f64.add
    (call $_emscripten_get_now)
    (local.get $0)
   )
  )
  (if
   (i32.eqz
    (i32.atomic.load offset=72
     (local.tee $1
      (global.get $__pthread_ptr)
     )
    )
   )
   (if
    (i32.eq
     (i32.load
      (local.get $1)
     )
     (i32.const 2)
    )
    (drop
     (call $_emscripten_asm_const_i
      (i32.const 4)
     )
    )
   )
  )
  (call $_emscripten_current_thread_process_queued_calls)
  (local.set $3
   (select
    (f64.const 1)
    (f64.const 100)
    (global.get $__pthread_is_main_browser_thread)
   )
  )
  (if
   (i32.eqz
    (f64.lt
     (call $_emscripten_get_now)
     (local.get $0)
    )
   )
   (return)
  )
  (loop $while-in
   (if
    (i32.eqz
     (i32.atomic.load offset=72
      (local.tee $1
       (global.get $__pthread_ptr)
      )
     )
    )
    (if
     (i32.eq
      (i32.load
       (local.get $1)
      )
      (i32.const 2)
     )
     (drop
      (call $_emscripten_asm_const_i
       (i32.const 4)
      )
     )
    )
   )
   (call $_emscripten_current_thread_process_queued_calls)
   (if
    (f64.ge
     (local.tee $2
      (select
       (local.get $3)
       (local.tee $2
        (f64.sub
         (local.get $0)
         (call $_emscripten_get_now)
        )
       )
       (f64.gt
        (local.get $2)
        (local.get $3)
       )
      )
     )
     (f64.const 0.1)
    )
    (drop
     (call $_emscripten_futex_wait
      (i32.const 28252)
      (i32.const 0)
      (local.get $2)
     )
    )
   )
   (br_if $while-in
    (f64.lt
     (call $_emscripten_get_now)
     (local.get $0)
    )
   )
  )
 )
 (func $_nanosleep (; 667 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (if
   (local.get $0)
   (if
    (i32.le_u
     (local.tee $1
      (i32.load offset=4
       (local.get $0)
      )
     )
     (i32.const 999999999)
    )
    (if
     (i32.ge_s
      (local.tee $0
       (i32.load
        (local.get $0)
       )
      )
      (i32.const 0)
     )
     (block
      (call $_emscripten_thread_sleep
       (f64.add
        (f64.div
         (f64.convert_i32_s
          (local.get $1)
         )
         (f64.const 1e6)
        )
        (f64.mul
         (f64.convert_i32_s
          (local.get $0)
         )
         (f64.const 1e3)
        )
       )
      )
      (return
       (i32.const 0)
      )
     )
    )
   )
  )
  (i32.store
   (call $___errno_location)
   (i32.const 22)
  )
  (i32.const -1)
 )
 (func $_malloc (; 668 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local.set $19
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $17
   (i32.add
    (local.get $3)
    (i32.const 4)
   )
  )
  (local.set $20
   (local.get $3)
  )
  (if
   (i32.eqz
    (i32.load
     (i32.const 28256)
    )
   )
   (block
    (drop
     (call $___pthread_mutex_lock
      (i32.const 28280)
     )
    )
    (if
     (i32.eqz
      (i32.load
       (i32.const 28256)
      )
     )
     (block
      (i32.store
       (i32.const 28264)
       (i32.const 4096)
      )
      (i32.store
       (i32.const 28260)
       (i32.const 4096)
      )
      (i32.store
       (i32.const 28268)
       (i32.const -1)
      )
      (i32.store
       (i32.const 28272)
       (i32.const -1)
      )
      (i32.store
       (i32.const 28276)
       (i32.const 2)
      )
      (i32.store
       (i32.const 28752)
       (i32.const 2)
      )
      (if
       (i32.eqz
        (call $_pthread_mutexattr_init
         (local.get $17)
        )
       )
       (call $_pthread_mutex_init
        (local.get $17)
       )
      )
      (i32.atomic.store
       (i32.const 28256)
       (i32.xor
        (i32.and
         (local.get $20)
         (i32.const -16)
        )
        (i32.const 1431655768)
       )
      )
     )
    )
    (call $___pthread_mutex_unlock
     (i32.const 28280)
    )
   )
  )
  (if
   (i32.and
    (i32.load
     (i32.const 28752)
    )
    (i32.const 2)
   )
   (if
    (call $___pthread_mutex_lock
     (i32.const 28756)
    )
    (block
     (global.set $STACKTOP
      (local.get $19)
     )
     (return
      (i32.const 0)
     )
    )
   )
  )
  (block $label$break$L243
   (block $__rjti$8
    (if
     (i32.lt_u
      (local.get $0)
      (i32.const 245)
     )
     (block $do-once
      (if
       (i32.and
        (local.tee $1
         (i32.shr_u
          (local.tee $9
           (i32.load
            (i32.const 28308)
           )
          )
          (local.tee $0
           (i32.shr_u
            (local.tee $3
             (select
              (i32.const 16)
              (i32.and
               (i32.add
                (local.get $0)
                (i32.const 11)
               )
               (i32.const -8)
              )
              (i32.lt_u
               (local.get $0)
               (i32.const 11)
              )
             )
            )
            (i32.const 3)
           )
          )
         )
        )
        (i32.const 3)
       )
       (block
        (if
         (i32.eq
          (local.tee $1
           (i32.load
            (local.tee $0
             (i32.add
              (local.tee $3
               (i32.load offset=8
                (local.tee $2
                 (i32.add
                  (i32.shl
                   (local.tee $4
                    (i32.add
                     (i32.xor
                      (i32.and
                       (local.get $1)
                       (i32.const 1)
                      )
                      (i32.const 1)
                     )
                     (local.get $0)
                    )
                   )
                   (i32.const 3)
                  )
                  (i32.const 28348)
                 )
                )
               )
              )
              (i32.const 8)
             )
            )
           )
          )
          (local.get $2)
         )
         (i32.store
          (i32.const 28308)
          (i32.and
           (local.get $9)
           (i32.xor
            (i32.shl
             (i32.const 1)
             (local.get $4)
            )
            (i32.const -1)
           )
          )
         )
         (block
          (if
           (i32.gt_u
            (i32.load
             (i32.const 28324)
            )
            (local.get $1)
           )
           (call $_abort)
          )
          (if
           (i32.eq
            (local.get $3)
            (i32.load offset=12
             (local.get $1)
            )
           )
           (block
            (i32.store offset=12
             (local.get $1)
             (local.get $2)
            )
            (i32.store offset=8
             (local.get $2)
             (local.get $1)
            )
           )
           (call $_abort)
          )
         )
        )
        (i32.store offset=4
         (local.get $3)
         (i32.or
          (local.tee $1
           (i32.shl
            (local.get $4)
            (i32.const 3)
           )
          )
          (i32.const 3)
         )
        )
        (i32.store offset=4
         (local.tee $1
          (i32.add
           (local.get $1)
           (local.get $3)
          )
         )
         (i32.or
          (i32.load offset=4
           (local.get $1)
          )
          (i32.const 1)
         )
        )
        (br $do-once)
       )
      )
      (local.set $0
       (if (result i32)
        (i32.gt_u
         (local.get $3)
         (local.tee $14
          (i32.load
           (i32.const 28316)
          )
         )
        )
        (block (result i32)
         (if
          (local.get $1)
          (block
           (if
            (i32.eq
             (local.tee $2
              (i32.load
               (local.tee $1
                (i32.add
                 (local.tee $0
                  (i32.load offset=8
                   (local.tee $8
                    (i32.add
                     (i32.shl
                      (local.tee $6
                       (i32.add
                        (i32.or
                         (i32.or
                          (i32.or
                           (i32.or
                            (local.tee $1
                             (i32.and
                              (i32.shr_u
                               (local.tee $0
                                (i32.add
                                 (i32.and
                                  (local.tee $0
                                   (i32.and
                                    (i32.or
                                     (local.tee $2
                                      (i32.shl
                                       (i32.const 2)
                                       (local.get $0)
                                      )
                                     )
                                     (i32.sub
                                      (i32.const 0)
                                      (local.get $2)
                                     )
                                    )
                                    (i32.shl
                                     (local.get $1)
                                     (local.get $0)
                                    )
                                   )
                                  )
                                  (i32.sub
                                   (i32.const 0)
                                   (local.get $0)
                                  )
                                 )
                                 (i32.const -1)
                                )
                               )
                               (i32.const 12)
                              )
                              (i32.const 16)
                             )
                            )
                            (local.tee $1
                             (i32.and
                              (i32.shr_u
                               (local.tee $0
                                (i32.shr_u
                                 (local.get $0)
                                 (local.get $1)
                                )
                               )
                               (i32.const 5)
                              )
                              (i32.const 8)
                             )
                            )
                           )
                           (local.tee $1
                            (i32.and
                             (i32.shr_u
                              (local.tee $0
                               (i32.shr_u
                                (local.get $0)
                                (local.get $1)
                               )
                              )
                              (i32.const 2)
                             )
                             (i32.const 4)
                            )
                           )
                          )
                          (local.tee $1
                           (i32.and
                            (i32.shr_u
                             (local.tee $0
                              (i32.shr_u
                               (local.get $0)
                               (local.get $1)
                              )
                             )
                             (i32.const 1)
                            )
                            (i32.const 2)
                           )
                          )
                         )
                         (local.tee $1
                          (i32.and
                           (i32.shr_u
                            (local.tee $0
                             (i32.shr_u
                              (local.get $0)
                              (local.get $1)
                             )
                            )
                            (i32.const 1)
                           )
                           (i32.const 1)
                          )
                         )
                        )
                        (i32.shr_u
                         (local.get $0)
                         (local.get $1)
                        )
                       )
                      )
                      (i32.const 3)
                     )
                     (i32.const 28348)
                    )
                   )
                  )
                 )
                 (i32.const 8)
                )
               )
              )
             )
             (local.get $8)
            )
            (i32.store
             (i32.const 28308)
             (local.tee $4
              (i32.and
               (local.get $9)
               (i32.xor
                (i32.shl
                 (i32.const 1)
                 (local.get $6)
                )
                (i32.const -1)
               )
              )
             )
            )
            (block
             (if
              (i32.gt_u
               (i32.load
                (i32.const 28324)
               )
               (local.get $2)
              )
              (call $_abort)
             )
             (if
              (i32.eq
               (local.get $0)
               (i32.load offset=12
                (local.get $2)
               )
              )
              (block
               (i32.store offset=12
                (local.get $2)
                (local.get $8)
               )
               (i32.store offset=8
                (local.get $8)
                (local.get $2)
               )
               (local.set $4
                (local.get $9)
               )
              )
              (call $_abort)
             )
            )
           )
           (i32.store offset=4
            (local.get $0)
            (i32.or
             (local.get $3)
             (i32.const 3)
            )
           )
           (i32.store offset=4
            (local.tee $7
             (i32.add
              (local.get $0)
              (local.get $3)
             )
            )
            (i32.or
             (local.tee $8
              (i32.sub
               (local.tee $2
                (i32.shl
                 (local.get $6)
                 (i32.const 3)
                )
               )
               (local.get $3)
              )
             )
             (i32.const 1)
            )
           )
           (i32.store
            (i32.add
             (local.get $0)
             (local.get $2)
            )
            (local.get $8)
           )
           (if
            (local.get $14)
            (block
             (local.set $9
              (i32.load
               (i32.const 28328)
              )
             )
             (local.set $0
              (i32.add
               (i32.shl
                (local.tee $2
                 (i32.shr_u
                  (local.get $14)
                  (i32.const 3)
                 )
                )
                (i32.const 3)
               )
               (i32.const 28348)
              )
             )
             (if
              (i32.and
               (local.get $4)
               (local.tee $2
                (i32.shl
                 (i32.const 1)
                 (local.get $2)
                )
               )
              )
              (if
               (i32.gt_u
                (i32.load
                 (i32.const 28324)
                )
                (local.tee $3
                 (i32.load
                  (local.tee $2
                   (i32.add
                    (local.get $0)
                    (i32.const 8)
                   )
                  )
                 )
                )
               )
               (call $_abort)
               (block
                (local.set $12
                 (local.get $2)
                )
                (local.set $5
                 (local.get $3)
                )
               )
              )
              (block
               (i32.store
                (i32.const 28308)
                (i32.or
                 (local.get $2)
                 (local.get $4)
                )
               )
               (local.set $12
                (i32.add
                 (local.get $0)
                 (i32.const 8)
                )
               )
               (local.set $5
                (local.get $0)
               )
              )
             )
             (i32.store
              (local.get $12)
              (local.get $9)
             )
             (i32.store offset=12
              (local.get $5)
              (local.get $9)
             )
             (i32.store offset=8
              (local.get $9)
              (local.get $5)
             )
             (i32.store offset=12
              (local.get $9)
              (local.get $0)
             )
            )
           )
           (i32.store
            (i32.const 28316)
            (local.get $8)
           )
           (i32.store
            (i32.const 28328)
            (local.get $7)
           )
           (local.set $0
            (local.get $1)
           )
           (br $do-once)
          )
         )
         (if (result i32)
          (local.tee $12
           (i32.load
            (i32.const 28312)
           )
          )
          (block (result i32)
           (local.set $6
            (i32.sub
             (i32.and
              (i32.load offset=4
               (local.tee $0
                (i32.load
                 (i32.add
                  (i32.shl
                   (i32.add
                    (i32.or
                     (i32.or
                      (i32.or
                       (i32.or
                        (local.tee $1
                         (i32.and
                          (i32.shr_u
                           (local.tee $0
                            (i32.add
                             (i32.and
                              (local.get $12)
                              (i32.sub
                               (i32.const 0)
                               (local.get $12)
                              )
                             )
                             (i32.const -1)
                            )
                           )
                           (i32.const 12)
                          )
                          (i32.const 16)
                         )
                        )
                        (local.tee $1
                         (i32.and
                          (i32.shr_u
                           (local.tee $0
                            (i32.shr_u
                             (local.get $0)
                             (local.get $1)
                            )
                           )
                           (i32.const 5)
                          )
                          (i32.const 8)
                         )
                        )
                       )
                       (local.tee $1
                        (i32.and
                         (i32.shr_u
                          (local.tee $0
                           (i32.shr_u
                            (local.get $0)
                            (local.get $1)
                           )
                          )
                          (i32.const 2)
                         )
                         (i32.const 4)
                        )
                       )
                      )
                      (local.tee $1
                       (i32.and
                        (i32.shr_u
                         (local.tee $0
                          (i32.shr_u
                           (local.get $0)
                           (local.get $1)
                          )
                         )
                         (i32.const 1)
                        )
                        (i32.const 2)
                       )
                      )
                     )
                     (local.tee $1
                      (i32.and
                       (i32.shr_u
                        (local.tee $0
                         (i32.shr_u
                          (local.get $0)
                          (local.get $1)
                         )
                        )
                        (i32.const 1)
                       )
                       (i32.const 1)
                      )
                     )
                    )
                    (i32.shr_u
                     (local.get $0)
                     (local.get $1)
                    )
                   )
                   (i32.const 2)
                  )
                  (i32.const 28612)
                 )
                )
               )
              )
              (i32.const -8)
             )
             (local.get $3)
            )
           )
           (local.set $8
            (local.get $0)
           )
           (loop $while-in
            (block $while-out
             (if
              (local.tee $1
               (i32.load offset=16
                (local.get $0)
               )
              )
              (local.set $0
               (local.get $1)
              )
              (br_if $while-out
               (i32.eqz
                (local.tee $0
                 (i32.load offset=20
                  (local.get $0)
                 )
                )
               )
              )
             )
             (local.set $1
              (i32.lt_u
               (local.tee $4
                (i32.sub
                 (i32.and
                  (i32.load offset=4
                   (local.get $0)
                  )
                  (i32.const -8)
                 )
                 (local.get $3)
                )
               )
               (local.get $6)
              )
             )
             (local.set $6
              (select
               (local.get $4)
               (local.get $6)
               (local.get $1)
              )
             )
             (local.set $8
              (select
               (local.get $0)
               (local.get $8)
               (local.get $1)
              )
             )
             (br $while-in)
            )
           )
           (if
            (i32.gt_u
             (local.tee $13
              (i32.load
               (i32.const 28324)
              )
             )
             (local.get $8)
            )
            (call $_abort)
           )
           (if
            (i32.le_u
             (local.tee $10
              (i32.add
               (local.get $3)
               (local.get $8)
              )
             )
             (local.get $8)
            )
            (call $_abort)
           )
           (local.set $11
            (i32.load offset=24
             (local.get $8)
            )
           )
           (if
            (i32.eq
             (local.tee $0
              (i32.load offset=12
               (local.get $8)
              )
             )
             (local.get $8)
            )
            (block $do-once4
             (if
              (i32.eqz
               (local.tee $0
                (i32.load
                 (local.tee $1
                  (i32.add
                   (local.get $8)
                   (i32.const 20)
                  )
                 )
                )
               )
              )
              (br_if $do-once4
               (i32.eqz
                (local.tee $0
                 (i32.load
                  (local.tee $1
                   (i32.add
                    (local.get $8)
                    (i32.const 16)
                   )
                  )
                 )
                )
               )
              )
             )
             (loop $while-in7
              (block $while-out6
               (if
                (i32.eqz
                 (local.tee $5
                  (i32.load
                   (local.tee $4
                    (i32.add
                     (local.get $0)
                     (i32.const 20)
                    )
                   )
                  )
                 )
                )
                (br_if $while-out6
                 (i32.eqz
                  (local.tee $5
                   (i32.load
                    (local.tee $4
                     (i32.add
                      (local.get $0)
                      (i32.const 16)
                     )
                    )
                   )
                  )
                 )
                )
               )
               (local.set $1
                (local.get $4)
               )
               (local.set $0
                (local.get $5)
               )
               (br $while-in7)
              )
             )
             (if
              (i32.gt_u
               (local.get $13)
               (local.get $1)
              )
              (call $_abort)
              (block
               (i32.store
                (local.get $1)
                (i32.const 0)
               )
               (local.set $2
                (local.get $0)
               )
              )
             )
            )
            (block
             (if
              (i32.gt_u
               (local.get $13)
               (local.tee $1
                (i32.load offset=8
                 (local.get $8)
                )
               )
              )
              (call $_abort)
             )
             (if
              (i32.ne
               (local.get $8)
               (i32.load offset=12
                (local.get $1)
               )
              )
              (call $_abort)
             )
             (if
              (i32.eq
               (i32.load offset=8
                (local.get $0)
               )
               (local.get $8)
              )
              (block
               (i32.store offset=12
                (local.get $1)
                (local.get $0)
               )
               (i32.store offset=8
                (local.get $0)
                (local.get $1)
               )
               (local.set $2
                (local.get $0)
               )
              )
              (call $_abort)
             )
            )
           )
           (if
            (local.get $11)
            (block $label$break$L90
             (if
              (i32.eq
               (i32.load
                (local.tee $1
                 (i32.add
                  (i32.shl
                   (local.tee $0
                    (i32.load offset=28
                     (local.get $8)
                    )
                   )
                   (i32.const 2)
                  )
                  (i32.const 28612)
                 )
                )
               )
               (local.get $8)
              )
              (block
               (i32.store
                (local.get $1)
                (local.get $2)
               )
               (if
                (i32.eqz
                 (local.get $2)
                )
                (block
                 (i32.store
                  (i32.const 28312)
                  (i32.and
                   (local.get $12)
                   (i32.xor
                    (i32.shl
                     (i32.const 1)
                     (local.get $0)
                    )
                    (i32.const -1)
                   )
                  )
                 )
                 (br $label$break$L90)
                )
               )
              )
              (if
               (i32.gt_u
                (i32.load
                 (i32.const 28324)
                )
                (local.get $11)
               )
               (call $_abort)
               (block
                (i32.store
                 (select
                  (local.tee $0
                   (i32.add
                    (local.get $11)
                    (i32.const 16)
                   )
                  )
                  (i32.add
                   (local.get $11)
                   (i32.const 20)
                  )
                  (i32.eq
                   (i32.load
                    (local.get $0)
                   )
                   (local.get $8)
                  )
                 )
                 (local.get $2)
                )
                (br_if $label$break$L90
                 (i32.eqz
                  (local.get $2)
                 )
                )
               )
              )
             )
             (if
              (i32.gt_u
               (local.tee $1
                (i32.load
                 (i32.const 28324)
                )
               )
               (local.get $2)
              )
              (call $_abort)
             )
             (i32.store offset=24
              (local.get $2)
              (local.get $11)
             )
             (if
              (local.tee $0
               (i32.load offset=16
                (local.get $8)
               )
              )
              (if
               (i32.gt_u
                (local.get $1)
                (local.get $0)
               )
               (call $_abort)
               (block
                (i32.store offset=16
                 (local.get $2)
                 (local.get $0)
                )
                (i32.store offset=24
                 (local.get $0)
                 (local.get $2)
                )
               )
              )
             )
             (if
              (local.tee $0
               (i32.load offset=20
                (local.get $8)
               )
              )
              (if
               (i32.gt_u
                (i32.load
                 (i32.const 28324)
                )
                (local.get $0)
               )
               (call $_abort)
               (block
                (i32.store offset=20
                 (local.get $2)
                 (local.get $0)
                )
                (i32.store offset=24
                 (local.get $0)
                 (local.get $2)
                )
               )
              )
             )
            )
           )
           (if
            (i32.lt_u
             (local.get $6)
             (i32.const 16)
            )
            (block
             (i32.store offset=4
              (local.get $8)
              (i32.or
               (local.tee $0
                (i32.add
                 (local.get $3)
                 (local.get $6)
                )
               )
               (i32.const 3)
              )
             )
             (i32.store offset=4
              (local.tee $0
               (i32.add
                (local.get $0)
                (local.get $8)
               )
              )
              (i32.or
               (i32.load offset=4
                (local.get $0)
               )
               (i32.const 1)
              )
             )
            )
            (block
             (i32.store offset=4
              (local.get $8)
              (i32.or
               (local.get $3)
               (i32.const 3)
              )
             )
             (i32.store offset=4
              (local.get $10)
              (i32.or
               (local.get $6)
               (i32.const 1)
              )
             )
             (i32.store
              (i32.add
               (local.get $6)
               (local.get $10)
              )
              (local.get $6)
             )
             (if
              (local.get $14)
              (block
               (local.set $3
                (i32.load
                 (i32.const 28328)
                )
               )
               (local.set $0
                (i32.add
                 (i32.shl
                  (local.tee $1
                   (i32.shr_u
                    (local.get $14)
                    (i32.const 3)
                   )
                  )
                  (i32.const 3)
                 )
                 (i32.const 28348)
                )
               )
               (if
                (i32.and
                 (local.get $9)
                 (local.tee $1
                  (i32.shl
                   (i32.const 1)
                   (local.get $1)
                  )
                 )
                )
                (if
                 (i32.gt_u
                  (i32.load
                   (i32.const 28324)
                  )
                  (local.tee $2
                   (i32.load
                    (local.tee $1
                     (i32.add
                      (local.get $0)
                      (i32.const 8)
                     )
                    )
                   )
                  )
                 )
                 (call $_abort)
                 (block
                  (local.set $15
                   (local.get $1)
                  )
                  (local.set $7
                   (local.get $2)
                  )
                 )
                )
                (block
                 (i32.store
                  (i32.const 28308)
                  (i32.or
                   (local.get $1)
                   (local.get $9)
                  )
                 )
                 (local.set $15
                  (i32.add
                   (local.get $0)
                   (i32.const 8)
                  )
                 )
                 (local.set $7
                  (local.get $0)
                 )
                )
               )
               (i32.store
                (local.get $15)
                (local.get $3)
               )
               (i32.store offset=12
                (local.get $7)
                (local.get $3)
               )
               (i32.store offset=8
                (local.get $3)
                (local.get $7)
               )
               (i32.store offset=12
                (local.get $3)
                (local.get $0)
               )
              )
             )
             (i32.store
              (i32.const 28316)
              (local.get $6)
             )
             (i32.store
              (i32.const 28328)
              (local.get $10)
             )
            )
           )
           (i32.add
            (local.get $8)
            (i32.const 8)
           )
          )
          (block
           (local.set $0
            (local.get $3)
           )
           (br $__rjti$8)
          )
         )
        )
        (block
         (local.set $0
          (local.get $3)
         )
         (br $__rjti$8)
        )
       )
      )
     )
     (local.set $0
      (if (result i32)
       (i32.gt_u
        (local.get $0)
        (i32.const -65)
       )
       (block
        (local.set $0
         (i32.const -1)
        )
        (br $__rjti$8)
       )
       (block (result i32)
        (local.set $4
         (i32.and
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 11)
           )
          )
          (i32.const -8)
         )
        )
        (if (result i32)
         (local.tee $5
          (i32.load
           (i32.const 28312)
          )
         )
         (block (result i32)
          (local.set $18
           (if (result i32)
            (local.tee $0
             (i32.shr_u
              (local.get $0)
              (i32.const 8)
             )
            )
            (if (result i32)
             (i32.gt_u
              (local.get $4)
              (i32.const 16777215)
             )
             (i32.const 31)
             (block (result i32)
              (local.set $0
               (i32.and
                (i32.shr_u
                 (i32.add
                  (local.tee $2
                   (i32.shl
                    (local.get $0)
                    (local.tee $3
                     (i32.and
                      (i32.shr_u
                       (i32.add
                        (local.get $0)
                        (i32.const 1048320)
                       )
                       (i32.const 16)
                      )
                      (i32.const 8)
                     )
                    )
                   )
                  )
                  (i32.const 520192)
                 )
                 (i32.const 16)
                )
                (i32.const 4)
               )
              )
              (local.set $2
               (i32.and
                (i32.shr_u
                 (i32.add
                  (local.tee $7
                   (i32.shl
                    (local.get $2)
                    (local.get $0)
                   )
                  )
                  (i32.const 245760)
                 )
                 (i32.const 16)
                )
                (i32.const 2)
               )
              )
              (i32.or
               (i32.and
                (i32.shr_u
                 (local.get $4)
                 (i32.add
                  (local.tee $0
                   (i32.add
                    (i32.sub
                     (i32.const 14)
                     (i32.or
                      (i32.or
                       (local.get $0)
                       (local.get $3)
                      )
                      (local.get $2)
                     )
                    )
                    (i32.shr_u
                     (i32.shl
                      (local.get $7)
                      (local.get $2)
                     )
                     (i32.const 15)
                    )
                   )
                  )
                  (i32.const 7)
                 )
                )
                (i32.const 1)
               )
               (i32.shl
                (local.get $0)
                (i32.const 1)
               )
              )
             )
            )
            (i32.const 0)
           )
          )
          (local.set $2
           (i32.sub
            (i32.const 0)
            (local.get $4)
           )
          )
          (block $__rjto$1
           (block $__rjti$1
            (if
             (local.tee $0
              (i32.load
               (i32.add
                (i32.shl
                 (local.get $18)
                 (i32.const 2)
                )
                (i32.const 28612)
               )
              )
             )
             (block
              (local.set $7
               (i32.shl
                (local.get $4)
                (select
                 (i32.const 0)
                 (i32.sub
                  (i32.const 25)
                  (i32.shr_u
                   (local.get $18)
                   (i32.const 1)
                  )
                 )
                 (i32.eq
                  (local.get $18)
                  (i32.const 31)
                 )
                )
               )
              )
              (local.set $3
               (i32.const 0)
              )
              (loop $while-in15
               (if
                (i32.lt_u
                 (local.tee $15
                  (i32.sub
                   (i32.and
                    (i32.load offset=4
                     (local.get $0)
                    )
                    (i32.const -8)
                   )
                   (local.get $4)
                  )
                 )
                 (local.get $2)
                )
                (local.set $2
                 (if (result i32)
                  (local.get $15)
                  (block (result i32)
                   (local.set $3
                    (local.get $0)
                   )
                   (local.get $15)
                  )
                  (block
                   (local.set $3
                    (i32.const 0)
                   )
                   (local.set $2
                    (local.get $0)
                   )
                   (br $__rjti$1)
                  )
                 )
                )
               )
               (local.set $0
                (select
                 (local.get $12)
                 (local.tee $12
                  (i32.load offset=20
                   (local.get $0)
                  )
                 )
                 (i32.or
                  (i32.eqz
                   (local.get $12)
                  )
                  (i32.eq
                   (local.get $12)
                   (local.tee $15
                    (i32.load
                     (i32.add
                      (i32.add
                       (local.get $0)
                       (i32.const 16)
                      )
                      (i32.shl
                       (i32.shr_u
                        (local.get $7)
                        (i32.const 31)
                       )
                       (i32.const 2)
                      )
                     )
                    )
                   )
                  )
                 )
                )
               )
               (local.set $7
                (i32.shl
                 (local.get $7)
                 (i32.const 1)
                )
               )
               (if
                (local.get $15)
                (block
                 (local.set $12
                  (local.get $0)
                 )
                 (local.set $0
                  (local.get $15)
                 )
                 (br $while-in15)
                )
               )
              )
             )
             (block
              (local.set $0
               (i32.const 0)
              )
              (local.set $3
               (i32.const 0)
              )
             )
            )
            (local.set $0
             (if (result i32)
              (i32.or
               (local.get $0)
               (local.get $3)
              )
              (block (result i32)
               (local.set $7
                (local.get $0)
               )
               (local.get $3)
              )
              (block (result i32)
               (if
                (i32.eqz
                 (local.tee $0
                  (i32.and
                   (local.get $5)
                   (i32.or
                    (local.tee $0
                     (i32.shl
                      (i32.const 2)
                      (local.get $18)
                     )
                    )
                    (i32.sub
                     (i32.const 0)
                     (local.get $0)
                    )
                   )
                  )
                 )
                )
                (block
                 (local.set $0
                  (local.get $4)
                 )
                 (br $__rjti$8)
                )
               )
               (local.set $7
                (i32.load
                 (i32.add
                  (i32.shl
                   (i32.add
                    (i32.or
                     (i32.or
                      (i32.or
                       (i32.or
                        (local.tee $3
                         (i32.and
                          (i32.shr_u
                           (local.tee $0
                            (i32.add
                             (i32.and
                              (local.get $0)
                              (i32.sub
                               (i32.const 0)
                               (local.get $0)
                              )
                             )
                             (i32.const -1)
                            )
                           )
                           (i32.const 12)
                          )
                          (i32.const 16)
                         )
                        )
                        (local.tee $3
                         (i32.and
                          (i32.shr_u
                           (local.tee $0
                            (i32.shr_u
                             (local.get $0)
                             (local.get $3)
                            )
                           )
                           (i32.const 5)
                          )
                          (i32.const 8)
                         )
                        )
                       )
                       (local.tee $3
                        (i32.and
                         (i32.shr_u
                          (local.tee $0
                           (i32.shr_u
                            (local.get $0)
                            (local.get $3)
                           )
                          )
                          (i32.const 2)
                         )
                         (i32.const 4)
                        )
                       )
                      )
                      (local.tee $3
                       (i32.and
                        (i32.shr_u
                         (local.tee $0
                          (i32.shr_u
                           (local.get $0)
                           (local.get $3)
                          )
                         )
                         (i32.const 1)
                        )
                        (i32.const 2)
                       )
                      )
                     )
                     (local.tee $3
                      (i32.and
                       (i32.shr_u
                        (local.tee $0
                         (i32.shr_u
                          (local.get $0)
                          (local.get $3)
                         )
                        )
                        (i32.const 1)
                       )
                       (i32.const 1)
                      )
                     )
                    )
                    (i32.shr_u
                     (local.get $0)
                     (local.get $3)
                    )
                   )
                   (i32.const 2)
                  )
                  (i32.const 28612)
                 )
                )
               )
               (i32.const 0)
              )
             )
            )
            (local.set $3
             (if (result i32)
              (local.get $7)
              (block
               (local.set $3
                (local.get $2)
               )
               (local.set $2
                (local.get $7)
               )
               (br $__rjti$1)
              )
              (block (result i32)
               (local.set $7
                (local.get $0)
               )
               (local.get $2)
              )
             )
            )
            (br $__rjto$1)
           )
           (local.set $7
            (local.get $0)
           )
           (loop $while-in17
            (local.set $12
             (i32.load offset=4
              (local.get $2)
             )
            )
            (if
             (i32.eqz
              (local.tee $0
               (i32.load offset=16
                (local.get $2)
               )
              )
             )
             (local.set $0
              (i32.load offset=20
               (local.get $2)
              )
             )
            )
            (local.set $12
             (i32.lt_u
              (local.tee $15
               (i32.sub
                (i32.and
                 (local.get $12)
                 (i32.const -8)
                )
                (local.get $4)
               )
              )
              (local.get $3)
             )
            )
            (local.set $3
             (select
              (local.get $15)
              (local.get $3)
              (local.get $12)
             )
            )
            (local.set $7
             (select
              (local.get $2)
              (local.get $7)
              (local.get $12)
             )
            )
            (if
             (local.get $0)
             (block
              (local.set $2
               (local.get $0)
              )
              (br $while-in17)
             )
            )
           )
          )
          (if (result i32)
           (local.get $7)
           (if (result i32)
            (i32.lt_u
             (local.get $3)
             (i32.sub
              (i32.load
               (i32.const 28316)
              )
              (local.get $4)
             )
            )
            (block (result i32)
             (if
              (i32.gt_u
               (local.tee $16
                (i32.load
                 (i32.const 28324)
                )
               )
               (local.get $7)
              )
              (call $_abort)
             )
             (if
              (i32.le_u
               (local.tee $10
                (i32.add
                 (local.get $4)
                 (local.get $7)
                )
               )
               (local.get $7)
              )
              (call $_abort)
             )
             (local.set $13
              (i32.load offset=24
               (local.get $7)
              )
             )
             (if
              (i32.eq
               (local.tee $0
                (i32.load offset=12
                 (local.get $7)
                )
               )
               (local.get $7)
              )
              (block $do-once18
               (if
                (i32.eqz
                 (local.tee $0
                  (i32.load
                   (local.tee $2
                    (i32.add
                     (local.get $7)
                     (i32.const 20)
                    )
                   )
                  )
                 )
                )
                (br_if $do-once18
                 (i32.eqz
                  (local.tee $0
                   (i32.load
                    (local.tee $2
                     (i32.add
                      (local.get $7)
                      (i32.const 16)
                     )
                    )
                   )
                  )
                 )
                )
               )
               (loop $while-in21
                (block $while-out20
                 (if
                  (i32.eqz
                   (local.tee $6
                    (i32.load
                     (local.tee $8
                      (i32.add
                       (local.get $0)
                       (i32.const 20)
                      )
                     )
                    )
                   )
                  )
                  (br_if $while-out20
                   (i32.eqz
                    (local.tee $6
                     (i32.load
                      (local.tee $8
                       (i32.add
                        (local.get $0)
                        (i32.const 16)
                       )
                      )
                     )
                    )
                   )
                  )
                 )
                 (local.set $2
                  (local.get $8)
                 )
                 (local.set $0
                  (local.get $6)
                 )
                 (br $while-in21)
                )
               )
               (if
                (i32.gt_u
                 (local.get $16)
                 (local.get $2)
                )
                (call $_abort)
                (block
                 (i32.store
                  (local.get $2)
                  (i32.const 0)
                 )
                 (local.set $11
                  (local.get $0)
                 )
                )
               )
              )
              (block
               (if
                (i32.gt_u
                 (local.get $16)
                 (local.tee $2
                  (i32.load offset=8
                   (local.get $7)
                  )
                 )
                )
                (call $_abort)
               )
               (if
                (i32.ne
                 (local.get $7)
                 (i32.load offset=12
                  (local.get $2)
                 )
                )
                (call $_abort)
               )
               (if
                (i32.eq
                 (i32.load offset=8
                  (local.get $0)
                 )
                 (local.get $7)
                )
                (block
                 (i32.store offset=12
                  (local.get $2)
                  (local.get $0)
                 )
                 (i32.store offset=8
                  (local.get $0)
                  (local.get $2)
                 )
                 (local.set $11
                  (local.get $0)
                 )
                )
                (call $_abort)
               )
              )
             )
             (if
              (local.get $13)
              (block $label$break$L187
               (if
                (i32.eq
                 (i32.load
                  (local.tee $2
                   (i32.add
                    (i32.shl
                     (local.tee $0
                      (i32.load offset=28
                       (local.get $7)
                      )
                     )
                     (i32.const 2)
                    )
                    (i32.const 28612)
                   )
                  )
                 )
                 (local.get $7)
                )
                (block
                 (i32.store
                  (local.get $2)
                  (local.get $11)
                 )
                 (if
                  (i32.eqz
                   (local.get $11)
                  )
                  (block
                   (i32.store
                    (i32.const 28312)
                    (local.tee $1
                     (i32.and
                      (local.get $5)
                      (i32.xor
                       (i32.shl
                        (i32.const 1)
                        (local.get $0)
                       )
                       (i32.const -1)
                      )
                     )
                    )
                   )
                   (br $label$break$L187)
                  )
                 )
                )
                (if
                 (i32.gt_u
                  (i32.load
                   (i32.const 28324)
                  )
                  (local.get $13)
                 )
                 (call $_abort)
                 (block
                  (i32.store
                   (select
                    (local.tee $0
                     (i32.add
                      (local.get $13)
                      (i32.const 16)
                     )
                    )
                    (i32.add
                     (local.get $13)
                     (i32.const 20)
                    )
                    (i32.eq
                     (i32.load
                      (local.get $0)
                     )
                     (local.get $7)
                    )
                   )
                   (local.get $11)
                  )
                  (if
                   (i32.eqz
                    (local.get $11)
                   )
                   (block
                    (local.set $1
                     (local.get $5)
                    )
                    (br $label$break$L187)
                   )
                  )
                 )
                )
               )
               (if
                (i32.gt_u
                 (local.tee $2
                  (i32.load
                   (i32.const 28324)
                  )
                 )
                 (local.get $11)
                )
                (call $_abort)
               )
               (i32.store offset=24
                (local.get $11)
                (local.get $13)
               )
               (if
                (local.tee $0
                 (i32.load offset=16
                  (local.get $7)
                 )
                )
                (if
                 (i32.gt_u
                  (local.get $2)
                  (local.get $0)
                 )
                 (call $_abort)
                 (block
                  (i32.store offset=16
                   (local.get $11)
                   (local.get $0)
                  )
                  (i32.store offset=24
                   (local.get $0)
                   (local.get $11)
                  )
                 )
                )
               )
               (if
                (local.tee $0
                 (i32.load offset=20
                  (local.get $7)
                 )
                )
                (if
                 (i32.gt_u
                  (i32.load
                   (i32.const 28324)
                  )
                  (local.get $0)
                 )
                 (call $_abort)
                 (block
                  (i32.store offset=20
                   (local.get $11)
                   (local.get $0)
                  )
                  (i32.store offset=24
                   (local.get $0)
                   (local.get $11)
                  )
                  (local.set $1
                   (local.get $5)
                  )
                 )
                )
                (local.set $1
                 (local.get $5)
                )
               )
              )
              (local.set $1
               (local.get $5)
              )
             )
             (if
              (i32.lt_u
               (local.get $3)
               (i32.const 16)
              )
              (block
               (i32.store offset=4
                (local.get $7)
                (i32.or
                 (local.tee $0
                  (i32.add
                   (local.get $3)
                   (local.get $4)
                  )
                 )
                 (i32.const 3)
                )
               )
               (i32.store offset=4
                (local.tee $0
                 (i32.add
                  (local.get $0)
                  (local.get $7)
                 )
                )
                (i32.or
                 (i32.load offset=4
                  (local.get $0)
                 )
                 (i32.const 1)
                )
               )
              )
              (block $label$break$L211
               (i32.store offset=4
                (local.get $7)
                (i32.or
                 (local.get $4)
                 (i32.const 3)
                )
               )
               (i32.store offset=4
                (local.get $10)
                (i32.or
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (i32.store
                (i32.add
                 (local.get $3)
                 (local.get $10)
                )
                (local.get $3)
               )
               (local.set $2
                (i32.shr_u
                 (local.get $3)
                 (i32.const 3)
                )
               )
               (if
                (i32.lt_u
                 (local.get $3)
                 (i32.const 256)
                )
                (block
                 (local.set $0
                  (i32.add
                   (i32.shl
                    (local.get $2)
                    (i32.const 3)
                   )
                   (i32.const 28348)
                  )
                 )
                 (if
                  (i32.and
                   (local.tee $1
                    (i32.load
                     (i32.const 28308)
                    )
                   )
                   (local.tee $2
                    (i32.shl
                     (i32.const 1)
                     (local.get $2)
                    )
                   )
                  )
                  (block $do-once28
                   (if
                    (i32.le_u
                     (i32.load
                      (i32.const 28324)
                     )
                     (local.tee $2
                      (i32.load
                       (local.tee $1
                        (i32.add
                         (local.get $0)
                         (i32.const 8)
                        )
                       )
                      )
                     )
                    )
                    (block
                     (local.set $21
                      (local.get $1)
                     )
                     (local.set $14
                      (local.get $2)
                     )
                     (br $do-once28)
                    )
                   )
                   (call $_abort)
                  )
                  (block
                   (i32.store
                    (i32.const 28308)
                    (i32.or
                     (local.get $1)
                     (local.get $2)
                    )
                   )
                   (local.set $21
                    (i32.add
                     (local.get $0)
                     (i32.const 8)
                    )
                   )
                   (local.set $14
                    (local.get $0)
                   )
                  )
                 )
                 (i32.store
                  (local.get $21)
                  (local.get $10)
                 )
                 (i32.store offset=12
                  (local.get $14)
                  (local.get $10)
                 )
                 (i32.store offset=8
                  (local.get $10)
                  (local.get $14)
                 )
                 (i32.store offset=12
                  (local.get $10)
                  (local.get $0)
                 )
                 (br $label$break$L211)
                )
               )
               (local.set $0
                (i32.add
                 (i32.shl
                  (local.tee $2
                   (if (result i32)
                    (local.tee $0
                     (i32.shr_u
                      (local.get $3)
                      (i32.const 8)
                     )
                    )
                    (if (result i32)
                     (i32.gt_u
                      (local.get $3)
                      (i32.const 16777215)
                     )
                     (i32.const 31)
                     (block (result i32)
                      (local.set $0
                       (i32.and
                        (i32.shr_u
                         (i32.add
                          (local.tee $2
                           (i32.shl
                            (local.get $0)
                            (local.tee $4
                             (i32.and
                              (i32.shr_u
                               (i32.add
                                (local.get $0)
                                (i32.const 1048320)
                               )
                               (i32.const 16)
                              )
                              (i32.const 8)
                             )
                            )
                           )
                          )
                          (i32.const 520192)
                         )
                         (i32.const 16)
                        )
                        (i32.const 4)
                       )
                      )
                      (local.set $2
                       (i32.and
                        (i32.shr_u
                         (i32.add
                          (local.tee $5
                           (i32.shl
                            (local.get $2)
                            (local.get $0)
                           )
                          )
                          (i32.const 245760)
                         )
                         (i32.const 16)
                        )
                        (i32.const 2)
                       )
                      )
                      (i32.or
                       (i32.and
                        (i32.shr_u
                         (local.get $3)
                         (i32.add
                          (local.tee $0
                           (i32.add
                            (i32.sub
                             (i32.const 14)
                             (i32.or
                              (i32.or
                               (local.get $0)
                               (local.get $4)
                              )
                              (local.get $2)
                             )
                            )
                            (i32.shr_u
                             (i32.shl
                              (local.get $5)
                              (local.get $2)
                             )
                             (i32.const 15)
                            )
                           )
                          )
                          (i32.const 7)
                         )
                        )
                        (i32.const 1)
                       )
                       (i32.shl
                        (local.get $0)
                        (i32.const 1)
                       )
                      )
                     )
                    )
                    (i32.const 0)
                   )
                  )
                  (i32.const 2)
                 )
                 (i32.const 28612)
                )
               )
               (i32.store offset=28
                (local.get $10)
                (local.get $2)
               )
               (i32.store offset=20
                (local.get $10)
                (i32.const 0)
               )
               (i32.store offset=16
                (local.get $10)
                (i32.const 0)
               )
               (if
                (i32.eqz
                 (i32.and
                  (local.get $1)
                  (local.tee $4
                   (i32.shl
                    (i32.const 1)
                    (local.get $2)
                   )
                  )
                 )
                )
                (block
                 (i32.store
                  (i32.const 28312)
                  (i32.or
                   (local.get $1)
                   (local.get $4)
                  )
                 )
                 (i32.store
                  (local.get $0)
                  (local.get $10)
                 )
                 (i32.store offset=24
                  (local.get $10)
                  (local.get $0)
                 )
                 (i32.store offset=12
                  (local.get $10)
                  (local.get $10)
                 )
                 (i32.store offset=8
                  (local.get $10)
                  (local.get $10)
                 )
                 (br $label$break$L211)
                )
               )
               (if
                (i32.eq
                 (i32.and
                  (i32.load offset=4
                   (local.tee $0
                    (i32.load
                     (local.get $0)
                    )
                   )
                  )
                  (i32.const -8)
                 )
                 (local.get $3)
                )
                (local.set $9
                 (local.get $0)
                )
                (block $label$break$L229
                 (local.set $2
                  (i32.shl
                   (local.get $3)
                   (select
                    (i32.const 0)
                    (i32.sub
                     (i32.const 25)
                     (i32.shr_u
                      (local.get $2)
                      (i32.const 1)
                     )
                    )
                    (i32.eq
                     (local.get $2)
                     (i32.const 31)
                    )
                   )
                  )
                 )
                 (loop $while-in32
                  (if
                   (local.tee $1
                    (i32.load
                     (local.tee $4
                      (i32.add
                       (i32.add
                        (local.get $0)
                        (i32.const 16)
                       )
                       (i32.shl
                        (i32.shr_u
                         (local.get $2)
                         (i32.const 31)
                        )
                        (i32.const 2)
                       )
                      )
                     )
                    )
                   )
                   (block
                    (local.set $2
                     (i32.shl
                      (local.get $2)
                      (i32.const 1)
                     )
                    )
                    (if
                     (i32.eq
                      (i32.and
                       (i32.load offset=4
                        (local.get $1)
                       )
                       (i32.const -8)
                      )
                      (local.get $3)
                     )
                     (block
                      (local.set $9
                       (local.get $1)
                      )
                      (br $label$break$L229)
                     )
                     (block
                      (local.set $0
                       (local.get $1)
                      )
                      (br $while-in32)
                     )
                    )
                   )
                  )
                 )
                 (if
                  (i32.gt_u
                   (i32.load
                    (i32.const 28324)
                   )
                   (local.get $4)
                  )
                  (call $_abort)
                  (block
                   (i32.store
                    (local.get $4)
                    (local.get $10)
                   )
                   (i32.store offset=24
                    (local.get $10)
                    (local.get $0)
                   )
                   (i32.store offset=12
                    (local.get $10)
                    (local.get $10)
                   )
                   (i32.store offset=8
                    (local.get $10)
                    (local.get $10)
                   )
                   (br $label$break$L211)
                  )
                 )
                )
               )
               (if
                (i32.and
                 (i32.le_u
                  (local.tee $0
                   (i32.load
                    (i32.const 28324)
                   )
                  )
                  (local.get $9)
                 )
                 (i32.le_u
                  (local.get $0)
                  (local.tee $1
                   (i32.load offset=8
                    (local.tee $0
                     (local.get $9)
                    )
                   )
                  )
                 )
                )
                (block
                 (i32.store offset=12
                  (local.get $1)
                  (local.get $10)
                 )
                 (i32.store offset=8
                  (local.get $0)
                  (local.get $10)
                 )
                 (i32.store offset=8
                  (local.get $10)
                  (local.get $1)
                 )
                 (i32.store offset=12
                  (local.get $10)
                  (local.get $9)
                 )
                 (i32.store offset=24
                  (local.get $10)
                  (i32.const 0)
                 )
                )
                (call $_abort)
               )
              )
             )
             (i32.add
              (local.get $7)
              (i32.const 8)
             )
            )
            (block
             (local.set $0
              (local.get $4)
             )
             (br $__rjti$8)
            )
           )
           (block
            (local.set $0
             (local.get $4)
            )
            (br $__rjti$8)
           )
          )
         )
         (block
          (local.set $0
           (local.get $4)
          )
          (br $__rjti$8)
         )
        )
       )
      )
     )
    )
    (br $label$break$L243)
   )
   (if
    (i32.ge_u
     (local.tee $2
      (i32.load
       (i32.const 28316)
      )
     )
     (local.get $0)
    )
    (block
     (local.set $1
      (i32.load
       (i32.const 28328)
      )
     )
     (if
      (i32.gt_u
       (local.tee $3
        (i32.sub
         (local.get $2)
         (local.get $0)
        )
       )
       (i32.const 15)
      )
      (block
       (i32.store
        (i32.const 28328)
        (local.tee $4
         (i32.add
          (local.get $0)
          (local.get $1)
         )
        )
       )
       (i32.store
        (i32.const 28316)
        (local.get $3)
       )
       (i32.store offset=4
        (local.get $4)
        (i32.or
         (local.get $3)
         (i32.const 1)
        )
       )
       (i32.store
        (i32.add
         (local.get $1)
         (local.get $2)
        )
        (local.get $3)
       )
       (i32.store offset=4
        (local.get $1)
        (i32.or
         (local.get $0)
         (i32.const 3)
        )
       )
      )
      (block
       (i32.store
        (i32.const 28316)
        (i32.const 0)
       )
       (i32.store
        (i32.const 28328)
        (i32.const 0)
       )
       (i32.store offset=4
        (local.get $1)
        (i32.or
         (local.get $2)
         (i32.const 3)
        )
       )
       (i32.store offset=4
        (local.tee $0
         (i32.add
          (local.get $1)
          (local.get $2)
         )
        )
        (i32.or
         (i32.load offset=4
          (local.get $0)
         )
         (i32.const 1)
        )
       )
      )
     )
     (local.set $0
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (br $label$break$L243)
    )
   )
   (if
    (i32.gt_u
     (local.tee $1
      (i32.load
       (i32.const 28320)
      )
     )
     (local.get $0)
    )
    (block
     (i32.store
      (i32.const 28320)
      (local.tee $2
       (i32.sub
        (local.get $1)
        (local.get $0)
       )
      )
     )
     (i32.store
      (i32.const 28332)
      (local.tee $3
       (i32.add
        (local.tee $1
         (i32.load
          (i32.const 28332)
         )
        )
        (local.get $0)
       )
      )
     )
     (i32.store offset=4
      (local.get $3)
      (i32.or
       (local.get $2)
       (i32.const 1)
      )
     )
     (i32.store offset=4
      (local.get $1)
      (i32.or
       (local.get $0)
       (i32.const 3)
      )
     )
     (local.set $0
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (br $label$break$L243)
    )
   )
   (if
    (i32.eqz
     (i32.load
      (i32.const 28256)
     )
    )
    (block
     (drop
      (call $___pthread_mutex_lock
       (i32.const 28280)
      )
     )
     (if
      (i32.eqz
       (i32.load
        (i32.const 28256)
       )
      )
      (block
       (i32.store
        (i32.const 28264)
        (i32.const 4096)
       )
       (i32.store
        (i32.const 28260)
        (i32.const 4096)
       )
       (i32.store
        (i32.const 28268)
        (i32.const -1)
       )
       (i32.store
        (i32.const 28272)
        (i32.const -1)
       )
       (i32.store
        (i32.const 28276)
        (i32.const 2)
       )
       (i32.store
        (i32.const 28752)
        (i32.const 2)
       )
       (if
        (i32.eqz
         (call $_pthread_mutexattr_init
          (local.get $17)
         )
        )
        (call $_pthread_mutex_init
         (local.get $17)
        )
       )
       (i32.atomic.store
        (i32.const 28256)
        (i32.xor
         (i32.and
          (local.get $20)
          (i32.const -16)
         )
         (i32.const 1431655768)
        )
       )
      )
     )
     (call $___pthread_mutex_unlock
      (i32.const 28280)
     )
    )
   )
   (local.set $9
    (i32.add
     (local.get $0)
     (i32.const 48)
    )
   )
   (if
    (i32.gt_u
     (local.tee $4
      (i32.and
       (i32.add
        (local.tee $1
         (i32.load
          (i32.const 28264)
         )
        )
        (local.tee $5
         (i32.add
          (local.get $0)
          (i32.const 47)
         )
        )
       )
       (i32.sub
        (i32.const 0)
        (local.get $1)
       )
      )
     )
     (local.get $0)
    )
    (block
     (if
      (local.tee $1
       (i32.load
        (i32.const 28748)
       )
      )
      (if
       (i32.or
        (i32.le_u
         (local.tee $3
          (i32.add
           (local.tee $2
            (i32.load
             (i32.const 28740)
            )
           )
           (local.get $4)
          )
         )
         (local.get $2)
        )
        (i32.gt_u
         (local.get $3)
         (local.get $1)
        )
       )
       (block
        (local.set $0
         (i32.const 0)
        )
        (br $label$break$L243)
       )
      )
     )
     (if
      (i32.and
       (i32.load
        (i32.const 28752)
       )
       (i32.const 4)
      )
      (block
       (local.set $1
        (i32.const -1)
       )
       (local.set $2
        (i32.const 0)
       )
      )
      (block
       (block $__rjto$4
        (block $__rjti$4
         (block $__rjti$3
          (block $__rjti$2
           (br_if $__rjti$2
            (i32.eqz
             (local.tee $1
              (i32.load
               (i32.const 28332)
              )
             )
            )
           )
           (local.set $3
            (i32.const 28784)
           )
           (loop $while-in36
            (block $while-out35
             (if
              (i32.le_u
               (local.tee $2
                (i32.load
                 (local.get $3)
                )
               )
               (local.get $1)
              )
              (br_if $while-out35
               (i32.gt_u
                (i32.add
                 (local.get $2)
                 (i32.load offset=4
                  (local.get $3)
                 )
                )
                (local.get $1)
               )
              )
             )
             (br_if $while-in36
              (local.tee $3
               (i32.load offset=8
                (local.get $3)
               )
              )
             )
             (br $__rjti$2)
            )
           )
           (drop
            (call $___pthread_mutex_lock
             (i32.const 28280)
            )
           )
           (if
            (i32.lt_u
             (local.tee $2
              (i32.and
               (i32.add
                (local.tee $1
                 (i32.load
                  (i32.const 28264)
                 )
                )
                (i32.sub
                 (local.get $5)
                 (i32.load
                  (i32.const 28320)
                 )
                )
               )
               (i32.sub
                (i32.const 0)
                (local.get $1)
               )
              )
             )
             (i32.const 2147483647)
            )
            (block
             (local.set $1
              (call $_sbrk
               (local.get $2)
              )
             )
             (br_if $__rjti$3
              (i32.ne
               (local.get $1)
               (i32.add
                (i32.load
                 (local.get $3)
                )
                (i32.load offset=4
                 (local.get $3)
                )
               )
              )
             )
             (br_if $__rjti$4
              (i32.eq
               (local.get $1)
               (i32.const -1)
              )
             )
            )
            (block
             (local.set $2
              (i32.const 0)
             )
             (br $__rjti$4)
            )
           )
           (br $__rjto$4)
          )
          (drop
           (call $___pthread_mutex_lock
            (i32.const 28280)
           )
          )
          (if
           (i32.eq
            (local.tee $1
             (call $_sbrk
              (i32.const 0)
             )
            )
            (i32.const -1)
           )
           (block
            (local.set $2
             (i32.const 0)
            )
            (br $__rjti$4)
           )
           (block
            (local.set $3
             (i32.add
              (local.tee $7
               (i32.load
                (i32.const 28740)
               )
              )
              (local.tee $2
               (i32.add
                (select
                 (i32.sub
                  (i32.and
                   (i32.add
                    (local.get $1)
                    (local.tee $3
                     (i32.add
                      (local.tee $2
                       (i32.load
                        (i32.const 28260)
                       )
                      )
                      (i32.const -1)
                     )
                    )
                   )
                   (i32.sub
                    (i32.const 0)
                    (local.get $2)
                   )
                  )
                  (local.get $1)
                 )
                 (i32.const 0)
                 (i32.and
                  (local.get $1)
                  (local.get $3)
                 )
                )
                (local.get $4)
               )
              )
             )
            )
            (if
             (i32.and
              (i32.lt_u
               (local.get $2)
               (i32.const 2147483647)
              )
              (i32.gt_u
               (local.get $2)
               (local.get $0)
              )
             )
             (block
              (if
               (local.tee $11
                (i32.load
                 (i32.const 28748)
                )
               )
               (if
                (i32.or
                 (i32.le_u
                  (local.get $3)
                  (local.get $7)
                 )
                 (i32.gt_u
                  (local.get $3)
                  (local.get $11)
                 )
                )
                (block
                 (local.set $2
                  (i32.const 0)
                 )
                 (br $__rjti$4)
                )
               )
              )
              (if
               (i32.ne
                (local.tee $3
                 (call $_sbrk
                  (local.get $2)
                 )
                )
                (local.get $1)
               )
               (block
                (local.set $1
                 (local.get $3)
                )
                (br $__rjti$3)
               )
              )
             )
             (block
              (local.set $2
               (i32.const 0)
              )
              (br $__rjti$4)
             )
            )
           )
          )
          (br $__rjto$4)
         )
         (if
          (i32.eqz
           (i32.and
            (i32.and
             (i32.ne
              (local.get $1)
              (i32.const -1)
             )
             (i32.lt_u
              (local.get $2)
              (i32.const 2147483647)
             )
            )
            (i32.gt_u
             (local.get $9)
             (local.get $2)
            )
           )
          )
          (if
           (i32.eq
            (local.get $1)
            (i32.const -1)
           )
           (block
            (local.set $2
             (i32.const 0)
            )
            (br $__rjti$4)
           )
           (br $__rjto$4)
          )
         )
         (local.set $9
          (i32.sub
           (i32.const 0)
           (local.get $2)
          )
         )
         (if
          (i32.lt_u
           (local.tee $3
            (i32.and
             (i32.add
              (local.tee $3
               (i32.load
                (i32.const 28264)
               )
              )
              (i32.sub
               (local.get $5)
               (local.get $2)
              )
             )
             (i32.sub
              (i32.const 0)
              (local.get $3)
             )
            )
           )
           (i32.const 2147483647)
          )
          (local.set $2
           (if (result i32)
            (i32.eq
             (call $_sbrk
              (local.get $3)
             )
             (i32.const -1)
            )
            (block
             (drop
              (call $_sbrk
               (local.get $9)
              )
             )
             (local.set $2
              (i32.const 0)
             )
             (br $__rjti$4)
            )
            (i32.add
             (local.get $2)
             (local.get $3)
            )
           )
          )
         )
         (br $__rjto$4)
        )
        (i32.store
         (i32.const 28752)
         (i32.or
          (i32.load
           (i32.const 28752)
          )
          (i32.const 4)
         )
        )
        (local.set $1
         (i32.const -1)
        )
       )
       (call $___pthread_mutex_unlock
        (i32.const 28280)
       )
      )
     )
     (block $__rjto$7
      (block $__rjti$7
       (if
        (i32.and
         (i32.eq
          (local.get $1)
          (i32.const -1)
         )
         (i32.lt_u
          (local.get $4)
          (i32.const 2147483647)
         )
        )
        (block
         (drop
          (call $___pthread_mutex_lock
           (i32.const 28280)
          )
         )
         (local.set $4
          (call $_sbrk
           (local.get $4)
          )
         )
         (local.set $5
          (call $_sbrk
           (i32.const 0)
          )
         )
         (call $___pthread_mutex_unlock
          (i32.const 28280)
         )
         (local.set $1
          (i32.gt_u
           (local.tee $3
            (i32.sub
             (local.get $5)
             (local.get $4)
            )
           )
           (i32.add
            (local.get $0)
            (i32.const 40)
           )
          )
         )
         (local.set $3
          (select
           (local.get $3)
           (local.get $2)
           (local.get $1)
          )
         )
         (local.set $1
          (select
           (local.get $4)
           (i32.const -1)
           (local.get $1)
          )
         )
         (br_if $__rjti$7
          (i32.and
           (i32.and
            (i32.ne
             (local.get $4)
             (i32.const -1)
            )
            (i32.ne
             (local.get $5)
             (i32.const -1)
            )
           )
           (i32.lt_u
            (local.get $4)
            (local.get $5)
           )
          )
         )
        )
        (block
         (local.set $3
          (local.get $2)
         )
         (br $__rjti$7)
        )
       )
       (br $__rjto$7)
      )
      (if
       (i32.ne
        (local.get $1)
        (i32.const -1)
       )
       (block
        (i32.store
         (i32.const 28740)
         (local.tee $2
          (i32.add
           (i32.load
            (i32.const 28740)
           )
           (local.get $3)
          )
         )
        )
        (if
         (i32.gt_u
          (local.get $2)
          (i32.load
           (i32.const 28744)
          )
         )
         (i32.store
          (i32.const 28744)
          (local.get $2)
         )
        )
        (if
         (local.tee $5
          (i32.load
           (i32.const 28332)
          )
         )
         (block $label$break$L309
          (local.set $2
           (i32.const 28784)
          )
          (block $__rjto$5
           (block $__rjti$5
            (loop $while-in43
             (br_if $__rjti$5
              (i32.eq
               (i32.add
                (local.tee $9
                 (i32.load
                  (local.get $2)
                 )
                )
                (local.tee $7
                 (i32.load offset=4
                  (local.get $2)
                 )
                )
               )
               (local.get $1)
              )
             )
             (br_if $while-in43
              (local.tee $2
               (i32.load offset=8
                (local.get $2)
               )
              )
             )
            )
            (br $__rjto$5)
           )
           (local.set $4
            (local.get $2)
           )
           (if
            (i32.eqz
             (i32.and
              (i32.load offset=12
               (local.get $2)
              )
              (i32.const 8)
             )
            )
            (if
             (i32.and
              (i32.le_u
               (local.get $9)
               (local.get $5)
              )
              (i32.gt_u
               (local.get $1)
               (local.get $5)
              )
             )
             (block
              (i32.store offset=4
               (local.get $4)
               (i32.add
                (local.get $3)
                (local.get $7)
               )
              )
              (local.set $1
               (i32.add
                (local.get $5)
                (local.tee $2
                 (select
                  (i32.and
                   (i32.sub
                    (i32.const 0)
                    (local.tee $1
                     (i32.add
                      (local.get $5)
                      (i32.const 8)
                     )
                    )
                   )
                   (i32.const 7)
                  )
                  (i32.const 0)
                  (i32.and
                   (local.get $1)
                   (i32.const 7)
                  )
                 )
                )
               )
              )
              (local.set $2
               (i32.sub
                (local.tee $3
                 (i32.add
                  (i32.load
                   (i32.const 28320)
                  )
                  (local.get $3)
                 )
                )
                (local.get $2)
               )
              )
              (i32.store
               (i32.const 28332)
               (local.get $1)
              )
              (i32.store
               (i32.const 28320)
               (local.get $2)
              )
              (i32.store offset=4
               (local.get $1)
               (i32.or
                (local.get $2)
                (i32.const 1)
               )
              )
              (i32.store offset=4
               (i32.add
                (local.get $3)
                (local.get $5)
               )
               (i32.const 40)
              )
              (i32.store
               (i32.const 28336)
               (i32.load
                (i32.const 28272)
               )
              )
              (br $label$break$L309)
             )
            )
           )
          )
          (if
           (i32.lt_u
            (local.get $1)
            (local.tee $2
             (i32.load
              (i32.const 28324)
             )
            )
           )
           (block
            (i32.store
             (i32.const 28324)
             (local.get $1)
            )
            (local.set $2
             (local.get $1)
            )
           )
          )
          (local.set $9
           (i32.add
            (local.get $1)
            (local.get $3)
           )
          )
          (local.set $4
           (i32.const 28784)
          )
          (block $__rjto$6
           (block $__rjti$6
            (loop $while-in45
             (br_if $__rjti$6
              (i32.eq
               (i32.load
                (local.get $4)
               )
               (local.get $9)
              )
             )
             (br_if $while-in45
              (local.tee $4
               (i32.load offset=8
                (local.get $4)
               )
              )
             )
            )
            (br $__rjto$6)
           )
           (if
            (i32.eqz
             (i32.and
              (i32.load offset=12
               (local.get $4)
              )
              (i32.const 8)
             )
            )
            (block
             (i32.store
              (local.get $4)
              (local.get $1)
             )
             (i32.store offset=4
              (local.get $4)
              (i32.add
               (i32.load offset=4
                (local.get $4)
               )
               (local.get $3)
              )
             )
             (local.set $6
              (i32.add
               (local.tee $11
                (i32.add
                 (select
                  (i32.and
                   (i32.sub
                    (i32.const 0)
                    (local.tee $3
                     (i32.add
                      (local.get $1)
                      (i32.const 8)
                     )
                    )
                   )
                   (i32.const 7)
                  )
                  (i32.const 0)
                  (i32.and
                   (local.get $3)
                   (i32.const 7)
                  )
                 )
                 (local.get $1)
                )
               )
               (local.get $0)
              )
             )
             (local.set $4
              (i32.sub
               (i32.sub
                (local.tee $3
                 (i32.add
                  (local.get $9)
                  (select
                   (i32.and
                    (i32.sub
                     (i32.const 0)
                     (local.tee $1
                      (i32.add
                       (local.get $9)
                       (i32.const 8)
                      )
                     )
                    )
                    (i32.const 7)
                   )
                   (i32.const 0)
                   (i32.and
                    (local.get $1)
                    (i32.const 7)
                   )
                  )
                 )
                )
                (local.get $11)
               )
               (local.get $0)
              )
             )
             (i32.store offset=4
              (local.get $11)
              (i32.or
               (local.get $0)
               (i32.const 3)
              )
             )
             (if
              (i32.eq
               (local.get $3)
               (local.get $5)
              )
              (block
               (i32.store
                (i32.const 28320)
                (local.tee $0
                 (i32.add
                  (i32.load
                   (i32.const 28320)
                  )
                  (local.get $4)
                 )
                )
               )
               (i32.store
                (i32.const 28332)
                (local.get $6)
               )
               (i32.store offset=4
                (local.get $6)
                (i32.or
                 (local.get $0)
                 (i32.const 1)
                )
               )
              )
              (block $label$break$L332
               (if
                (i32.eq
                 (i32.load
                  (i32.const 28328)
                 )
                 (local.get $3)
                )
                (block
                 (i32.store
                  (i32.const 28316)
                  (local.tee $0
                   (i32.add
                    (i32.load
                     (i32.const 28316)
                    )
                    (local.get $4)
                   )
                  )
                 )
                 (i32.store
                  (i32.const 28328)
                  (local.get $6)
                 )
                 (i32.store offset=4
                  (local.get $6)
                  (i32.or
                   (local.get $0)
                   (i32.const 1)
                  )
                 )
                 (i32.store
                  (i32.add
                   (local.get $0)
                   (local.get $6)
                  )
                  (local.get $0)
                 )
                 (br $label$break$L332)
                )
               )
               (local.set $3
                (if (result i32)
                 (i32.eq
                  (i32.and
                   (local.tee $0
                    (i32.load offset=4
                     (local.get $3)
                    )
                   )
                   (i32.const 3)
                  )
                  (i32.const 1)
                 )
                 (block (result i32)
                  (local.set $14
                   (i32.and
                    (local.get $0)
                    (i32.const -8)
                   )
                  )
                  (local.set $9
                   (i32.shr_u
                    (local.get $0)
                    (i32.const 3)
                   )
                  )
                  (block $label$break$L340
                   (if
                    (i32.lt_u
                     (local.get $0)
                     (i32.const 256)
                    )
                    (block
                     (local.set $1
                      (i32.load offset=12
                       (local.get $3)
                      )
                     )
                     (if
                      (i32.ne
                       (local.tee $5
                        (i32.load offset=8
                         (local.get $3)
                        )
                       )
                       (local.tee $0
                        (i32.add
                         (i32.shl
                          (local.get $9)
                          (i32.const 3)
                         )
                         (i32.const 28348)
                        )
                       )
                      )
                      (block $do-once48
                       (if
                        (i32.gt_u
                         (local.get $2)
                         (local.get $5)
                        )
                        (call $_abort)
                       )
                       (br_if $do-once48
                        (i32.eq
                         (i32.load offset=12
                          (local.get $5)
                         )
                         (local.get $3)
                        )
                       )
                       (call $_abort)
                      )
                     )
                     (if
                      (i32.eq
                       (local.get $1)
                       (local.get $5)
                      )
                      (block
                       (i32.store
                        (i32.const 28308)
                        (i32.and
                         (i32.load
                          (i32.const 28308)
                         )
                         (i32.xor
                          (i32.shl
                           (i32.const 1)
                           (local.get $9)
                          )
                          (i32.const -1)
                         )
                        )
                       )
                       (br $label$break$L340)
                      )
                     )
                     (if
                      (i32.eq
                       (local.get $0)
                       (local.get $1)
                      )
                      (local.set $22
                       (i32.add
                        (local.get $1)
                        (i32.const 8)
                       )
                      )
                      (block $do-once50
                       (if
                        (i32.gt_u
                         (local.get $2)
                         (local.get $1)
                        )
                        (call $_abort)
                       )
                       (if
                        (i32.eq
                         (i32.load
                          (local.tee $0
                           (i32.add
                            (local.get $1)
                            (i32.const 8)
                           )
                          )
                         )
                         (local.get $3)
                        )
                        (block
                         (local.set $22
                          (local.get $0)
                         )
                         (br $do-once50)
                        )
                       )
                       (call $_abort)
                      )
                     )
                     (i32.store offset=12
                      (local.get $5)
                      (local.get $1)
                     )
                     (i32.store
                      (local.get $22)
                      (local.get $5)
                     )
                    )
                    (block
                     (local.set $7
                      (i32.load offset=24
                       (local.get $3)
                      )
                     )
                     (if
                      (i32.eq
                       (local.tee $0
                        (i32.load offset=12
                         (local.get $3)
                        )
                       )
                       (local.get $3)
                      )
                      (block $do-once52
                       (if
                        (local.tee $0
                         (i32.load
                          (local.tee $5
                           (i32.add
                            (local.tee $1
                             (i32.add
                              (local.get $3)
                              (i32.const 16)
                             )
                            )
                            (i32.const 4)
                           )
                          )
                         )
                        )
                        (local.set $1
                         (local.get $5)
                        )
                        (br_if $do-once52
                         (i32.eqz
                          (local.tee $0
                           (i32.load
                            (local.get $1)
                           )
                          )
                         )
                        )
                       )
                       (loop $while-in55
                        (block $while-out54
                         (if
                          (i32.eqz
                           (local.tee $9
                            (i32.load
                             (local.tee $5
                              (i32.add
                               (local.get $0)
                               (i32.const 20)
                              )
                             )
                            )
                           )
                          )
                          (br_if $while-out54
                           (i32.eqz
                            (local.tee $9
                             (i32.load
                              (local.tee $5
                               (i32.add
                                (local.get $0)
                                (i32.const 16)
                               )
                              )
                             )
                            )
                           )
                          )
                         )
                         (local.set $1
                          (local.get $5)
                         )
                         (local.set $0
                          (local.get $9)
                         )
                         (br $while-in55)
                        )
                       )
                       (if
                        (i32.gt_u
                         (local.get $2)
                         (local.get $1)
                        )
                        (call $_abort)
                        (block
                         (i32.store
                          (local.get $1)
                          (i32.const 0)
                         )
                         (local.set $10
                          (local.get $0)
                         )
                        )
                       )
                      )
                      (block
                       (if
                        (i32.gt_u
                         (local.get $2)
                         (local.tee $1
                          (i32.load offset=8
                           (local.get $3)
                          )
                         )
                        )
                        (call $_abort)
                       )
                       (if
                        (i32.ne
                         (local.get $3)
                         (i32.load offset=12
                          (local.get $1)
                         )
                        )
                        (call $_abort)
                       )
                       (if
                        (i32.eq
                         (i32.load offset=8
                          (local.get $0)
                         )
                         (local.get $3)
                        )
                        (block
                         (i32.store offset=12
                          (local.get $1)
                          (local.get $0)
                         )
                         (i32.store offset=8
                          (local.get $0)
                          (local.get $1)
                         )
                         (local.set $10
                          (local.get $0)
                         )
                        )
                        (call $_abort)
                       )
                      )
                     )
                     (br_if $label$break$L340
                      (i32.eqz
                       (local.get $7)
                      )
                     )
                     (if
                      (i32.eq
                       (i32.load
                        (local.tee $1
                         (i32.add
                          (i32.shl
                           (local.tee $0
                            (i32.load offset=28
                             (local.get $3)
                            )
                           )
                           (i32.const 2)
                          )
                          (i32.const 28612)
                         )
                        )
                       )
                       (local.get $3)
                      )
                      (block $do-once56
                       (i32.store
                        (local.get $1)
                        (local.get $10)
                       )
                       (br_if $do-once56
                        (local.get $10)
                       )
                       (i32.store
                        (i32.const 28312)
                        (i32.and
                         (i32.load
                          (i32.const 28312)
                         )
                         (i32.xor
                          (i32.shl
                           (i32.const 1)
                           (local.get $0)
                          )
                          (i32.const -1)
                         )
                        )
                       )
                       (br $label$break$L340)
                      )
                      (if
                       (i32.gt_u
                        (i32.load
                         (i32.const 28324)
                        )
                        (local.get $7)
                       )
                       (call $_abort)
                       (block
                        (i32.store
                         (select
                          (local.tee $0
                           (i32.add
                            (local.get $7)
                            (i32.const 16)
                           )
                          )
                          (i32.add
                           (local.get $7)
                           (i32.const 20)
                          )
                          (i32.eq
                           (i32.load
                            (local.get $0)
                           )
                           (local.get $3)
                          )
                         )
                         (local.get $10)
                        )
                        (br_if $label$break$L340
                         (i32.eqz
                          (local.get $10)
                         )
                        )
                       )
                      )
                     )
                     (if
                      (i32.gt_u
                       (local.tee $1
                        (i32.load
                         (i32.const 28324)
                        )
                       )
                       (local.get $10)
                      )
                      (call $_abort)
                     )
                     (i32.store offset=24
                      (local.get $10)
                      (local.get $7)
                     )
                     (if
                      (local.tee $0
                       (i32.load offset=16
                        (local.get $3)
                       )
                      )
                      (if
                       (i32.gt_u
                        (local.get $1)
                        (local.get $0)
                       )
                       (call $_abort)
                       (block
                        (i32.store offset=16
                         (local.get $10)
                         (local.get $0)
                        )
                        (i32.store offset=24
                         (local.get $0)
                         (local.get $10)
                        )
                       )
                      )
                     )
                     (br_if $label$break$L340
                      (i32.eqz
                       (local.tee $0
                        (i32.load offset=20
                         (local.get $3)
                        )
                       )
                      )
                     )
                     (if
                      (i32.gt_u
                       (i32.load
                        (i32.const 28324)
                       )
                       (local.get $0)
                      )
                      (call $_abort)
                      (block
                       (i32.store offset=20
                        (local.get $10)
                        (local.get $0)
                       )
                       (i32.store offset=24
                        (local.get $0)
                        (local.get $10)
                       )
                      )
                     )
                    )
                   )
                  )
                  (local.set $0
                   (i32.add
                    (local.get $3)
                    (local.get $14)
                   )
                  )
                  (i32.add
                   (local.get $4)
                   (local.get $14)
                  )
                 )
                 (block (result i32)
                  (local.set $0
                   (local.get $3)
                  )
                  (local.get $4)
                 )
                )
               )
               (i32.store offset=4
                (local.get $0)
                (i32.and
                 (i32.load offset=4
                  (local.get $0)
                 )
                 (i32.const -2)
                )
               )
               (i32.store offset=4
                (local.get $6)
                (i32.or
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (i32.store
                (i32.add
                 (local.get $3)
                 (local.get $6)
                )
                (local.get $3)
               )
               (local.set $1
                (i32.shr_u
                 (local.get $3)
                 (i32.const 3)
                )
               )
               (if
                (i32.lt_u
                 (local.get $3)
                 (i32.const 256)
                )
                (block
                 (local.set $0
                  (i32.add
                   (i32.shl
                    (local.get $1)
                    (i32.const 3)
                   )
                   (i32.const 28348)
                  )
                 )
                 (if
                  (i32.and
                   (local.tee $2
                    (i32.load
                     (i32.const 28308)
                    )
                   )
                   (local.tee $1
                    (i32.shl
                     (i32.const 1)
                     (local.get $1)
                    )
                   )
                  )
                  (block $do-once60
                   (if
                    (i32.le_u
                     (i32.load
                      (i32.const 28324)
                     )
                     (local.tee $2
                      (i32.load
                       (local.tee $1
                        (i32.add
                         (local.get $0)
                         (i32.const 8)
                        )
                       )
                      )
                     )
                    )
                    (block
                     (local.set $23
                      (local.get $1)
                     )
                     (local.set $13
                      (local.get $2)
                     )
                     (br $do-once60)
                    )
                   )
                   (call $_abort)
                  )
                  (block
                   (i32.store
                    (i32.const 28308)
                    (i32.or
                     (local.get $1)
                     (local.get $2)
                    )
                   )
                   (local.set $23
                    (i32.add
                     (local.get $0)
                     (i32.const 8)
                    )
                   )
                   (local.set $13
                    (local.get $0)
                   )
                  )
                 )
                 (i32.store
                  (local.get $23)
                  (local.get $6)
                 )
                 (i32.store offset=12
                  (local.get $13)
                  (local.get $6)
                 )
                 (i32.store offset=8
                  (local.get $6)
                  (local.get $13)
                 )
                 (i32.store offset=12
                  (local.get $6)
                  (local.get $0)
                 )
                 (br $label$break$L332)
                )
               )
               (local.set $0
                (i32.add
                 (i32.shl
                  (local.tee $1
                   (if (result i32)
                    (local.tee $0
                     (i32.shr_u
                      (local.get $3)
                      (i32.const 8)
                     )
                    )
                    (if (result i32)
                     (i32.gt_u
                      (local.get $3)
                      (i32.const 16777215)
                     )
                     (i32.const 31)
                     (block (result i32)
                      (local.set $0
                       (i32.and
                        (i32.shr_u
                         (i32.add
                          (local.tee $1
                           (i32.shl
                            (local.get $0)
                            (local.tee $2
                             (i32.and
                              (i32.shr_u
                               (i32.add
                                (local.get $0)
                                (i32.const 1048320)
                               )
                               (i32.const 16)
                              )
                              (i32.const 8)
                             )
                            )
                           )
                          )
                          (i32.const 520192)
                         )
                         (i32.const 16)
                        )
                        (i32.const 4)
                       )
                      )
                      (local.set $1
                       (i32.and
                        (i32.shr_u
                         (i32.add
                          (local.tee $4
                           (i32.shl
                            (local.get $1)
                            (local.get $0)
                           )
                          )
                          (i32.const 245760)
                         )
                         (i32.const 16)
                        )
                        (i32.const 2)
                       )
                      )
                      (i32.or
                       (i32.and
                        (i32.shr_u
                         (local.get $3)
                         (i32.add
                          (local.tee $0
                           (i32.add
                            (i32.sub
                             (i32.const 14)
                             (i32.or
                              (i32.or
                               (local.get $0)
                               (local.get $2)
                              )
                              (local.get $1)
                             )
                            )
                            (i32.shr_u
                             (i32.shl
                              (local.get $4)
                              (local.get $1)
                             )
                             (i32.const 15)
                            )
                           )
                          )
                          (i32.const 7)
                         )
                        )
                        (i32.const 1)
                       )
                       (i32.shl
                        (local.get $0)
                        (i32.const 1)
                       )
                      )
                     )
                    )
                    (i32.const 0)
                   )
                  )
                  (i32.const 2)
                 )
                 (i32.const 28612)
                )
               )
               (i32.store offset=28
                (local.get $6)
                (local.get $1)
               )
               (i32.store offset=20
                (local.get $6)
                (i32.const 0)
               )
               (i32.store offset=16
                (local.get $6)
                (i32.const 0)
               )
               (if
                (i32.eqz
                 (i32.and
                  (local.tee $2
                   (i32.load
                    (i32.const 28312)
                   )
                  )
                  (local.tee $4
                   (i32.shl
                    (i32.const 1)
                    (local.get $1)
                   )
                  )
                 )
                )
                (block
                 (i32.store
                  (i32.const 28312)
                  (i32.or
                   (local.get $2)
                   (local.get $4)
                  )
                 )
                 (i32.store
                  (local.get $0)
                  (local.get $6)
                 )
                 (i32.store offset=24
                  (local.get $6)
                  (local.get $0)
                 )
                 (i32.store offset=12
                  (local.get $6)
                  (local.get $6)
                 )
                 (i32.store offset=8
                  (local.get $6)
                  (local.get $6)
                 )
                 (br $label$break$L332)
                )
               )
               (if
                (i32.eq
                 (i32.and
                  (i32.load offset=4
                   (local.tee $0
                    (i32.load
                     (local.get $0)
                    )
                   )
                  )
                  (i32.const -8)
                 )
                 (local.get $3)
                )
                (local.set $8
                 (local.get $0)
                )
                (block $label$break$L425
                 (local.set $2
                  (i32.shl
                   (local.get $3)
                   (select
                    (i32.const 0)
                    (i32.sub
                     (i32.const 25)
                     (i32.shr_u
                      (local.get $1)
                      (i32.const 1)
                     )
                    )
                    (i32.eq
                     (local.get $1)
                     (i32.const 31)
                    )
                   )
                  )
                 )
                 (loop $while-in66
                  (if
                   (local.tee $1
                    (i32.load
                     (local.tee $4
                      (i32.add
                       (i32.add
                        (local.get $0)
                        (i32.const 16)
                       )
                       (i32.shl
                        (i32.shr_u
                         (local.get $2)
                         (i32.const 31)
                        )
                        (i32.const 2)
                       )
                      )
                     )
                    )
                   )
                   (block
                    (local.set $2
                     (i32.shl
                      (local.get $2)
                      (i32.const 1)
                     )
                    )
                    (if
                     (i32.eq
                      (i32.and
                       (i32.load offset=4
                        (local.get $1)
                       )
                       (i32.const -8)
                      )
                      (local.get $3)
                     )
                     (block
                      (local.set $8
                       (local.get $1)
                      )
                      (br $label$break$L425)
                     )
                     (block
                      (local.set $0
                       (local.get $1)
                      )
                      (br $while-in66)
                     )
                    )
                   )
                  )
                 )
                 (if
                  (i32.gt_u
                   (i32.load
                    (i32.const 28324)
                   )
                   (local.get $4)
                  )
                  (call $_abort)
                  (block
                   (i32.store
                    (local.get $4)
                    (local.get $6)
                   )
                   (i32.store offset=24
                    (local.get $6)
                    (local.get $0)
                   )
                   (i32.store offset=12
                    (local.get $6)
                    (local.get $6)
                   )
                   (i32.store offset=8
                    (local.get $6)
                    (local.get $6)
                   )
                   (br $label$break$L332)
                  )
                 )
                )
               )
               (if
                (i32.and
                 (i32.le_u
                  (local.tee $0
                   (i32.load
                    (i32.const 28324)
                   )
                  )
                  (local.get $8)
                 )
                 (i32.le_u
                  (local.get $0)
                  (local.tee $1
                   (i32.load offset=8
                    (local.tee $0
                     (local.get $8)
                    )
                   )
                  )
                 )
                )
                (block
                 (i32.store offset=12
                  (local.get $1)
                  (local.get $6)
                 )
                 (i32.store offset=8
                  (local.get $0)
                  (local.get $6)
                 )
                 (i32.store offset=8
                  (local.get $6)
                  (local.get $1)
                 )
                 (i32.store offset=12
                  (local.get $6)
                  (local.get $8)
                 )
                 (i32.store offset=24
                  (local.get $6)
                  (i32.const 0)
                 )
                )
                (call $_abort)
               )
              )
             )
             (local.set $0
              (i32.add
               (local.get $11)
               (i32.const 8)
              )
             )
             (br $label$break$L243)
            )
           )
          )
          (local.set $2
           (i32.const 28784)
          )
          (loop $while-in68
           (block $while-out67
            (if
             (i32.le_u
              (local.tee $4
               (i32.load
                (local.get $2)
               )
              )
              (local.get $5)
             )
             (br_if $while-out67
              (i32.gt_u
               (local.tee $9
                (i32.add
                 (local.get $4)
                 (i32.load offset=4
                  (local.get $2)
                 )
                )
               )
               (local.get $5)
              )
             )
            )
            (local.set $2
             (i32.load offset=8
              (local.get $2)
             )
            )
            (br $while-in68)
           )
          )
          (local.set $2
           (i32.add
            (local.tee $4
             (i32.add
              (local.get $9)
              (i32.const -47)
             )
            )
            (i32.const 8)
           )
          )
          (i32.store
           (i32.const 28332)
           (local.tee $7
            (i32.add
             (local.tee $8
              (select
               (i32.and
                (i32.sub
                 (i32.const 0)
                 (local.tee $8
                  (i32.add
                   (local.get $1)
                   (i32.const 8)
                  )
                 )
                )
                (i32.const 7)
               )
               (i32.const 0)
               (i32.and
                (local.get $8)
                (i32.const 7)
               )
              )
             )
             (local.get $1)
            )
           )
          )
          (i32.store
           (i32.const 28320)
           (local.tee $8
            (i32.sub
             (local.tee $11
              (i32.add
               (local.get $3)
               (i32.const -40)
              )
             )
             (local.get $8)
            )
           )
          )
          (i32.store offset=4
           (local.get $7)
           (i32.or
            (local.get $8)
            (i32.const 1)
           )
          )
          (i32.store offset=4
           (i32.add
            (local.get $1)
            (local.get $11)
           )
           (i32.const 40)
          )
          (i32.store
           (i32.const 28336)
           (i32.load
            (i32.const 28272)
           )
          )
          (i32.store offset=4
           (local.tee $4
            (select
             (local.get $5)
             (local.tee $2
              (i32.add
               (local.get $4)
               (select
                (i32.and
                 (i32.sub
                  (i32.const 0)
                  (local.get $2)
                 )
                 (i32.const 7)
                )
                (i32.const 0)
                (i32.and
                 (local.get $2)
                 (i32.const 7)
                )
               )
              )
             )
             (i32.lt_u
              (local.get $2)
              (local.tee $8
               (i32.add
                (local.get $5)
                (i32.const 16)
               )
              )
             )
            )
           )
           (i32.const 27)
          )
          (i64.store offset=8 align=4
           (local.get $4)
           (i64.load align=4
            (i32.const 28784)
           )
          )
          (i64.store offset=16 align=4
           (local.get $4)
           (i64.load align=4
            (i32.const 28792)
           )
          )
          (i32.store
           (i32.const 28784)
           (local.get $1)
          )
          (i32.store
           (i32.const 28788)
           (local.get $3)
          )
          (i32.store
           (i32.const 28796)
           (i32.const 0)
          )
          (i32.store
           (i32.const 28792)
           (i32.add
            (local.get $4)
            (i32.const 8)
           )
          )
          (local.set $1
           (i32.add
            (local.get $4)
            (i32.const 24)
           )
          )
          (loop $while-in70
           (i32.store
            (local.tee $2
             (i32.add
              (local.get $1)
              (i32.const 4)
             )
            )
            (i32.const 7)
           )
           (if
            (i32.lt_u
             (i32.add
              (local.get $1)
              (i32.const 8)
             )
             (local.get $9)
            )
            (block
             (local.set $1
              (local.get $2)
             )
             (br $while-in70)
            )
           )
          )
          (if
           (i32.ne
            (local.get $4)
            (local.get $5)
           )
           (block
            (i32.store offset=4
             (local.get $4)
             (i32.and
              (i32.load offset=4
               (local.get $4)
              )
              (i32.const -2)
             )
            )
            (i32.store offset=4
             (local.get $5)
             (i32.or
              (local.tee $9
               (i32.sub
                (local.get $4)
                (local.get $5)
               )
              )
              (i32.const 1)
             )
            )
            (i32.store
             (local.get $4)
             (local.get $9)
            )
            (local.set $2
             (i32.shr_u
              (local.get $9)
              (i32.const 3)
             )
            )
            (if
             (i32.lt_u
              (local.get $9)
              (i32.const 256)
             )
             (block
              (local.set $1
               (i32.add
                (i32.shl
                 (local.get $2)
                 (i32.const 3)
                )
                (i32.const 28348)
               )
              )
              (if
               (i32.and
                (local.tee $3
                 (i32.load
                  (i32.const 28308)
                 )
                )
                (local.tee $2
                 (i32.shl
                  (i32.const 1)
                  (local.get $2)
                 )
                )
               )
               (block $do-once71
                (if
                 (i32.le_u
                  (i32.load
                   (i32.const 28324)
                  )
                  (local.tee $3
                   (i32.load
                    (local.tee $2
                     (i32.add
                      (local.get $1)
                      (i32.const 8)
                     )
                    )
                   )
                  )
                 )
                 (block
                  (local.set $24
                   (local.get $2)
                  )
                  (local.set $16
                   (local.get $3)
                  )
                  (br $do-once71)
                 )
                )
                (call $_abort)
               )
               (block
                (i32.store
                 (i32.const 28308)
                 (i32.or
                  (local.get $2)
                  (local.get $3)
                 )
                )
                (local.set $24
                 (i32.add
                  (local.get $1)
                  (i32.const 8)
                 )
                )
                (local.set $16
                 (local.get $1)
                )
               )
              )
              (i32.store
               (local.get $24)
               (local.get $5)
              )
              (i32.store offset=12
               (local.get $16)
               (local.get $5)
              )
              (i32.store offset=8
               (local.get $5)
               (local.get $16)
              )
              (i32.store offset=12
               (local.get $5)
               (local.get $1)
              )
              (br $label$break$L309)
             )
            )
            (local.set $1
             (i32.add
              (i32.shl
               (local.tee $2
                (if (result i32)
                 (local.tee $1
                  (i32.shr_u
                   (local.get $9)
                   (i32.const 8)
                  )
                 )
                 (if (result i32)
                  (i32.gt_u
                   (local.get $9)
                   (i32.const 16777215)
                  )
                  (i32.const 31)
                  (block (result i32)
                   (local.set $1
                    (i32.and
                     (i32.shr_u
                      (i32.add
                       (local.tee $2
                        (i32.shl
                         (local.get $1)
                         (local.tee $3
                          (i32.and
                           (i32.shr_u
                            (i32.add
                             (local.get $1)
                             (i32.const 1048320)
                            )
                            (i32.const 16)
                           )
                           (i32.const 8)
                          )
                         )
                        )
                       )
                       (i32.const 520192)
                      )
                      (i32.const 16)
                     )
                     (i32.const 4)
                    )
                   )
                   (local.set $2
                    (i32.and
                     (i32.shr_u
                      (i32.add
                       (local.tee $4
                        (i32.shl
                         (local.get $2)
                         (local.get $1)
                        )
                       )
                       (i32.const 245760)
                      )
                      (i32.const 16)
                     )
                     (i32.const 2)
                    )
                   )
                   (i32.or
                    (i32.and
                     (i32.shr_u
                      (local.get $9)
                      (i32.add
                       (local.tee $1
                        (i32.add
                         (i32.sub
                          (i32.const 14)
                          (i32.or
                           (i32.or
                            (local.get $1)
                            (local.get $3)
                           )
                           (local.get $2)
                          )
                         )
                         (i32.shr_u
                          (i32.shl
                           (local.get $4)
                           (local.get $2)
                          )
                          (i32.const 15)
                         )
                        )
                       )
                       (i32.const 7)
                      )
                     )
                     (i32.const 1)
                    )
                    (i32.shl
                     (local.get $1)
                     (i32.const 1)
                    )
                   )
                  )
                 )
                 (i32.const 0)
                )
               )
               (i32.const 2)
              )
              (i32.const 28612)
             )
            )
            (i32.store offset=28
             (local.get $5)
             (local.get $2)
            )
            (i32.store offset=20
             (local.get $5)
             (i32.const 0)
            )
            (i32.store
             (local.get $8)
             (i32.const 0)
            )
            (if
             (i32.eqz
              (i32.and
               (local.tee $3
                (i32.load
                 (i32.const 28312)
                )
               )
               (local.tee $4
                (i32.shl
                 (i32.const 1)
                 (local.get $2)
                )
               )
              )
             )
             (block
              (i32.store
               (i32.const 28312)
               (i32.or
                (local.get $3)
                (local.get $4)
               )
              )
              (i32.store
               (local.get $1)
               (local.get $5)
              )
              (i32.store offset=24
               (local.get $5)
               (local.get $1)
              )
              (i32.store offset=12
               (local.get $5)
               (local.get $5)
              )
              (i32.store offset=8
               (local.get $5)
               (local.get $5)
              )
              (br $label$break$L309)
             )
            )
            (if
             (i32.eq
              (i32.and
               (i32.load offset=4
                (local.tee $1
                 (i32.load
                  (local.get $1)
                 )
                )
               )
               (i32.const -8)
              )
              (local.get $9)
             )
             (local.set $6
              (local.get $1)
             )
             (block $label$break$L465
              (local.set $3
               (i32.shl
                (local.get $9)
                (select
                 (i32.const 0)
                 (i32.sub
                  (i32.const 25)
                  (i32.shr_u
                   (local.get $2)
                   (i32.const 1)
                  )
                 )
                 (i32.eq
                  (local.get $2)
                  (i32.const 31)
                 )
                )
               )
              )
              (loop $while-in77
               (if
                (local.tee $2
                 (i32.load
                  (local.tee $4
                   (i32.add
                    (i32.add
                     (local.get $1)
                     (i32.const 16)
                    )
                    (i32.shl
                     (i32.shr_u
                      (local.get $3)
                      (i32.const 31)
                     )
                     (i32.const 2)
                    )
                   )
                  )
                 )
                )
                (block
                 (local.set $3
                  (i32.shl
                   (local.get $3)
                   (i32.const 1)
                  )
                 )
                 (if
                  (i32.eq
                   (i32.and
                    (i32.load offset=4
                     (local.get $2)
                    )
                    (i32.const -8)
                   )
                   (local.get $9)
                  )
                  (block
                   (local.set $6
                    (local.get $2)
                   )
                   (br $label$break$L465)
                  )
                  (block
                   (local.set $1
                    (local.get $2)
                   )
                   (br $while-in77)
                  )
                 )
                )
               )
              )
              (if
               (i32.gt_u
                (i32.load
                 (i32.const 28324)
                )
                (local.get $4)
               )
               (call $_abort)
               (block
                (i32.store
                 (local.get $4)
                 (local.get $5)
                )
                (i32.store offset=24
                 (local.get $5)
                 (local.get $1)
                )
                (i32.store offset=12
                 (local.get $5)
                 (local.get $5)
                )
                (i32.store offset=8
                 (local.get $5)
                 (local.get $5)
                )
                (br $label$break$L309)
               )
              )
             )
            )
            (if
             (i32.and
              (i32.le_u
               (local.tee $1
                (i32.load
                 (i32.const 28324)
                )
               )
               (local.get $6)
              )
              (i32.le_u
               (local.get $1)
               (local.tee $2
                (i32.load offset=8
                 (local.tee $1
                  (local.get $6)
                 )
                )
               )
              )
             )
             (block
              (i32.store offset=12
               (local.get $2)
               (local.get $5)
              )
              (i32.store offset=8
               (local.get $1)
               (local.get $5)
              )
              (i32.store offset=8
               (local.get $5)
               (local.get $2)
              )
              (i32.store offset=12
               (local.get $5)
               (local.get $6)
              )
              (i32.store offset=24
               (local.get $5)
               (i32.const 0)
              )
             )
             (call $_abort)
            )
           )
          )
         )
         (block
          (if
           (i32.or
            (i32.eqz
             (local.tee $2
              (i32.load
               (i32.const 28324)
              )
             )
            )
            (i32.lt_u
             (local.get $1)
             (local.get $2)
            )
           )
           (i32.store
            (i32.const 28324)
            (local.get $1)
           )
          )
          (i32.store
           (i32.const 28784)
           (local.get $1)
          )
          (i32.store
           (i32.const 28788)
           (local.get $3)
          )
          (i32.store
           (i32.const 28796)
           (i32.const 0)
          )
          (i32.store
           (i32.const 28344)
           (i32.load
            (i32.const 28256)
           )
          )
          (i32.store
           (i32.const 28340)
           (i32.const -1)
          )
          (i32.store
           (i32.const 28360)
           (i32.const 28348)
          )
          (i32.store
           (i32.const 28356)
           (i32.const 28348)
          )
          (i32.store
           (i32.const 28368)
           (i32.const 28356)
          )
          (i32.store
           (i32.const 28364)
           (i32.const 28356)
          )
          (i32.store
           (i32.const 28376)
           (i32.const 28364)
          )
          (i32.store
           (i32.const 28372)
           (i32.const 28364)
          )
          (i32.store
           (i32.const 28384)
           (i32.const 28372)
          )
          (i32.store
           (i32.const 28380)
           (i32.const 28372)
          )
          (i32.store
           (i32.const 28392)
           (i32.const 28380)
          )
          (i32.store
           (i32.const 28388)
           (i32.const 28380)
          )
          (i32.store
           (i32.const 28400)
           (i32.const 28388)
          )
          (i32.store
           (i32.const 28396)
           (i32.const 28388)
          )
          (i32.store
           (i32.const 28408)
           (i32.const 28396)
          )
          (i32.store
           (i32.const 28404)
           (i32.const 28396)
          )
          (i32.store
           (i32.const 28416)
           (i32.const 28404)
          )
          (i32.store
           (i32.const 28412)
           (i32.const 28404)
          )
          (i32.store
           (i32.const 28424)
           (i32.const 28412)
          )
          (i32.store
           (i32.const 28420)
           (i32.const 28412)
          )
          (i32.store
           (i32.const 28432)
           (i32.const 28420)
          )
          (i32.store
           (i32.const 28428)
           (i32.const 28420)
          )
          (i32.store
           (i32.const 28440)
           (i32.const 28428)
          )
          (i32.store
           (i32.const 28436)
           (i32.const 28428)
          )
          (i32.store
           (i32.const 28448)
           (i32.const 28436)
          )
          (i32.store
           (i32.const 28444)
           (i32.const 28436)
          )
          (i32.store
           (i32.const 28456)
           (i32.const 28444)
          )
          (i32.store
           (i32.const 28452)
           (i32.const 28444)
          )
          (i32.store
           (i32.const 28464)
           (i32.const 28452)
          )
          (i32.store
           (i32.const 28460)
           (i32.const 28452)
          )
          (i32.store
           (i32.const 28472)
           (i32.const 28460)
          )
          (i32.store
           (i32.const 28468)
           (i32.const 28460)
          )
          (i32.store
           (i32.const 28480)
           (i32.const 28468)
          )
          (i32.store
           (i32.const 28476)
           (i32.const 28468)
          )
          (i32.store
           (i32.const 28488)
           (i32.const 28476)
          )
          (i32.store
           (i32.const 28484)
           (i32.const 28476)
          )
          (i32.store
           (i32.const 28496)
           (i32.const 28484)
          )
          (i32.store
           (i32.const 28492)
           (i32.const 28484)
          )
          (i32.store
           (i32.const 28504)
           (i32.const 28492)
          )
          (i32.store
           (i32.const 28500)
           (i32.const 28492)
          )
          (i32.store
           (i32.const 28512)
           (i32.const 28500)
          )
          (i32.store
           (i32.const 28508)
           (i32.const 28500)
          )
          (i32.store
           (i32.const 28520)
           (i32.const 28508)
          )
          (i32.store
           (i32.const 28516)
           (i32.const 28508)
          )
          (i32.store
           (i32.const 28528)
           (i32.const 28516)
          )
          (i32.store
           (i32.const 28524)
           (i32.const 28516)
          )
          (i32.store
           (i32.const 28536)
           (i32.const 28524)
          )
          (i32.store
           (i32.const 28532)
           (i32.const 28524)
          )
          (i32.store
           (i32.const 28544)
           (i32.const 28532)
          )
          (i32.store
           (i32.const 28540)
           (i32.const 28532)
          )
          (i32.store
           (i32.const 28552)
           (i32.const 28540)
          )
          (i32.store
           (i32.const 28548)
           (i32.const 28540)
          )
          (i32.store
           (i32.const 28560)
           (i32.const 28548)
          )
          (i32.store
           (i32.const 28556)
           (i32.const 28548)
          )
          (i32.store
           (i32.const 28568)
           (i32.const 28556)
          )
          (i32.store
           (i32.const 28564)
           (i32.const 28556)
          )
          (i32.store
           (i32.const 28576)
           (i32.const 28564)
          )
          (i32.store
           (i32.const 28572)
           (i32.const 28564)
          )
          (i32.store
           (i32.const 28584)
           (i32.const 28572)
          )
          (i32.store
           (i32.const 28580)
           (i32.const 28572)
          )
          (i32.store
           (i32.const 28592)
           (i32.const 28580)
          )
          (i32.store
           (i32.const 28588)
           (i32.const 28580)
          )
          (i32.store
           (i32.const 28600)
           (i32.const 28588)
          )
          (i32.store
           (i32.const 28596)
           (i32.const 28588)
          )
          (i32.store
           (i32.const 28608)
           (i32.const 28596)
          )
          (i32.store
           (i32.const 28604)
           (i32.const 28596)
          )
          (i32.store
           (i32.const 28332)
           (local.tee $4
            (i32.add
             (local.tee $2
              (select
               (i32.and
                (i32.sub
                 (i32.const 0)
                 (local.tee $2
                  (i32.add
                   (local.get $1)
                   (i32.const 8)
                  )
                 )
                )
                (i32.const 7)
               )
               (i32.const 0)
               (i32.and
                (local.get $2)
                (i32.const 7)
               )
              )
             )
             (local.get $1)
            )
           )
          )
          (i32.store
           (i32.const 28320)
           (local.tee $2
            (i32.sub
             (local.tee $3
              (i32.add
               (local.get $3)
               (i32.const -40)
              )
             )
             (local.get $2)
            )
           )
          )
          (i32.store offset=4
           (local.get $4)
           (i32.or
            (local.get $2)
            (i32.const 1)
           )
          )
          (i32.store offset=4
           (i32.add
            (local.get $1)
            (local.get $3)
           )
           (i32.const 40)
          )
          (i32.store
           (i32.const 28336)
           (i32.load
            (i32.const 28272)
           )
          )
         )
        )
        (if
         (i32.gt_u
          (local.tee $1
           (i32.load
            (i32.const 28320)
           )
          )
          (local.get $0)
         )
         (block
          (i32.store
           (i32.const 28320)
           (local.tee $2
            (i32.sub
             (local.get $1)
             (local.get $0)
            )
           )
          )
          (i32.store
           (i32.const 28332)
           (local.tee $3
            (i32.add
             (local.tee $1
              (i32.load
               (i32.const 28332)
              )
             )
             (local.get $0)
            )
           )
          )
          (i32.store offset=4
           (local.get $3)
           (i32.or
            (local.get $2)
            (i32.const 1)
           )
          )
          (i32.store offset=4
           (local.get $1)
           (i32.or
            (local.get $0)
            (i32.const 3)
           )
          )
          (local.set $0
           (i32.add
            (local.get $1)
            (i32.const 8)
           )
          )
          (br $label$break$L243)
         )
        )
       )
      )
     )
     (i32.store
      (call $___errno_location)
      (i32.const 12)
     )
    )
   )
   (local.set $0
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (i32.const 28752)
     )
     (i32.const 2)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $19)
    )
    (return
     (local.get $0)
    )
   )
  )
  (call $___pthread_mutex_unlock
   (i32.const 28756)
  )
  (global.set $STACKTOP
   (local.get $19)
  )
  (local.get $0)
 )
 (func $_free (; 669 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return)
  )
  (if
   (i32.and
    (i32.load
     (i32.const 28752)
    )
    (i32.const 2)
   )
   (if
    (call $___pthread_mutex_lock
     (i32.const 28756)
    )
    (return)
   )
  )
  (if
   (i32.lt_u
    (local.tee $1
     (i32.add
      (local.get $0)
      (i32.const -8)
     )
    )
    (local.tee $10
     (i32.load
      (i32.const 28324)
     )
    )
   )
   (call $_abort)
  )
  (if
   (i32.eq
    (local.tee $8
     (i32.and
      (local.tee $0
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const -4)
        )
       )
      )
      (i32.const 3)
     )
    )
    (i32.const 1)
   )
   (call $_abort)
  )
  (local.set $6
   (i32.add
    (local.get $1)
    (local.tee $3
     (i32.and
      (local.get $0)
      (i32.const -8)
     )
    )
   )
  )
  (block $do-once5
   (block $__rjti$0
    (if
     (i32.and
      (local.get $0)
      (i32.const 1)
     )
     (block
      (local.set $2
       (local.get $1)
      )
      (br $__rjti$0)
     )
     (block $label$break$L14
      (local.set $7
       (i32.load
        (local.get $1)
       )
      )
      (if
       (local.get $8)
       (block
        (if
         (i32.lt_u
          (local.tee $0
           (i32.sub
            (local.get $1)
            (local.get $7)
           )
          )
          (local.get $10)
         )
         (call $_abort)
        )
        (local.set $3
         (i32.add
          (local.get $3)
          (local.get $7)
         )
        )
        (if
         (i32.eq
          (i32.load
           (i32.const 28328)
          )
          (local.get $0)
         )
         (block
          (if
           (i32.ne
            (i32.and
             (local.tee $1
              (i32.load offset=4
               (local.get $6)
              )
             )
             (i32.const 3)
            )
            (i32.const 3)
           )
           (block
            (local.set $1
             (local.get $0)
            )
            (local.set $2
             (local.get $0)
            )
            (br $__rjti$0)
           )
          )
          (i32.store
           (i32.const 28316)
           (local.get $3)
          )
          (i32.store offset=4
           (local.get $6)
           (i32.and
            (local.get $1)
            (i32.const -2)
           )
          )
          (i32.store offset=4
           (local.get $0)
           (i32.or
            (local.get $3)
            (i32.const 1)
           )
          )
          (i32.store
           (i32.add
            (local.get $0)
            (local.get $3)
           )
           (local.get $3)
          )
          (br $label$break$L14)
         )
        )
        (local.set $1
         (i32.shr_u
          (local.get $7)
          (i32.const 3)
         )
        )
        (if
         (i32.lt_u
          (local.get $7)
          (i32.const 256)
         )
         (block
          (local.set $4
           (i32.load offset=12
            (local.get $0)
           )
          )
          (if
           (i32.ne
            (local.tee $7
             (i32.load offset=8
              (local.get $0)
             )
            )
            (local.tee $8
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 3)
              )
              (i32.const 28348)
             )
            )
           )
           (block
            (if
             (i32.gt_u
              (local.get $10)
              (local.get $7)
             )
             (call $_abort)
            )
            (if
             (i32.ne
              (local.get $0)
              (i32.load offset=12
               (local.get $7)
              )
             )
             (call $_abort)
            )
           )
          )
          (if
           (i32.eq
            (local.get $4)
            (local.get $7)
           )
           (block
            (i32.store
             (i32.const 28308)
             (i32.and
              (i32.load
               (i32.const 28308)
              )
              (i32.xor
               (i32.shl
                (i32.const 1)
                (local.get $1)
               )
               (i32.const -1)
              )
             )
            )
            (local.set $1
             (local.get $0)
            )
            (local.set $2
             (local.get $0)
            )
            (br $__rjti$0)
           )
          )
          (if
           (i32.eq
            (local.get $4)
            (local.get $8)
           )
           (local.set $2
            (i32.add
             (local.get $4)
             (i32.const 8)
            )
           )
           (block
            (if
             (i32.gt_u
              (local.get $10)
              (local.get $4)
             )
             (call $_abort)
            )
            (if
             (i32.eq
              (i32.load
               (local.tee $1
                (i32.add
                 (local.get $4)
                 (i32.const 8)
                )
               )
              )
              (local.get $0)
             )
             (local.set $2
              (local.get $1)
             )
             (call $_abort)
            )
           )
          )
          (i32.store offset=12
           (local.get $7)
           (local.get $4)
          )
          (i32.store
           (local.get $2)
           (local.get $7)
          )
          (local.set $1
           (local.get $0)
          )
          (local.set $2
           (local.get $0)
          )
          (br $__rjti$0)
         )
        )
        (local.set $11
         (i32.load offset=24
          (local.get $0)
         )
        )
        (if
         (i32.eq
          (local.tee $1
           (i32.load offset=12
            (local.get $0)
           )
          )
          (local.get $0)
         )
         (block $do-once
          (if
           (local.tee $1
            (i32.load
             (local.tee $7
              (i32.add
               (local.tee $2
                (i32.add
                 (local.get $0)
                 (i32.const 16)
                )
               )
               (i32.const 4)
              )
             )
            )
           )
           (local.set $2
            (local.get $7)
           )
           (br_if $do-once
            (i32.eqz
             (local.tee $1
              (i32.load
               (local.get $2)
              )
             )
            )
           )
          )
          (loop $while-in
           (block $while-out
            (if
             (i32.eqz
              (local.tee $8
               (i32.load
                (local.tee $7
                 (i32.add
                  (local.get $1)
                  (i32.const 20)
                 )
                )
               )
              )
             )
             (br_if $while-out
              (i32.eqz
               (local.tee $8
                (i32.load
                 (local.tee $7
                  (i32.add
                   (local.get $1)
                   (i32.const 16)
                  )
                 )
                )
               )
              )
             )
            )
            (local.set $2
             (local.get $7)
            )
            (local.set $1
             (local.get $8)
            )
            (br $while-in)
           )
          )
          (if
           (i32.gt_u
            (local.get $10)
            (local.get $2)
           )
           (call $_abort)
           (block
            (i32.store
             (local.get $2)
             (i32.const 0)
            )
            (local.set $4
             (local.get $1)
            )
           )
          )
         )
         (block
          (if
           (i32.gt_u
            (local.get $10)
            (local.tee $2
             (i32.load offset=8
              (local.get $0)
             )
            )
           )
           (call $_abort)
          )
          (if
           (i32.ne
            (local.get $0)
            (i32.load offset=12
             (local.get $2)
            )
           )
           (call $_abort)
          )
          (if
           (i32.eq
            (i32.load offset=8
             (local.get $1)
            )
            (local.get $0)
           )
           (block
            (i32.store offset=12
             (local.get $2)
             (local.get $1)
            )
            (i32.store offset=8
             (local.get $1)
             (local.get $2)
            )
            (local.set $4
             (local.get $1)
            )
           )
           (call $_abort)
          )
         )
        )
        (if
         (local.get $11)
         (block
          (if
           (i32.eq
            (i32.load
             (local.tee $2
              (i32.add
               (i32.shl
                (local.tee $1
                 (i32.load offset=28
                  (local.get $0)
                 )
                )
                (i32.const 2)
               )
               (i32.const 28612)
              )
             )
            )
            (local.get $0)
           )
           (block
            (i32.store
             (local.get $2)
             (local.get $4)
            )
            (if
             (i32.eqz
              (local.get $4)
             )
             (block
              (i32.store
               (i32.const 28312)
               (i32.and
                (i32.load
                 (i32.const 28312)
                )
                (i32.xor
                 (i32.shl
                  (i32.const 1)
                  (local.get $1)
                 )
                 (i32.const -1)
                )
               )
              )
              (local.set $1
               (local.get $0)
              )
              (local.set $2
               (local.get $0)
              )
              (br $__rjti$0)
             )
            )
           )
           (if
            (i32.gt_u
             (i32.load
              (i32.const 28324)
             )
             (local.get $11)
            )
            (call $_abort)
            (block
             (i32.store
              (select
               (local.tee $1
                (i32.add
                 (local.get $11)
                 (i32.const 16)
                )
               )
               (i32.add
                (local.get $11)
                (i32.const 20)
               )
               (i32.eq
                (i32.load
                 (local.get $1)
                )
                (local.get $0)
               )
              )
              (local.get $4)
             )
             (if
              (i32.eqz
               (local.get $4)
              )
              (block
               (local.set $1
                (local.get $0)
               )
               (local.set $2
                (local.get $0)
               )
               (br $__rjti$0)
              )
             )
            )
           )
          )
          (if
           (i32.gt_u
            (local.tee $2
             (i32.load
              (i32.const 28324)
             )
            )
            (local.get $4)
           )
           (call $_abort)
          )
          (i32.store offset=24
           (local.get $4)
           (local.get $11)
          )
          (if
           (local.tee $1
            (i32.load offset=16
             (local.get $0)
            )
           )
           (if
            (i32.gt_u
             (local.get $2)
             (local.get $1)
            )
            (call $_abort)
            (block
             (i32.store offset=16
              (local.get $4)
              (local.get $1)
             )
             (i32.store offset=24
              (local.get $1)
              (local.get $4)
             )
            )
           )
          )
          (if
           (local.tee $1
            (i32.load offset=20
             (local.get $0)
            )
           )
           (if
            (i32.gt_u
             (i32.load
              (i32.const 28324)
             )
             (local.get $1)
            )
            (call $_abort)
            (block
             (i32.store offset=20
              (local.get $4)
              (local.get $1)
             )
             (i32.store offset=24
              (local.get $1)
              (local.get $4)
             )
             (local.set $1
              (local.get $0)
             )
             (local.set $2
              (local.get $0)
             )
             (br $__rjti$0)
            )
           )
           (block
            (local.set $1
             (local.get $0)
            )
            (local.set $2
             (local.get $0)
            )
            (br $__rjti$0)
           )
          )
         )
         (block
          (local.set $1
           (local.get $0)
          )
          (local.set $2
           (local.get $0)
          )
          (br $__rjti$0)
         )
        )
       )
      )
     )
    )
    (br $do-once5)
   )
   (local.set $0
    (local.get $3)
   )
   (if
    (i32.ge_u
     (local.get $1)
     (local.get $6)
    )
    (call $_abort)
   )
   (if
    (i32.eqz
     (i32.and
      (local.tee $3
       (i32.load offset=4
        (local.get $6)
       )
      )
      (i32.const 1)
     )
    )
    (call $_abort)
   )
   (local.set $1
    (i32.shr_u
     (local.tee $3
      (if (result i32)
       (i32.and
        (local.get $3)
        (i32.const 2)
       )
       (block (result i32)
        (i32.store offset=4
         (local.get $6)
         (i32.and
          (local.get $3)
          (i32.const -2)
         )
        )
        (i32.store offset=4
         (local.get $2)
         (i32.or
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.store
         (i32.add
          (local.get $0)
          (local.get $1)
         )
         (local.get $0)
        )
        (local.get $0)
       )
       (block (result i32)
        (if
         (i32.eq
          (i32.load
           (i32.const 28332)
          )
          (local.get $6)
         )
         (block
          (i32.store
           (i32.const 28320)
           (local.tee $0
            (i32.add
             (i32.load
              (i32.const 28320)
             )
             (local.get $0)
            )
           )
          )
          (i32.store
           (i32.const 28332)
           (local.get $2)
          )
          (i32.store offset=4
           (local.get $2)
           (i32.or
            (local.get $0)
            (i32.const 1)
           )
          )
          (br_if $do-once5
           (i32.ne
            (local.get $2)
            (i32.load
             (i32.const 28328)
            )
           )
          )
          (i32.store
           (i32.const 28328)
           (i32.const 0)
          )
          (i32.store
           (i32.const 28316)
           (i32.const 0)
          )
          (br $do-once5)
         )
        )
        (if
         (i32.eq
          (i32.load
           (i32.const 28328)
          )
          (local.get $6)
         )
         (block
          (i32.store
           (i32.const 28316)
           (local.tee $0
            (i32.add
             (i32.load
              (i32.const 28316)
             )
             (local.get $0)
            )
           )
          )
          (i32.store
           (i32.const 28328)
           (local.get $1)
          )
          (i32.store offset=4
           (local.get $2)
           (i32.or
            (local.get $0)
            (i32.const 1)
           )
          )
          (i32.store
           (i32.add
            (local.get $0)
            (local.get $1)
           )
           (local.get $0)
          )
          (br $do-once5)
         )
        )
        (local.set $4
         (i32.add
          (i32.and
           (local.get $3)
           (i32.const -8)
          )
          (local.get $0)
         )
        )
        (local.set $0
         (i32.shr_u
          (local.get $3)
          (i32.const 3)
         )
        )
        (block $label$break$L109
         (if
          (i32.lt_u
           (local.get $3)
           (i32.const 256)
          )
          (block
           (local.set $3
            (i32.load offset=12
             (local.get $6)
            )
           )
           (if
            (i32.ne
             (local.tee $5
              (i32.load offset=8
               (local.get $6)
              )
             )
             (local.tee $7
              (i32.add
               (i32.shl
                (local.get $0)
                (i32.const 3)
               )
               (i32.const 28348)
              )
             )
            )
            (block
             (if
              (i32.gt_u
               (i32.load
                (i32.const 28324)
               )
               (local.get $5)
              )
              (call $_abort)
             )
             (if
              (i32.ne
               (local.get $6)
               (i32.load offset=12
                (local.get $5)
               )
              )
              (call $_abort)
             )
            )
           )
           (if
            (i32.eq
             (local.get $3)
             (local.get $5)
            )
            (block
             (i32.store
              (i32.const 28308)
              (i32.and
               (i32.load
                (i32.const 28308)
               )
               (i32.xor
                (i32.shl
                 (i32.const 1)
                 (local.get $0)
                )
                (i32.const -1)
               )
              )
             )
             (br $label$break$L109)
            )
           )
           (if
            (i32.eq
             (local.get $3)
             (local.get $7)
            )
            (local.set $9
             (i32.add
              (local.get $3)
              (i32.const 8)
             )
            )
            (block
             (if
              (i32.gt_u
               (i32.load
                (i32.const 28324)
               )
               (local.get $3)
              )
              (call $_abort)
             )
             (if
              (i32.eq
               (i32.load
                (local.tee $0
                 (i32.add
                  (local.get $3)
                  (i32.const 8)
                 )
                )
               )
               (local.get $6)
              )
              (local.set $9
               (local.get $0)
              )
              (call $_abort)
             )
            )
           )
           (i32.store offset=12
            (local.get $5)
            (local.get $3)
           )
           (i32.store
            (local.get $9)
            (local.get $5)
           )
          )
          (block
           (local.set $8
            (i32.load offset=24
             (local.get $6)
            )
           )
           (if
            (i32.eq
             (local.tee $0
              (i32.load offset=12
               (local.get $6)
              )
             )
             (local.get $6)
            )
            (block $do-once8
             (if
              (local.tee $0
               (i32.load
                (local.tee $9
                 (i32.add
                  (local.tee $3
                   (i32.add
                    (local.get $6)
                    (i32.const 16)
                   )
                  )
                  (i32.const 4)
                 )
                )
               )
              )
              (local.set $3
               (local.get $9)
              )
              (br_if $do-once8
               (i32.eqz
                (local.tee $0
                 (i32.load
                  (local.get $3)
                 )
                )
               )
              )
             )
             (loop $while-in11
              (block $while-out10
               (if
                (i32.eqz
                 (local.tee $7
                  (i32.load
                   (local.tee $9
                    (i32.add
                     (local.get $0)
                     (i32.const 20)
                    )
                   )
                  )
                 )
                )
                (br_if $while-out10
                 (i32.eqz
                  (local.tee $7
                   (i32.load
                    (local.tee $9
                     (i32.add
                      (local.get $0)
                      (i32.const 16)
                     )
                    )
                   )
                  )
                 )
                )
               )
               (local.set $3
                (local.get $9)
               )
               (local.set $0
                (local.get $7)
               )
               (br $while-in11)
              )
             )
             (if
              (i32.gt_u
               (i32.load
                (i32.const 28324)
               )
               (local.get $3)
              )
              (call $_abort)
              (block
               (i32.store
                (local.get $3)
                (i32.const 0)
               )
               (local.set $5
                (local.get $0)
               )
              )
             )
            )
            (block
             (if
              (i32.gt_u
               (i32.load
                (i32.const 28324)
               )
               (local.tee $3
                (i32.load offset=8
                 (local.get $6)
                )
               )
              )
              (call $_abort)
             )
             (if
              (i32.ne
               (local.get $6)
               (i32.load offset=12
                (local.get $3)
               )
              )
              (call $_abort)
             )
             (if
              (i32.eq
               (i32.load offset=8
                (local.get $0)
               )
               (local.get $6)
              )
              (block
               (i32.store offset=12
                (local.get $3)
                (local.get $0)
               )
               (i32.store offset=8
                (local.get $0)
                (local.get $3)
               )
               (local.set $5
                (local.get $0)
               )
              )
              (call $_abort)
             )
            )
           )
           (if
            (local.get $8)
            (block
             (if
              (i32.eq
               (i32.load
                (local.tee $3
                 (i32.add
                  (i32.shl
                   (local.tee $0
                    (i32.load offset=28
                     (local.get $6)
                    )
                   )
                   (i32.const 2)
                  )
                  (i32.const 28612)
                 )
                )
               )
               (local.get $6)
              )
              (block
               (i32.store
                (local.get $3)
                (local.get $5)
               )
               (if
                (i32.eqz
                 (local.get $5)
                )
                (block
                 (i32.store
                  (i32.const 28312)
                  (i32.and
                   (i32.load
                    (i32.const 28312)
                   )
                   (i32.xor
                    (i32.shl
                     (i32.const 1)
                     (local.get $0)
                    )
                    (i32.const -1)
                   )
                  )
                 )
                 (br $label$break$L109)
                )
               )
              )
              (if
               (i32.gt_u
                (i32.load
                 (i32.const 28324)
                )
                (local.get $8)
               )
               (call $_abort)
               (block
                (i32.store
                 (select
                  (local.tee $0
                   (i32.add
                    (local.get $8)
                    (i32.const 16)
                   )
                  )
                  (i32.add
                   (local.get $8)
                   (i32.const 20)
                  )
                  (i32.eq
                   (i32.load
                    (local.get $0)
                   )
                   (local.get $6)
                  )
                 )
                 (local.get $5)
                )
                (br_if $label$break$L109
                 (i32.eqz
                  (local.get $5)
                 )
                )
               )
              )
             )
             (if
              (i32.gt_u
               (local.tee $3
                (i32.load
                 (i32.const 28324)
                )
               )
               (local.get $5)
              )
              (call $_abort)
             )
             (i32.store offset=24
              (local.get $5)
              (local.get $8)
             )
             (if
              (local.tee $0
               (i32.load offset=16
                (local.get $6)
               )
              )
              (if
               (i32.gt_u
                (local.get $3)
                (local.get $0)
               )
               (call $_abort)
               (block
                (i32.store offset=16
                 (local.get $5)
                 (local.get $0)
                )
                (i32.store offset=24
                 (local.get $0)
                 (local.get $5)
                )
               )
              )
             )
             (if
              (local.tee $0
               (i32.load offset=20
                (local.get $6)
               )
              )
              (if
               (i32.gt_u
                (i32.load
                 (i32.const 28324)
                )
                (local.get $0)
               )
               (call $_abort)
               (block
                (i32.store offset=20
                 (local.get $5)
                 (local.get $0)
                )
                (i32.store offset=24
                 (local.get $0)
                 (local.get $5)
                )
               )
              )
             )
            )
           )
          )
         )
        )
        (i32.store offset=4
         (local.get $2)
         (i32.or
          (local.get $4)
          (i32.const 1)
         )
        )
        (i32.store
         (i32.add
          (local.get $1)
          (local.get $4)
         )
         (local.get $4)
        )
        (if (result i32)
         (i32.eq
          (i32.load
           (i32.const 28328)
          )
          (local.get $2)
         )
         (block
          (i32.store
           (i32.const 28316)
           (local.get $4)
          )
          (br $do-once5)
         )
         (local.get $4)
        )
       )
      )
     )
     (i32.const 3)
    )
   )
   (if
    (i32.lt_u
     (local.get $3)
     (i32.const 256)
    )
    (block
     (local.set $0
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 3)
       )
       (i32.const 28348)
      )
     )
     (if
      (i32.and
       (local.tee $3
        (i32.load
         (i32.const 28308)
        )
       )
       (local.tee $1
        (i32.shl
         (i32.const 1)
         (local.get $1)
        )
       )
      )
      (if
       (i32.gt_u
        (i32.load
         (i32.const 28324)
        )
        (local.tee $3
         (i32.load
          (local.tee $1
           (i32.add
            (local.get $0)
            (i32.const 8)
           )
          )
         )
        )
       )
       (call $_abort)
       (block
        (local.set $14
         (local.get $1)
        )
        (local.set $13
         (local.get $3)
        )
       )
      )
      (block
       (i32.store
        (i32.const 28308)
        (i32.or
         (local.get $1)
         (local.get $3)
        )
       )
       (local.set $14
        (i32.add
         (local.get $0)
         (i32.const 8)
        )
       )
       (local.set $13
        (local.get $0)
       )
      )
     )
     (i32.store
      (local.get $14)
      (local.get $2)
     )
     (i32.store offset=12
      (local.get $13)
      (local.get $2)
     )
     (i32.store offset=8
      (local.get $2)
      (local.get $13)
     )
     (i32.store offset=12
      (local.get $2)
      (local.get $0)
     )
     (br $do-once5)
    )
   )
   (local.set $0
    (i32.add
     (i32.shl
      (local.tee $1
       (if (result i32)
        (local.tee $0
         (i32.shr_u
          (local.get $3)
          (i32.const 8)
         )
        )
        (if (result i32)
         (i32.gt_u
          (local.get $3)
          (i32.const 16777215)
         )
         (i32.const 31)
         (block (result i32)
          (local.set $0
           (i32.and
            (i32.shr_u
             (i32.add
              (local.tee $1
               (i32.shl
                (local.get $0)
                (local.tee $4
                 (i32.and
                  (i32.shr_u
                   (i32.add
                    (local.get $0)
                    (i32.const 1048320)
                   )
                   (i32.const 16)
                  )
                  (i32.const 8)
                 )
                )
               )
              )
              (i32.const 520192)
             )
             (i32.const 16)
            )
            (i32.const 4)
           )
          )
          (local.set $1
           (i32.and
            (i32.shr_u
             (i32.add
              (local.tee $5
               (i32.shl
                (local.get $1)
                (local.get $0)
               )
              )
              (i32.const 245760)
             )
             (i32.const 16)
            )
            (i32.const 2)
           )
          )
          (i32.or
           (i32.and
            (i32.shr_u
             (local.get $3)
             (i32.add
              (local.tee $0
               (i32.add
                (i32.sub
                 (i32.const 14)
                 (i32.or
                  (i32.or
                   (local.get $0)
                   (local.get $4)
                  )
                  (local.get $1)
                 )
                )
                (i32.shr_u
                 (i32.shl
                  (local.get $5)
                  (local.get $1)
                 )
                 (i32.const 15)
                )
               )
              )
              (i32.const 7)
             )
            )
            (i32.const 1)
           )
           (i32.shl
            (local.get $0)
            (i32.const 1)
           )
          )
         )
        )
        (i32.const 0)
       )
      )
      (i32.const 2)
     )
     (i32.const 28612)
    )
   )
   (i32.store offset=28
    (local.get $2)
    (local.get $1)
   )
   (i32.store offset=20
    (local.get $2)
    (i32.const 0)
   )
   (i32.store offset=16
    (local.get $2)
    (i32.const 0)
   )
   (if
    (i32.and
     (local.tee $4
      (i32.load
       (i32.const 28312)
      )
     )
     (local.tee $5
      (i32.shl
       (i32.const 1)
       (local.get $1)
      )
     )
    )
    (block $label$break$L193
     (if
      (i32.eq
       (i32.and
        (i32.load offset=4
         (local.tee $0
          (i32.load
           (local.get $0)
          )
         )
        )
        (i32.const -8)
       )
       (local.get $3)
      )
      (local.set $12
       (local.get $0)
      )
      (block $label$break$L196
       (local.set $4
        (i32.shl
         (local.get $3)
         (select
          (i32.const 0)
          (i32.sub
           (i32.const 25)
           (i32.shr_u
            (local.get $1)
            (i32.const 1)
           )
          )
          (i32.eq
           (local.get $1)
           (i32.const 31)
          )
         )
        )
       )
       (loop $while-in19
        (if
         (local.tee $1
          (i32.load
           (local.tee $5
            (i32.add
             (i32.add
              (local.get $0)
              (i32.const 16)
             )
             (i32.shl
              (i32.shr_u
               (local.get $4)
               (i32.const 31)
              )
              (i32.const 2)
             )
            )
           )
          )
         )
         (block
          (local.set $4
           (i32.shl
            (local.get $4)
            (i32.const 1)
           )
          )
          (if
           (i32.eq
            (i32.and
             (i32.load offset=4
              (local.get $1)
             )
             (i32.const -8)
            )
            (local.get $3)
           )
           (block
            (local.set $12
             (local.get $1)
            )
            (br $label$break$L196)
           )
           (block
            (local.set $0
             (local.get $1)
            )
            (br $while-in19)
           )
          )
         )
        )
       )
       (if
        (i32.gt_u
         (i32.load
          (i32.const 28324)
         )
         (local.get $5)
        )
        (call $_abort)
        (block
         (i32.store
          (local.get $5)
          (local.get $2)
         )
         (i32.store offset=24
          (local.get $2)
          (local.get $0)
         )
         (i32.store offset=12
          (local.get $2)
          (local.get $2)
         )
         (i32.store offset=8
          (local.get $2)
          (local.get $2)
         )
         (br $label$break$L193)
        )
       )
      )
     )
     (if
      (i32.and
       (i32.le_u
        (local.tee $0
         (i32.load
          (i32.const 28324)
         )
        )
        (local.get $12)
       )
       (i32.le_u
        (local.get $0)
        (local.tee $1
         (i32.load offset=8
          (local.tee $0
           (local.get $12)
          )
         )
        )
       )
      )
      (block
       (i32.store offset=12
        (local.get $1)
        (local.get $2)
       )
       (i32.store offset=8
        (local.get $0)
        (local.get $2)
       )
       (i32.store offset=8
        (local.get $2)
        (local.get $1)
       )
       (i32.store offset=12
        (local.get $2)
        (local.get $12)
       )
       (i32.store offset=24
        (local.get $2)
        (i32.const 0)
       )
      )
      (call $_abort)
     )
    )
    (block
     (i32.store
      (i32.const 28312)
      (i32.or
       (local.get $4)
       (local.get $5)
      )
     )
     (i32.store
      (local.get $0)
      (local.get $2)
     )
     (i32.store offset=24
      (local.get $2)
      (local.get $0)
     )
     (i32.store offset=12
      (local.get $2)
      (local.get $2)
     )
     (i32.store offset=8
      (local.get $2)
      (local.get $2)
     )
    )
   )
   (i32.store
    (i32.const 28340)
    (local.tee $0
     (i32.add
      (i32.load
       (i32.const 28340)
      )
      (i32.const -1)
     )
    )
   )
   (if
    (i32.eqz
     (local.get $0)
    )
    (block
     (local.set $0
      (i32.const 28792)
     )
     (loop $while-in21
      (local.set $0
       (i32.add
        (local.tee $1
         (i32.load
          (local.get $0)
         )
        )
        (i32.const 8)
       )
      )
      (br_if $while-in21
       (local.get $1)
      )
     )
     (i32.store
      (i32.const 28340)
      (i32.const -1)
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (i32.const 28752)
     )
     (i32.const 2)
    )
   )
   (return)
  )
  (call $___pthread_mutex_unlock
   (i32.const 28756)
  )
 )
 (func $_calloc (; 670 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (if
   (local.get $0)
   (block
    (local.set $2
     (i32.mul
      (local.get $0)
      (local.get $1)
     )
    )
    (if
     (i32.gt_u
      (i32.or
       (local.get $0)
       (local.get $1)
      )
      (i32.const 65535)
     )
     (local.set $2
      (select
       (local.get $2)
       (i32.const -1)
       (i32.eq
        (local.get $1)
        (i32.div_u
         (local.get $2)
         (local.get $0)
        )
       )
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $0
     (call $_malloc
      (local.get $2)
     )
    )
   )
   (return
    (local.get $0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const -4)
      )
     )
     (i32.const 3)
    )
   )
   (return
    (local.get $0)
   )
  )
  (drop
   (call $_memset
    (local.get $0)
    (i32.const 0)
    (local.get $2)
   )
  )
  (local.get $0)
 )
 (func $_realloc (; 671 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return
    (call $_malloc
     (local.get $1)
    )
   )
  )
  (if
   (i32.gt_u
    (local.get $1)
    (i32.const -65)
   )
   (block
    (i32.store
     (call $___errno_location)
     (i32.const 12)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (if
   (i32.and
    (i32.load
     (i32.const 28752)
    )
    (i32.const 2)
   )
   (if
    (call $___pthread_mutex_lock
     (i32.const 28756)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (local.set $2
   (call $_try_realloc_chunk
    (i32.add
     (local.get $0)
     (i32.const -8)
    )
    (select
     (i32.const 16)
     (i32.and
      (i32.add
       (local.get $1)
       (i32.const 11)
      )
      (i32.const -8)
     )
     (i32.lt_u
      (local.get $1)
      (i32.const 11)
     )
    )
   )
  )
  (if
   (i32.and
    (i32.load
     (i32.const 28752)
    )
    (i32.const 2)
   )
   (call $___pthread_mutex_unlock
    (i32.const 28756)
   )
  )
  (if
   (local.get $2)
   (return
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $2
     (call $_malloc
      (local.get $1)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $_memcpy
    (local.get $2)
    (local.get $0)
    (select
     (local.tee $3
      (i32.sub
       (i32.and
        (local.tee $3
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const -4)
          )
         )
        )
        (i32.const -8)
       )
       (select
        (i32.const 4)
        (i32.const 8)
        (i32.and
         (local.get $3)
         (i32.const 3)
        )
       )
      )
     )
     (local.get $1)
     (i32.lt_u
      (local.get $3)
      (local.get $1)
     )
    )
   )
  )
  (call $_free
   (local.get $0)
  )
  (local.get $2)
 )
 (func $_try_realloc_chunk (; 672 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (if
   (i32.eqz
    (i32.and
     (i32.gt_u
      (local.tee $4
       (i32.add
        (local.get $0)
        (local.tee $2
         (i32.and
          (local.tee $7
           (i32.load offset=4
            (local.get $0)
           )
          )
          (i32.const -8)
         )
        )
       )
      )
      (local.get $0)
     )
     (i32.and
      (i32.ne
       (local.tee $8
        (i32.and
         (local.get $7)
         (i32.const 3)
        )
       )
       (i32.const 1)
      )
      (i32.le_u
       (local.tee $10
        (i32.load
         (i32.const 28324)
        )
       )
       (local.get $0)
      )
     )
    )
   )
   (call $_abort)
  )
  (if
   (i32.eqz
    (i32.and
     (local.tee $6
      (i32.load offset=4
       (local.get $4)
      )
     )
     (i32.const 1)
    )
   )
   (call $_abort)
  )
  (block $folding-inner0
   (if
    (i32.eqz
     (local.get $8)
    )
    (block
     (br_if $folding-inner0
      (i32.lt_u
       (local.get $1)
       (i32.const 256)
      )
     )
     (if
      (i32.ge_u
       (local.get $2)
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
      (if
       (i32.le_u
        (i32.sub
         (local.get $2)
         (local.get $1)
        )
        (i32.shl
         (i32.load
          (i32.const 28264)
         )
         (i32.const 1)
        )
       )
       (return
        (local.get $0)
       )
      )
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.ge_u
     (local.get $2)
     (local.get $1)
    )
    (block
     (if
      (i32.le_u
       (local.tee $3
        (i32.sub
         (local.get $2)
         (local.get $1)
        )
       )
       (i32.const 15)
      )
      (return
       (local.get $0)
      )
     )
     (i32.store offset=4
      (local.get $0)
      (i32.or
       (i32.or
        (local.get $1)
        (i32.and
         (local.get $7)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
     )
     (i32.store offset=4
      (local.tee $1
       (i32.add
        (local.get $0)
        (local.get $1)
       )
      )
      (i32.or
       (local.get $3)
       (i32.const 3)
      )
     )
     (i32.store offset=4
      (local.get $4)
      (i32.or
       (i32.load offset=4
        (local.get $4)
       )
       (i32.const 1)
      )
     )
     (call $_dispose_chunk
      (local.get $1)
      (local.get $3)
     )
     (return
      (local.get $0)
     )
    )
   )
   (if
    (i32.eq
     (i32.load
      (i32.const 28332)
     )
     (local.get $4)
    )
    (block
     (br_if $folding-inner0
      (i32.le_u
       (local.tee $3
        (i32.add
         (i32.load
          (i32.const 28320)
         )
         (local.get $2)
        )
       )
       (local.get $1)
      )
     )
     (i32.store offset=4
      (local.get $0)
      (i32.or
       (i32.or
        (local.get $1)
        (i32.and
         (local.get $7)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
     )
     (i32.store offset=4
      (local.tee $2
       (i32.add
        (local.get $0)
        (local.get $1)
       )
      )
      (i32.or
       (local.tee $1
        (i32.sub
         (local.get $3)
         (local.get $1)
        )
       )
       (i32.const 1)
      )
     )
     (i32.store
      (i32.const 28332)
      (local.get $2)
     )
     (i32.store
      (i32.const 28320)
      (local.get $1)
     )
     (return
      (local.get $0)
     )
    )
   )
   (if
    (i32.eq
     (i32.load
      (i32.const 28328)
     )
     (local.get $4)
    )
    (block
     (br_if $folding-inner0
      (i32.lt_u
       (local.tee $2
        (i32.add
         (i32.load
          (i32.const 28316)
         )
         (local.get $2)
        )
       )
       (local.get $1)
      )
     )
     (if
      (i32.gt_u
       (local.tee $3
        (i32.sub
         (local.get $2)
         (local.get $1)
        )
       )
       (i32.const 15)
      )
      (block
       (i32.store offset=4
        (local.get $0)
        (i32.or
         (i32.or
          (local.get $1)
          (i32.and
           (local.get $7)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
       )
       (i32.store offset=4
        (local.tee $1
         (i32.add
          (local.get $0)
          (local.get $1)
         )
        )
        (i32.or
         (local.get $3)
         (i32.const 1)
        )
       )
       (i32.store
        (local.tee $2
         (i32.add
          (local.get $0)
          (local.get $2)
         )
        )
        (local.get $3)
       )
       (i32.store offset=4
        (local.get $2)
        (i32.and
         (i32.load offset=4
          (local.get $2)
         )
         (i32.const -2)
        )
       )
      )
      (block
       (i32.store offset=4
        (local.get $0)
        (i32.or
         (i32.or
          (local.get $2)
          (i32.and
           (local.get $7)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
       )
       (i32.store offset=4
        (local.tee $1
         (i32.add
          (local.get $0)
          (local.get $2)
         )
        )
        (i32.or
         (i32.load offset=4
          (local.get $1)
         )
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.const 0)
       )
       (local.set $3
        (i32.const 0)
       )
      )
     )
     (i32.store
      (i32.const 28316)
      (local.get $3)
     )
     (i32.store
      (i32.const 28328)
      (local.get $1)
     )
     (return
      (local.get $0)
     )
    )
   )
   (br_if $folding-inner0
    (i32.and
     (local.get $6)
     (i32.const 2)
    )
   )
   (br_if $folding-inner0
    (i32.lt_u
     (local.tee $11
      (i32.add
       (local.get $2)
       (i32.and
        (local.get $6)
        (i32.const -8)
       )
      )
     )
     (local.get $1)
    )
   )
   (local.set $12
    (i32.sub
     (local.get $11)
     (local.get $1)
    )
   )
   (local.set $2
    (i32.shr_u
     (local.get $6)
     (i32.const 3)
    )
   )
   (block $label$break$L49
    (if
     (i32.lt_u
      (local.get $6)
      (i32.const 256)
     )
     (block
      (local.set $5
       (i32.load offset=12
        (local.get $4)
       )
      )
      (if
       (i32.ne
        (local.tee $6
         (i32.load offset=8
          (local.get $4)
         )
        )
        (local.tee $8
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 3)
          )
          (i32.const 28348)
         )
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $10)
          (local.get $6)
         )
         (call $_abort)
        )
        (if
         (i32.ne
          (local.get $4)
          (i32.load offset=12
           (local.get $6)
          )
         )
         (call $_abort)
        )
       )
      )
      (if
       (i32.eq
        (local.get $5)
        (local.get $6)
       )
       (block
        (i32.store
         (i32.const 28308)
         (i32.and
          (i32.load
           (i32.const 28308)
          )
          (i32.xor
           (i32.shl
            (i32.const 1)
            (local.get $2)
           )
           (i32.const -1)
          )
         )
        )
        (br $label$break$L49)
       )
      )
      (if
       (i32.eq
        (local.get $5)
        (local.get $8)
       )
       (local.set $3
        (i32.add
         (local.get $5)
         (i32.const 8)
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $10)
          (local.get $5)
         )
         (call $_abort)
        )
        (if
         (i32.eq
          (i32.load
           (local.tee $2
            (i32.add
             (local.get $5)
             (i32.const 8)
            )
           )
          )
          (local.get $4)
         )
         (local.set $3
          (local.get $2)
         )
         (call $_abort)
        )
       )
      )
      (i32.store offset=12
       (local.get $6)
       (local.get $5)
      )
      (i32.store
       (local.get $3)
       (local.get $6)
      )
     )
     (block
      (local.set $9
       (i32.load offset=24
        (local.get $4)
       )
      )
      (if
       (i32.eq
        (local.tee $3
         (i32.load offset=12
          (local.get $4)
         )
        )
        (local.get $4)
       )
       (block $do-once
        (if
         (local.tee $3
          (i32.load
           (local.tee $6
            (i32.add
             (local.tee $2
              (i32.add
               (local.get $4)
               (i32.const 16)
              )
             )
             (i32.const 4)
            )
           )
          )
         )
         (local.set $2
          (local.get $6)
         )
         (br_if $do-once
          (i32.eqz
           (local.tee $3
            (i32.load
             (local.get $2)
            )
           )
          )
         )
        )
        (loop $while-in
         (block $while-out
          (if
           (i32.eqz
            (local.tee $8
             (i32.load
              (local.tee $6
               (i32.add
                (local.get $3)
                (i32.const 20)
               )
              )
             )
            )
           )
           (br_if $while-out
            (i32.eqz
             (local.tee $8
              (i32.load
               (local.tee $6
                (i32.add
                 (local.get $3)
                 (i32.const 16)
                )
               )
              )
             )
            )
           )
          )
          (local.set $2
           (local.get $6)
          )
          (local.set $3
           (local.get $8)
          )
          (br $while-in)
         )
        )
        (if
         (i32.gt_u
          (local.get $10)
          (local.get $2)
         )
         (call $_abort)
         (block
          (i32.store
           (local.get $2)
           (i32.const 0)
          )
          (local.set $5
           (local.get $3)
          )
         )
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $10)
          (local.tee $2
           (i32.load offset=8
            (local.get $4)
           )
          )
         )
         (call $_abort)
        )
        (if
         (i32.ne
          (local.get $4)
          (i32.load offset=12
           (local.get $2)
          )
         )
         (call $_abort)
        )
        (if
         (i32.eq
          (i32.load offset=8
           (local.get $3)
          )
          (local.get $4)
         )
         (block
          (i32.store offset=12
           (local.get $2)
           (local.get $3)
          )
          (i32.store offset=8
           (local.get $3)
           (local.get $2)
          )
          (local.set $5
           (local.get $3)
          )
         )
         (call $_abort)
        )
       )
      )
      (if
       (local.get $9)
       (block
        (if
         (i32.eq
          (i32.load
           (local.tee $2
            (i32.add
             (i32.shl
              (local.tee $3
               (i32.load offset=28
                (local.get $4)
               )
              )
              (i32.const 2)
             )
             (i32.const 28612)
            )
           )
          )
          (local.get $4)
         )
         (block
          (i32.store
           (local.get $2)
           (local.get $5)
          )
          (if
           (i32.eqz
            (local.get $5)
           )
           (block
            (i32.store
             (i32.const 28312)
             (i32.and
              (i32.load
               (i32.const 28312)
              )
              (i32.xor
               (i32.shl
                (i32.const 1)
                (local.get $3)
               )
               (i32.const -1)
              )
             )
            )
            (br $label$break$L49)
           )
          )
         )
         (if
          (i32.gt_u
           (i32.load
            (i32.const 28324)
           )
           (local.get $9)
          )
          (call $_abort)
          (block
           (i32.store
            (select
             (local.tee $3
              (i32.add
               (local.get $9)
               (i32.const 16)
              )
             )
             (i32.add
              (local.get $9)
              (i32.const 20)
             )
             (i32.eq
              (i32.load
               (local.get $3)
              )
              (local.get $4)
             )
            )
            (local.get $5)
           )
           (br_if $label$break$L49
            (i32.eqz
             (local.get $5)
            )
           )
          )
         )
        )
        (if
         (i32.gt_u
          (local.tee $2
           (i32.load
            (i32.const 28324)
           )
          )
          (local.get $5)
         )
         (call $_abort)
        )
        (i32.store offset=24
         (local.get $5)
         (local.get $9)
        )
        (if
         (local.tee $3
          (i32.load offset=16
           (local.get $4)
          )
         )
         (if
          (i32.gt_u
           (local.get $2)
           (local.get $3)
          )
          (call $_abort)
          (block
           (i32.store offset=16
            (local.get $5)
            (local.get $3)
           )
           (i32.store offset=24
            (local.get $3)
            (local.get $5)
           )
          )
         )
        )
        (if
         (local.tee $3
          (i32.load offset=20
           (local.get $4)
          )
         )
         (if
          (i32.gt_u
           (i32.load
            (i32.const 28324)
           )
           (local.get $3)
          )
          (call $_abort)
          (block
           (i32.store offset=20
            (local.get $5)
            (local.get $3)
           )
           (i32.store offset=24
            (local.get $3)
            (local.get $5)
           )
          )
         )
        )
       )
      )
     )
    )
   )
   (if
    (i32.lt_u
     (local.get $12)
     (i32.const 16)
    )
    (block
     (i32.store offset=4
      (local.get $0)
      (i32.or
       (i32.or
        (local.get $11)
        (i32.and
         (local.get $7)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
     )
     (i32.store offset=4
      (local.tee $1
       (i32.add
        (local.get $0)
        (local.get $11)
       )
      )
      (i32.or
       (i32.load offset=4
        (local.get $1)
       )
       (i32.const 1)
      )
     )
    )
    (block
     (i32.store offset=4
      (local.get $0)
      (i32.or
       (i32.or
        (local.get $1)
        (i32.and
         (local.get $7)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
     )
     (i32.store offset=4
      (local.tee $1
       (i32.add
        (local.get $0)
        (local.get $1)
       )
      )
      (i32.or
       (local.get $12)
       (i32.const 3)
      )
     )
     (i32.store offset=4
      (local.tee $3
       (i32.add
        (local.get $0)
        (local.get $11)
       )
      )
      (i32.or
       (i32.load offset=4
        (local.get $3)
       )
       (i32.const 1)
      )
     )
     (call $_dispose_chunk
      (local.get $1)
      (local.get $12)
     )
    )
   )
   (return
    (local.get $0)
   )
  )
  (i32.const 0)
 )
 (func $_dispose_chunk (; 673 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local.set $6
   (i32.add
    (local.get $0)
    (local.get $1)
   )
  )
  (if
   (i32.and
    (local.tee $8
     (i32.load offset=4
      (local.get $0)
     )
    )
    (i32.const 1)
   )
   (block
    (local.set $2
     (local.get $0)
    )
    (local.set $4
     (local.get $1)
    )
   )
   (block $label$break$L1
    (local.set $5
     (i32.load
      (local.get $0)
     )
    )
    (if
     (i32.eqz
      (i32.and
       (local.get $8)
       (i32.const 3)
      )
     )
     (return)
    )
    (if
     (i32.lt_u
      (local.tee $0
       (i32.sub
        (local.get $0)
        (local.get $5)
       )
      )
      (local.tee $11
       (i32.load
        (i32.const 28324)
       )
      )
     )
     (call $_abort)
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (local.get $5)
     )
    )
    (if
     (i32.eq
      (i32.load
       (i32.const 28328)
      )
      (local.get $0)
     )
     (block
      (if
       (i32.ne
        (i32.and
         (local.tee $4
          (i32.load offset=4
           (local.get $6)
          )
         )
         (i32.const 3)
        )
        (i32.const 3)
       )
       (block
        (local.set $2
         (local.get $0)
        )
        (local.set $4
         (local.get $1)
        )
        (br $label$break$L1)
       )
      )
      (i32.store
       (i32.const 28316)
       (local.get $1)
      )
      (i32.store offset=4
       (local.get $6)
       (i32.and
        (local.get $4)
        (i32.const -2)
       )
      )
      (i32.store offset=4
       (local.get $0)
       (i32.or
        (local.get $1)
        (i32.const 1)
       )
      )
      (i32.store
       (local.get $6)
       (local.get $1)
      )
      (return)
     )
    )
    (local.set $8
     (i32.shr_u
      (local.get $5)
      (i32.const 3)
     )
    )
    (if
     (i32.lt_u
      (local.get $5)
      (i32.const 256)
     )
     (block
      (local.set $2
       (i32.load offset=12
        (local.get $0)
       )
      )
      (if
       (i32.ne
        (local.tee $5
         (i32.load offset=8
          (local.get $0)
         )
        )
        (local.tee $4
         (i32.add
          (i32.shl
           (local.get $8)
           (i32.const 3)
          )
          (i32.const 28348)
         )
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $11)
          (local.get $5)
         )
         (call $_abort)
        )
        (if
         (i32.ne
          (local.get $0)
          (i32.load offset=12
           (local.get $5)
          )
         )
         (call $_abort)
        )
       )
      )
      (if
       (i32.eq
        (local.get $2)
        (local.get $5)
       )
       (block
        (i32.store
         (i32.const 28308)
         (i32.and
          (i32.load
           (i32.const 28308)
          )
          (i32.xor
           (i32.shl
            (i32.const 1)
            (local.get $8)
           )
           (i32.const -1)
          )
         )
        )
        (local.set $2
         (local.get $0)
        )
        (local.set $4
         (local.get $1)
        )
        (br $label$break$L1)
       )
      )
      (if
       (i32.eq
        (local.get $2)
        (local.get $4)
       )
       (local.set $3
        (i32.add
         (local.get $2)
         (i32.const 8)
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $11)
          (local.get $2)
         )
         (call $_abort)
        )
        (if
         (i32.eq
          (i32.load
           (local.tee $4
            (i32.add
             (local.get $2)
             (i32.const 8)
            )
           )
          )
          (local.get $0)
         )
         (local.set $3
          (local.get $4)
         )
         (call $_abort)
        )
       )
      )
      (i32.store offset=12
       (local.get $5)
       (local.get $2)
      )
      (i32.store
       (local.get $3)
       (local.get $5)
      )
      (local.set $2
       (local.get $0)
      )
      (local.set $4
       (local.get $1)
      )
      (br $label$break$L1)
     )
    )
    (local.set $10
     (i32.load offset=24
      (local.get $0)
     )
    )
    (if
     (i32.eq
      (local.tee $3
       (i32.load offset=12
        (local.get $0)
       )
      )
      (local.get $0)
     )
     (block $do-once
      (if
       (local.tee $3
        (i32.load
         (local.tee $8
          (i32.add
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 16)
            )
           )
           (i32.const 4)
          )
         )
        )
       )
       (local.set $5
        (local.get $8)
       )
       (br_if $do-once
        (i32.eqz
         (local.tee $3
          (i32.load
           (local.get $5)
          )
         )
        )
       )
      )
      (loop $while-in
       (block $while-out
        (if
         (i32.eqz
          (local.tee $12
           (i32.load
            (local.tee $8
             (i32.add
              (local.get $3)
              (i32.const 20)
             )
            )
           )
          )
         )
         (br_if $while-out
          (i32.eqz
           (local.tee $12
            (i32.load
             (local.tee $8
              (i32.add
               (local.get $3)
               (i32.const 16)
              )
             )
            )
           )
          )
         )
        )
        (local.set $5
         (local.get $8)
        )
        (local.set $3
         (local.get $12)
        )
        (br $while-in)
       )
      )
      (if
       (i32.gt_u
        (local.get $11)
        (local.get $5)
       )
       (call $_abort)
       (block
        (i32.store
         (local.get $5)
         (i32.const 0)
        )
        (local.set $7
         (local.get $3)
        )
       )
      )
     )
     (block
      (if
       (i32.gt_u
        (local.get $11)
        (local.tee $5
         (i32.load offset=8
          (local.get $0)
         )
        )
       )
       (call $_abort)
      )
      (if
       (i32.ne
        (local.get $0)
        (i32.load offset=12
         (local.get $5)
        )
       )
       (call $_abort)
      )
      (if
       (i32.eq
        (i32.load offset=8
         (local.get $3)
        )
        (local.get $0)
       )
       (block
        (i32.store offset=12
         (local.get $5)
         (local.get $3)
        )
        (i32.store offset=8
         (local.get $3)
         (local.get $5)
        )
        (local.set $7
         (local.get $3)
        )
       )
       (call $_abort)
      )
     )
    )
    (if
     (local.get $10)
     (block
      (if
       (i32.eq
        (i32.load
         (local.tee $5
          (i32.add
           (i32.shl
            (local.tee $3
             (i32.load offset=28
              (local.get $0)
             )
            )
            (i32.const 2)
           )
           (i32.const 28612)
          )
         )
        )
        (local.get $0)
       )
       (block
        (i32.store
         (local.get $5)
         (local.get $7)
        )
        (if
         (i32.eqz
          (local.get $7)
         )
         (block
          (i32.store
           (i32.const 28312)
           (i32.and
            (i32.load
             (i32.const 28312)
            )
            (i32.xor
             (i32.shl
              (i32.const 1)
              (local.get $3)
             )
             (i32.const -1)
            )
           )
          )
          (local.set $2
           (local.get $0)
          )
          (local.set $4
           (local.get $1)
          )
          (br $label$break$L1)
         )
        )
       )
       (if
        (i32.gt_u
         (i32.load
          (i32.const 28324)
         )
         (local.get $10)
        )
        (call $_abort)
        (block
         (i32.store
          (select
           (local.tee $3
            (i32.add
             (local.get $10)
             (i32.const 16)
            )
           )
           (i32.add
            (local.get $10)
            (i32.const 20)
           )
           (i32.eq
            (i32.load
             (local.get $3)
            )
            (local.get $0)
           )
          )
          (local.get $7)
         )
         (if
          (i32.eqz
           (local.get $7)
          )
          (block
           (local.set $2
            (local.get $0)
           )
           (local.set $4
            (local.get $1)
           )
           (br $label$break$L1)
          )
         )
        )
       )
      )
      (if
       (i32.gt_u
        (local.tee $5
         (i32.load
          (i32.const 28324)
         )
        )
        (local.get $7)
       )
       (call $_abort)
      )
      (i32.store offset=24
       (local.get $7)
       (local.get $10)
      )
      (if
       (local.tee $3
        (i32.load offset=16
         (local.get $0)
        )
       )
       (if
        (i32.gt_u
         (local.get $5)
         (local.get $3)
        )
        (call $_abort)
        (block
         (i32.store offset=16
          (local.get $7)
          (local.get $3)
         )
         (i32.store offset=24
          (local.get $3)
          (local.get $7)
         )
        )
       )
      )
      (if
       (local.tee $3
        (i32.load offset=20
         (local.get $0)
        )
       )
       (if
        (i32.gt_u
         (i32.load
          (i32.const 28324)
         )
         (local.get $3)
        )
        (call $_abort)
        (block
         (i32.store offset=20
          (local.get $7)
          (local.get $3)
         )
         (i32.store offset=24
          (local.get $3)
          (local.get $7)
         )
         (local.set $2
          (local.get $0)
         )
         (local.set $4
          (local.get $1)
         )
        )
       )
       (block
        (local.set $2
         (local.get $0)
        )
        (local.set $4
         (local.get $1)
        )
       )
      )
     )
     (block
      (local.set $2
       (local.get $0)
      )
      (local.set $4
       (local.get $1)
      )
     )
    )
   )
  )
  (if
   (i32.lt_u
    (local.get $6)
    (local.tee $8
     (i32.load
      (i32.const 28324)
     )
    )
   )
   (call $_abort)
  )
  (if
   (i32.and
    (local.tee $0
     (i32.load offset=4
      (local.get $6)
     )
    )
    (i32.const 2)
   )
   (block
    (i32.store offset=4
     (local.get $6)
     (i32.and
      (local.get $0)
      (i32.const -2)
     )
    )
    (i32.store offset=4
     (local.get $2)
     (i32.or
      (local.get $4)
      (i32.const 1)
     )
    )
    (i32.store
     (i32.add
      (local.get $2)
      (local.get $4)
     )
     (local.get $4)
    )
   )
   (block
    (if
     (i32.eq
      (i32.load
       (i32.const 28332)
      )
      (local.get $6)
     )
     (block
      (i32.store
       (i32.const 28320)
       (local.tee $0
        (i32.add
         (i32.load
          (i32.const 28320)
         )
         (local.get $4)
        )
       )
      )
      (i32.store
       (i32.const 28332)
       (local.get $2)
      )
      (i32.store offset=4
       (local.get $2)
       (i32.or
        (local.get $0)
        (i32.const 1)
       )
      )
      (if
       (i32.ne
        (local.get $2)
        (i32.load
         (i32.const 28328)
        )
       )
       (return)
      )
      (i32.store
       (i32.const 28328)
       (i32.const 0)
      )
      (i32.store
       (i32.const 28316)
       (i32.const 0)
      )
      (return)
     )
    )
    (if
     (i32.eq
      (i32.load
       (i32.const 28328)
      )
      (local.get $6)
     )
     (block
      (i32.store
       (i32.const 28316)
       (local.tee $0
        (i32.add
         (i32.load
          (i32.const 28316)
         )
         (local.get $4)
        )
       )
      )
      (i32.store
       (i32.const 28328)
       (local.get $2)
      )
      (i32.store offset=4
       (local.get $2)
       (i32.or
        (local.get $0)
        (i32.const 1)
       )
      )
      (i32.store
       (i32.add
        (local.get $0)
        (local.get $2)
       )
       (local.get $0)
      )
      (return)
     )
    )
    (local.set $4
     (i32.add
      (i32.and
       (local.get $0)
       (i32.const -8)
      )
      (local.get $4)
     )
    )
    (local.set $5
     (i32.shr_u
      (local.get $0)
      (i32.const 3)
     )
    )
    (block $label$break$L99
     (if
      (i32.lt_u
       (local.get $0)
       (i32.const 256)
      )
      (block
       (local.set $1
        (i32.load offset=12
         (local.get $6)
        )
       )
       (if
        (i32.ne
         (local.tee $3
          (i32.load offset=8
           (local.get $6)
          )
         )
         (local.tee $0
          (i32.add
           (i32.shl
            (local.get $5)
            (i32.const 3)
           )
           (i32.const 28348)
          )
         )
        )
        (block
         (if
          (i32.gt_u
           (local.get $8)
           (local.get $3)
          )
          (call $_abort)
         )
         (if
          (i32.ne
           (local.get $6)
           (i32.load offset=12
            (local.get $3)
           )
          )
          (call $_abort)
         )
        )
       )
       (if
        (i32.eq
         (local.get $1)
         (local.get $3)
        )
        (block
         (i32.store
          (i32.const 28308)
          (i32.and
           (i32.load
            (i32.const 28308)
           )
           (i32.xor
            (i32.shl
             (i32.const 1)
             (local.get $5)
            )
            (i32.const -1)
           )
          )
         )
         (br $label$break$L99)
        )
       )
       (if
        (i32.eq
         (local.get $0)
         (local.get $1)
        )
        (local.set $14
         (i32.add
          (local.get $1)
          (i32.const 8)
         )
        )
        (block
         (if
          (i32.gt_u
           (local.get $8)
           (local.get $1)
          )
          (call $_abort)
         )
         (if
          (i32.eq
           (i32.load
            (local.tee $0
             (i32.add
              (local.get $1)
              (i32.const 8)
             )
            )
           )
           (local.get $6)
          )
          (local.set $14
           (local.get $0)
          )
          (call $_abort)
         )
        )
       )
       (i32.store offset=12
        (local.get $3)
        (local.get $1)
       )
       (i32.store
        (local.get $14)
        (local.get $3)
       )
      )
      (block
       (local.set $7
        (i32.load offset=24
         (local.get $6)
        )
       )
       (if
        (i32.eq
         (local.tee $0
          (i32.load offset=12
           (local.get $6)
          )
         )
         (local.get $6)
        )
        (block $do-once6
         (if
          (local.tee $0
           (i32.load
            (local.tee $3
             (i32.add
              (local.tee $1
               (i32.add
                (local.get $6)
                (i32.const 16)
               )
              )
              (i32.const 4)
             )
            )
           )
          )
          (local.set $1
           (local.get $3)
          )
          (br_if $do-once6
           (i32.eqz
            (local.tee $0
             (i32.load
              (local.get $1)
             )
            )
           )
          )
         )
         (loop $while-in9
          (block $while-out8
           (if
            (i32.eqz
             (local.tee $5
              (i32.load
               (local.tee $3
                (i32.add
                 (local.get $0)
                 (i32.const 20)
                )
               )
              )
             )
            )
            (br_if $while-out8
             (i32.eqz
              (local.tee $5
               (i32.load
                (local.tee $3
                 (i32.add
                  (local.get $0)
                  (i32.const 16)
                 )
                )
               )
              )
             )
            )
           )
           (local.set $1
            (local.get $3)
           )
           (local.set $0
            (local.get $5)
           )
           (br $while-in9)
          )
         )
         (if
          (i32.gt_u
           (local.get $8)
           (local.get $1)
          )
          (call $_abort)
          (block
           (i32.store
            (local.get $1)
            (i32.const 0)
           )
           (local.set $9
            (local.get $0)
           )
          )
         )
        )
        (block
         (if
          (i32.gt_u
           (local.get $8)
           (local.tee $1
            (i32.load offset=8
             (local.get $6)
            )
           )
          )
          (call $_abort)
         )
         (if
          (i32.ne
           (local.get $6)
           (i32.load offset=12
            (local.get $1)
           )
          )
          (call $_abort)
         )
         (if
          (i32.eq
           (i32.load offset=8
            (local.get $0)
           )
           (local.get $6)
          )
          (block
           (i32.store offset=12
            (local.get $1)
            (local.get $0)
           )
           (i32.store offset=8
            (local.get $0)
            (local.get $1)
           )
           (local.set $9
            (local.get $0)
           )
          )
          (call $_abort)
         )
        )
       )
       (if
        (local.get $7)
        (block
         (if
          (i32.eq
           (i32.load
            (local.tee $1
             (i32.add
              (i32.shl
               (local.tee $0
                (i32.load offset=28
                 (local.get $6)
                )
               )
               (i32.const 2)
              )
              (i32.const 28612)
             )
            )
           )
           (local.get $6)
          )
          (block
           (i32.store
            (local.get $1)
            (local.get $9)
           )
           (if
            (i32.eqz
             (local.get $9)
            )
            (block
             (i32.store
              (i32.const 28312)
              (i32.and
               (i32.load
                (i32.const 28312)
               )
               (i32.xor
                (i32.shl
                 (i32.const 1)
                 (local.get $0)
                )
                (i32.const -1)
               )
              )
             )
             (br $label$break$L99)
            )
           )
          )
          (if
           (i32.gt_u
            (i32.load
             (i32.const 28324)
            )
            (local.get $7)
           )
           (call $_abort)
           (block
            (i32.store
             (select
              (local.tee $0
               (i32.add
                (local.get $7)
                (i32.const 16)
               )
              )
              (i32.add
               (local.get $7)
               (i32.const 20)
              )
              (i32.eq
               (i32.load
                (local.get $0)
               )
               (local.get $6)
              )
             )
             (local.get $9)
            )
            (br_if $label$break$L99
             (i32.eqz
              (local.get $9)
             )
            )
           )
          )
         )
         (if
          (i32.gt_u
           (local.tee $1
            (i32.load
             (i32.const 28324)
            )
           )
           (local.get $9)
          )
          (call $_abort)
         )
         (i32.store offset=24
          (local.get $9)
          (local.get $7)
         )
         (if
          (local.tee $0
           (i32.load offset=16
            (local.get $6)
           )
          )
          (if
           (i32.gt_u
            (local.get $1)
            (local.get $0)
           )
           (call $_abort)
           (block
            (i32.store offset=16
             (local.get $9)
             (local.get $0)
            )
            (i32.store offset=24
             (local.get $0)
             (local.get $9)
            )
           )
          )
         )
         (if
          (local.tee $0
           (i32.load offset=20
            (local.get $6)
           )
          )
          (if
           (i32.gt_u
            (i32.load
             (i32.const 28324)
            )
            (local.get $0)
           )
           (call $_abort)
           (block
            (i32.store offset=20
             (local.get $9)
             (local.get $0)
            )
            (i32.store offset=24
             (local.get $0)
             (local.get $9)
            )
           )
          )
         )
        )
       )
      )
     )
    )
    (i32.store offset=4
     (local.get $2)
     (i32.or
      (local.get $4)
      (i32.const 1)
     )
    )
    (i32.store
     (i32.add
      (local.get $2)
      (local.get $4)
     )
     (local.get $4)
    )
    (if
     (i32.eq
      (i32.load
       (i32.const 28328)
      )
      (local.get $2)
     )
     (block
      (i32.store
       (i32.const 28316)
       (local.get $4)
      )
      (return)
     )
    )
   )
  )
  (local.set $1
   (i32.shr_u
    (local.get $4)
    (i32.const 3)
   )
  )
  (if
   (i32.lt_u
    (local.get $4)
    (i32.const 256)
   )
   (block
    (local.set $0
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 3)
      )
      (i32.const 28348)
     )
    )
    (if
     (i32.and
      (local.tee $4
       (i32.load
        (i32.const 28308)
       )
      )
      (local.tee $1
       (i32.shl
        (i32.const 1)
        (local.get $1)
       )
      )
     )
     (if
      (i32.gt_u
       (i32.load
        (i32.const 28324)
       )
       (local.tee $4
        (i32.load
         (local.tee $1
          (i32.add
           (local.get $0)
           (i32.const 8)
          )
         )
        )
       )
      )
      (call $_abort)
      (block
       (local.set $15
        (local.get $1)
       )
       (local.set $13
        (local.get $4)
       )
      )
     )
     (block
      (i32.store
       (i32.const 28308)
       (i32.or
        (local.get $1)
        (local.get $4)
       )
      )
      (local.set $15
       (i32.add
        (local.get $0)
        (i32.const 8)
       )
      )
      (local.set $13
       (local.get $0)
      )
     )
    )
    (i32.store
     (local.get $15)
     (local.get $2)
    )
    (i32.store offset=12
     (local.get $13)
     (local.get $2)
    )
    (i32.store offset=8
     (local.get $2)
     (local.get $13)
    )
    (i32.store offset=12
     (local.get $2)
     (local.get $0)
    )
    (return)
   )
  )
  (local.set $0
   (i32.add
    (i32.shl
     (local.tee $1
      (if (result i32)
       (local.tee $0
        (i32.shr_u
         (local.get $4)
         (i32.const 8)
        )
       )
       (if (result i32)
        (i32.gt_u
         (local.get $4)
         (i32.const 16777215)
        )
        (i32.const 31)
        (block (result i32)
         (local.set $0
          (i32.and
           (i32.shr_u
            (i32.add
             (local.tee $1
              (i32.shl
               (local.get $0)
               (local.tee $3
                (i32.and
                 (i32.shr_u
                  (i32.add
                   (local.get $0)
                   (i32.const 1048320)
                  )
                  (i32.const 16)
                 )
                 (i32.const 8)
                )
               )
              )
             )
             (i32.const 520192)
            )
            (i32.const 16)
           )
           (i32.const 4)
          )
         )
         (local.set $1
          (i32.and
           (i32.shr_u
            (i32.add
             (local.tee $5
              (i32.shl
               (local.get $1)
               (local.get $0)
              )
             )
             (i32.const 245760)
            )
            (i32.const 16)
           )
           (i32.const 2)
          )
         )
         (i32.or
          (i32.and
           (i32.shr_u
            (local.get $4)
            (i32.add
             (local.tee $0
              (i32.add
               (i32.sub
                (i32.const 14)
                (i32.or
                 (i32.or
                  (local.get $0)
                  (local.get $3)
                 )
                 (local.get $1)
                )
               )
               (i32.shr_u
                (i32.shl
                 (local.get $5)
                 (local.get $1)
                )
                (i32.const 15)
               )
              )
             )
             (i32.const 7)
            )
           )
           (i32.const 1)
          )
          (i32.shl
           (local.get $0)
           (i32.const 1)
          )
         )
        )
       )
       (i32.const 0)
      )
     )
     (i32.const 2)
    )
    (i32.const 28612)
   )
  )
  (i32.store offset=28
   (local.get $2)
   (local.get $1)
  )
  (i32.store offset=20
   (local.get $2)
   (i32.const 0)
  )
  (i32.store offset=16
   (local.get $2)
   (i32.const 0)
  )
  (block $folding-inner0
   (if
    (i32.eqz
     (i32.and
      (local.tee $3
       (i32.load
        (i32.const 28312)
       )
      )
      (local.tee $5
       (i32.shl
        (i32.const 1)
        (local.get $1)
       )
      )
     )
    )
    (block
     (i32.store
      (i32.const 28312)
      (i32.or
       (local.get $3)
       (local.get $5)
      )
     )
     (i32.store
      (local.get $0)
      (local.get $2)
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.ne
     (local.get $4)
     (i32.and
      (i32.load offset=4
       (local.tee $0
        (i32.load
         (local.get $0)
        )
       )
      )
      (i32.const -8)
     )
    )
    (block $label$break$L189
     (local.set $3
      (i32.shl
       (local.get $4)
       (select
        (i32.const 0)
        (i32.sub
         (i32.const 25)
         (i32.shr_u
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.eq
         (local.get $1)
         (i32.const 31)
        )
       )
      )
     )
     (loop $while-in16
      (if
       (local.tee $1
        (i32.load
         (local.tee $5
          (i32.add
           (i32.add
            (local.get $0)
            (i32.const 16)
           )
           (i32.shl
            (i32.shr_u
             (local.get $3)
             (i32.const 31)
            )
            (i32.const 2)
           )
          )
         )
        )
       )
       (block
        (local.set $3
         (i32.shl
          (local.get $3)
          (i32.const 1)
         )
        )
        (if
         (i32.eq
          (i32.and
           (i32.load offset=4
            (local.get $1)
           )
           (i32.const -8)
          )
          (local.get $4)
         )
         (block
          (local.set $0
           (local.get $1)
          )
          (br $label$break$L189)
         )
         (block
          (local.set $0
           (local.get $1)
          )
          (br $while-in16)
         )
        )
       )
      )
     )
     (if
      (i32.gt_u
       (i32.load
        (i32.const 28324)
       )
       (local.get $5)
      )
      (call $_abort)
     )
     (i32.store
      (local.get $5)
      (local.get $2)
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.eqz
     (i32.and
      (i32.le_u
       (local.tee $1
        (i32.load
         (i32.const 28324)
        )
       )
       (local.get $0)
      )
      (i32.le_u
       (local.get $1)
       (local.tee $4
        (i32.load offset=8
         (local.tee $1
          (local.get $0)
         )
        )
       )
      )
     )
    )
    (call $_abort)
   )
   (i32.store offset=12
    (local.get $4)
    (local.get $2)
   )
   (i32.store offset=8
    (local.get $1)
    (local.get $2)
   )
   (i32.store offset=8
    (local.get $2)
    (local.get $4)
   )
   (i32.store offset=12
    (local.get $2)
    (local.get $0)
   )
   (i32.store offset=24
    (local.get $2)
    (i32.const 0)
   )
   (return)
  )
  (i32.store offset=24
   (local.get $2)
   (local.get $0)
  )
  (i32.store offset=12
   (local.get $2)
   (local.get $2)
  )
  (i32.store offset=8
   (local.get $2)
   (local.get $2)
  )
 )
 (func $_memalign (; 674 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (i32.lt_u
    (local.get $0)
    (i32.const 9)
   )
   (call $_malloc
    (local.get $1)
   )
   (call $_internal_memalign
    (local.get $0)
    (local.get $1)
   )
  )
 )
 (func $_internal_memalign (; 675 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.and
    (local.tee $3
     (select
      (local.get $0)
      (i32.const 16)
      (i32.gt_u
       (local.get $0)
       (i32.const 16)
      )
     )
    )
    (i32.add
     (local.get $3)
     (i32.const -1)
    )
   )
   (block
    (local.set $0
     (i32.const 16)
    )
    (loop $while-in
     (local.set $2
      (i32.shl
       (local.get $0)
       (i32.const 1)
      )
     )
     (if
      (i32.lt_u
       (local.get $0)
       (local.get $3)
      )
      (block
       (local.set $0
        (local.get $2)
       )
       (br $while-in)
      )
     )
    )
   )
   (local.set $0
    (local.get $3)
   )
  )
  (if
   (i32.le_u
    (i32.sub
     (i32.const -64)
     (local.get $0)
    )
    (local.get $1)
   )
   (block
    (i32.store
     (call $___errno_location)
     (i32.const 12)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $1
     (call $_malloc
      (i32.add
       (i32.add
        (local.tee $3
         (select
          (i32.const 16)
          (i32.and
           (i32.add
            (local.get $1)
            (i32.const 11)
           )
           (i32.const -8)
          )
          (i32.lt_u
           (local.get $1)
           (i32.const 11)
          )
         )
        )
        (i32.const 12)
       )
       (local.get $0)
      )
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (i32.and
    (i32.load
     (i32.const 28752)
    )
    (i32.const 2)
   )
   (if
    (call $___pthread_mutex_lock
     (i32.const 28756)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (local.set $2
   (i32.add
    (local.get $1)
    (i32.const -8)
   )
  )
  (local.set $1
   (if (result i32)
    (i32.and
     (local.get $1)
     (i32.add
      (local.get $0)
      (i32.const -1)
     )
    )
    (block (result i32)
     (local.set $4
      (i32.sub
       (i32.and
        (local.tee $6
         (i32.load
          (local.tee $5
           (i32.add
            (local.get $1)
            (i32.const -4)
           )
          )
         )
        )
        (i32.const -8)
       )
       (local.tee $1
        (i32.sub
         (local.tee $0
          (select
           (local.tee $1
            (i32.add
             (i32.and
              (i32.add
               (i32.add
                (local.get $0)
                (local.get $1)
               )
               (i32.const -1)
              )
              (i32.sub
               (i32.const 0)
               (local.get $0)
              )
             )
             (i32.const -8)
            )
           )
           (i32.add
            (local.get $0)
            (local.get $1)
           )
           (i32.gt_u
            (i32.sub
             (local.get $1)
             (local.get $2)
            )
            (i32.const 15)
           )
          )
         )
         (local.get $2)
        )
       )
      )
     )
     (if
      (i32.and
       (local.get $6)
       (i32.const 3)
      )
      (block
       (i32.store offset=4
        (local.get $0)
        (i32.or
         (i32.or
          (i32.and
           (i32.load offset=4
            (local.get $0)
           )
           (i32.const 1)
          )
          (local.get $4)
         )
         (i32.const 2)
        )
       )
       (i32.store offset=4
        (local.tee $4
         (i32.add
          (local.get $0)
          (local.get $4)
         )
        )
        (i32.or
         (i32.load offset=4
          (local.get $4)
         )
         (i32.const 1)
        )
       )
       (i32.store
        (local.get $5)
        (i32.or
         (i32.or
          (i32.and
           (i32.load
            (local.get $5)
           )
           (i32.const 1)
          )
          (local.get $1)
         )
         (i32.const 2)
        )
       )
       (i32.store offset=4
        (local.get $0)
        (i32.or
         (i32.load offset=4
          (local.get $0)
         )
         (i32.const 1)
        )
       )
       (call $_dispose_chunk
        (local.get $2)
        (local.get $1)
       )
      )
      (block
       (i32.store
        (local.get $0)
        (i32.add
         (i32.load
          (local.get $2)
         )
         (local.get $1)
        )
       )
       (i32.store offset=4
        (local.get $0)
        (local.get $4)
       )
      )
     )
     (local.get $0)
    )
    (local.tee $0
     (local.get $2)
    )
   )
  )
  (if
   (i32.and
    (local.tee $2
     (i32.load offset=4
      (local.get $0)
     )
    )
    (i32.const 3)
   )
   (if
    (i32.gt_u
     (local.tee $4
      (i32.and
       (local.get $2)
       (i32.const -8)
      )
     )
     (i32.add
      (local.get $3)
      (i32.const 16)
     )
    )
    (block
     (i32.store offset=4
      (local.get $0)
      (i32.or
       (i32.or
        (i32.and
         (local.get $2)
         (i32.const 1)
        )
        (local.get $3)
       )
       (i32.const 2)
      )
     )
     (i32.store offset=4
      (local.tee $0
       (i32.add
        (local.get $1)
        (local.get $3)
       )
      )
      (i32.or
       (local.tee $2
        (i32.sub
         (local.get $4)
         (local.get $3)
        )
       )
       (i32.const 3)
      )
     )
     (i32.store offset=4
      (local.tee $3
       (i32.add
        (local.get $1)
        (local.get $4)
       )
      )
      (i32.or
       (i32.load offset=4
        (local.get $3)
       )
       (i32.const 1)
      )
     )
     (call $_dispose_chunk
      (local.get $0)
      (local.get $2)
     )
    )
   )
  )
  (local.set $0
   (i32.add
    (local.get $1)
    (i32.const 8)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (i32.const 28752)
     )
     (i32.const 2)
    )
   )
   (return
    (local.get $0)
   )
  )
  (call $___pthread_mutex_unlock
   (i32.const 28756)
  )
  (local.get $0)
 )
 (func $_emscripten_glBlendColor$legalf32 (; 676 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (param $2 f32) (param $3 f32)
  (call $_emscripten_glBlendColor
   (f64.promote_f32
    (local.get $0)
   )
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
   (f64.promote_f32
    (local.get $3)
   )
  )
 )
 (func $_emscripten_glClearColor$legalf32 (; 677 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (param $2 f32) (param $3 f32)
  (call $_emscripten_glClearColor
   (f64.promote_f32
    (local.get $0)
   )
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
   (f64.promote_f32
    (local.get $3)
   )
  )
 )
 (func $_emscripten_glClearDepthf$legalf32 (; 678 ;) (; has Stack IR ;) (param $0 f32)
  (call $_emscripten_glClearDepthf
   (f64.promote_f32
    (local.get $0)
   )
  )
 )
 (func $_emscripten_glDepthRangef$legalf32 (; 679 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32)
  (call $_emscripten_glDepthRangef
   (f64.promote_f32
    (local.get $0)
   )
   (f64.promote_f32
    (local.get $1)
   )
  )
 )
 (func $_emscripten_glLineWidth$legalf32 (; 680 ;) (; has Stack IR ;) (param $0 f32)
  (call $_emscripten_glLineWidth
   (f64.promote_f32
    (local.get $0)
   )
  )
 )
 (func $_emscripten_glPolygonOffset$legalf32 (; 681 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32)
  (call $_emscripten_glPolygonOffset
   (f64.promote_f32
    (local.get $0)
   )
   (f64.promote_f32
    (local.get $1)
   )
  )
 )
 (func $_emscripten_glSampleCoverage$legalf32 (; 682 ;) (; has Stack IR ;) (param $0 f32) (param $1 i32)
  (call $_emscripten_glSampleCoverage
   (f64.promote_f32
    (local.get $0)
   )
   (local.get $1)
  )
 )
 (func $_emscripten_glTexParameterf$legalf32 (; 683 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32)
  (call $_emscripten_glTexParameterf
   (local.get $0)
   (local.get $1)
   (f64.promote_f32
    (local.get $2)
   )
  )
 )
 (func $_emscripten_glUniform1f$legalf32 (; 684 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32)
  (call $_emscripten_glUniform1f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
  )
 )
 (func $_emscripten_glUniform2f$legalf32 (; 685 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32)
  (call $_emscripten_glUniform2f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
  )
 )
 (func $_emscripten_glUniform3f$legalf32 (; 686 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32)
  (call $_emscripten_glUniform3f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
   (f64.promote_f32
    (local.get $3)
   )
  )
 )
 (func $_emscripten_glUniform4f$legalf32 (; 687 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32) (param $4 f32)
  (call $_emscripten_glUniform4f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
   (f64.promote_f32
    (local.get $3)
   )
   (f64.promote_f32
    (local.get $4)
   )
  )
 )
 (func $_emscripten_glVertexAttrib1f$legalf32 (; 688 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32)
  (call $_emscripten_glVertexAttrib1f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
  )
 )
 (func $_emscripten_glVertexAttrib2f$legalf32 (; 689 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32)
  (call $_emscripten_glVertexAttrib2f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
  )
 )
 (func $_emscripten_glVertexAttrib3f$legalf32 (; 690 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32)
  (call $_emscripten_glVertexAttrib3f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
   (f64.promote_f32
    (local.get $3)
   )
  )
 )
 (func $_emscripten_glVertexAttrib4f$legalf32 (; 691 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32) (param $4 f32)
  (call $_emscripten_glVertexAttrib4f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
   (f64.promote_f32
    (local.get $3)
   )
   (f64.promote_f32
    (local.get $4)
   )
  )
 )
 (func $__register_pthread_ptr (; 692 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (global.set $__pthread_ptr
   (local.get $0)
  )
  (global.set $__pthread_is_main_browser_thread
   (local.get $1)
  )
  (global.set $__pthread_is_main_runtime_thread
   (local.get $2)
  )
 )
 (func $_emscripten_is_main_browser_thread (; 693 ;) (; has Stack IR ;) (result i32)
  (global.get $__pthread_is_main_browser_thread)
 )
 (func $_emscripten_set_current_thread_status (; 694 ;) (; has Stack IR ;) (param $0 i32)
  (nop)
 )
 (func $_llvm_round_f32 (; 695 ;) (; has Stack IR ;) (param $0 f64) (result f64)
  (select
   (f64.floor
    (f64.add
     (local.get $0)
     (f64.const 0.5)
    )
   )
   (f64.ceil
    (f64.sub
     (local.get $0)
     (f64.const 0.5)
    )
   )
   (f64.ge
    (local.get $0)
    (f64.const 0)
   )
  )
 )
 (func $_memcpy (; 696 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (if
   (i32.ge_s
    (local.get $2)
    (i32.const 8192)
   )
   (block
    (drop
     (call $_emscripten_memcpy_big
      (local.get $0)
      (local.get $1)
      (local.get $2)
     )
    )
    (return
     (local.get $0)
    )
   )
  )
  (local.set $4
   (local.get $0)
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (local.get $2)
   )
  )
  (if
   (i32.eq
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.and
     (local.get $1)
     (i32.const 3)
    )
   )
   (block
    (loop $while-in
     (if
      (i32.and
       (local.get $0)
       (i32.const 3)
      )
      (block
       (if
        (i32.eqz
         (local.get $2)
        )
        (return
         (local.get $4)
        )
       )
       (i32.store8
        (local.get $0)
        (i32.load8_s
         (local.get $1)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $2
        (i32.sub
         (local.get $2)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $5
     (i32.add
      (local.tee $2
       (i32.and
        (local.get $3)
        (i32.const -4)
       )
      )
      (i32.const -64)
     )
    )
    (loop $while-in1
     (if
      (i32.le_s
       (local.get $0)
       (local.get $5)
      )
      (block
       (i32.store
        (local.get $0)
        (i32.load
         (local.get $1)
        )
       )
       (i32.store offset=4
        (local.get $0)
        (i32.load offset=4
         (local.get $1)
        )
       )
       (i32.store offset=8
        (local.get $0)
        (i32.load offset=8
         (local.get $1)
        )
       )
       (i32.store offset=12
        (local.get $0)
        (i32.load offset=12
         (local.get $1)
        )
       )
       (i32.store offset=16
        (local.get $0)
        (i32.load offset=16
         (local.get $1)
        )
       )
       (i32.store offset=20
        (local.get $0)
        (i32.load offset=20
         (local.get $1)
        )
       )
       (i32.store offset=24
        (local.get $0)
        (i32.load offset=24
         (local.get $1)
        )
       )
       (i32.store offset=28
        (local.get $0)
        (i32.load offset=28
         (local.get $1)
        )
       )
       (i32.store offset=32
        (local.get $0)
        (i32.load offset=32
         (local.get $1)
        )
       )
       (i32.store offset=36
        (local.get $0)
        (i32.load offset=36
         (local.get $1)
        )
       )
       (i32.store offset=40
        (local.get $0)
        (i32.load offset=40
         (local.get $1)
        )
       )
       (i32.store offset=44
        (local.get $0)
        (i32.load offset=44
         (local.get $1)
        )
       )
       (i32.store offset=48
        (local.get $0)
        (i32.load offset=48
         (local.get $1)
        )
       )
       (i32.store offset=52
        (local.get $0)
        (i32.load offset=52
         (local.get $1)
        )
       )
       (i32.store offset=56
        (local.get $0)
        (i32.load offset=56
         (local.get $1)
        )
       )
       (i32.store offset=60
        (local.get $0)
        (i32.load offset=60
         (local.get $1)
        )
       )
       (local.set $0
        (i32.sub
         (local.get $0)
         (i32.const -64)
        )
       )
       (local.set $1
        (i32.sub
         (local.get $1)
         (i32.const -64)
        )
       )
       (br $while-in1)
      )
     )
    )
    (loop $while-in3
     (if
      (i32.lt_s
       (local.get $0)
       (local.get $2)
      )
      (block
       (i32.store
        (local.get $0)
        (i32.load
         (local.get $1)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (br $while-in3)
      )
     )
    )
   )
   (block
    (local.set $2
     (i32.sub
      (local.get $3)
      (i32.const 4)
     )
    )
    (loop $while-in5
     (if
      (i32.lt_s
       (local.get $0)
       (local.get $2)
      )
      (block
       (i32.store8
        (local.get $0)
        (i32.load8_s
         (local.get $1)
        )
       )
       (i32.store8 offset=1
        (local.get $0)
        (i32.load8_s offset=1
         (local.get $1)
        )
       )
       (i32.store8 offset=2
        (local.get $0)
        (i32.load8_s offset=2
         (local.get $1)
        )
       )
       (i32.store8 offset=3
        (local.get $0)
        (i32.load8_s offset=3
         (local.get $1)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (br $while-in5)
      )
     )
    )
   )
  )
  (loop $while-in7
   (if
    (i32.lt_s
     (local.get $0)
     (local.get $3)
    )
    (block
     (i32.store8
      (local.get $0)
      (i32.load8_s
       (local.get $1)
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (local.get $4)
 )
 (func $_memmove (; 697 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (if
   (i32.and
    (i32.lt_s
     (local.get $1)
     (local.get $0)
    )
    (i32.lt_s
     (local.get $0)
     (i32.add
      (local.get $1)
      (local.get $2)
     )
    )
   )
   (block
    (local.set $3
     (local.get $0)
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (local.get $2)
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (local.get $2)
     )
    )
    (loop $while-in
     (if
      (i32.gt_s
       (local.get $2)
       (i32.const 0)
      )
      (block
       (local.set $2
        (i32.sub
         (local.get $2)
         (i32.const 1)
        )
       )
       (i32.store8
        (local.tee $0
         (i32.sub
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.load8_s
         (local.tee $1
          (i32.sub
           (local.get $1)
           (i32.const 1)
          )
         )
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $0
     (local.get $3)
    )
   )
   (drop
    (call $_memcpy
     (local.get $0)
     (local.get $1)
     (local.get $2)
    )
   )
  )
  (local.get $0)
 )
 (func $_memset (; 698 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $4
   (i32.add
    (local.get $0)
    (local.get $2)
   )
  )
  (local.set $3
   (i32.and
    (local.get $1)
    (i32.const 255)
   )
  )
  (if
   (i32.ge_s
    (local.get $2)
    (i32.const 67)
   )
   (block
    (loop $while-in
     (if
      (i32.and
       (local.get $0)
       (i32.const 3)
      )
      (block
       (i32.store8
        (local.get $0)
        (local.get $3)
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $1
     (i32.or
      (i32.or
       (i32.or
        (i32.shl
         (local.get $3)
         (i32.const 8)
        )
        (local.get $3)
       )
       (i32.shl
        (local.get $3)
        (i32.const 16)
       )
      )
      (i32.shl
       (local.get $3)
       (i32.const 24)
      )
     )
    )
    (local.set $6
     (i32.add
      (local.tee $5
       (i32.and
        (local.get $4)
        (i32.const -4)
       )
      )
      (i32.const -64)
     )
    )
    (loop $while-in1
     (if
      (i32.le_s
       (local.get $0)
       (local.get $6)
      )
      (block
       (i32.store
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=4
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=8
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=12
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=16
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=20
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=24
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=28
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=32
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=36
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=40
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=44
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=48
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=52
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=56
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=60
        (local.get $0)
        (local.get $1)
       )
       (local.set $0
        (i32.sub
         (local.get $0)
         (i32.const -64)
        )
       )
       (br $while-in1)
      )
     )
    )
    (loop $while-in3
     (if
      (i32.lt_s
       (local.get $0)
       (local.get $5)
      )
      (block
       (i32.store
        (local.get $0)
        (local.get $1)
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (br $while-in3)
      )
     )
    )
   )
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (local.get $0)
     (local.get $4)
    )
    (block
     (i32.store8
      (local.get $0)
      (local.get $3)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (i32.sub
   (local.get $4)
   (local.get $2)
  )
 )
 (func $_pthread_self (; 699 ;) (; has Stack IR ;) (result i32)
  (global.get $__pthread_ptr)
 )
 (func $_sbrk (; 700 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $2
   (call $_emscripten_get_heap_size)
  )
  (loop $do-in
   (if
    (i32.or
     (i32.and
      (i32.lt_s
       (local.tee $1
        (i32.add
         (local.get $0)
         (local.tee $3
          (i32.atomic.load
           (global.get $DYNAMICTOP_PTR$asm2wasm$import)
          )
         )
        )
       )
       (local.get $3)
      )
      (i32.gt_s
       (local.get $0)
       (i32.const 0)
      )
     )
     (i32.lt_s
      (local.get $1)
      (i32.const 0)
     )
    )
    (block
     (drop
      (call $abortOnCannotGrowMemory
       (local.get $1)
      )
     )
     (call $___setErrNo
      (i32.const 12)
     )
     (return
      (i32.const -1)
     )
    )
   )
   (if
    (i32.gt_s
     (local.get $1)
     (local.get $2)
    )
    (if
     (call $_emscripten_resize_heap
      (local.get $1)
     )
     (block
      (local.set $2
       (call $_emscripten_get_heap_size)
      )
      (br $do-in)
     )
     (block
      (if
       (i32.gt_s
        (call $_emscripten_get_heap_size)
        (local.get $2)
       )
       (block
        (local.set $2
         (call $_emscripten_get_heap_size)
        )
        (br $do-in)
       )
      )
      (call $___setErrNo
       (i32.const 12)
      )
      (return
       (i32.const -1)
      )
     )
    )
   )
   (br_if $do-in
    (i32.ne
     (local.get $3)
     (i32.atomic.rmw.cmpxchg
      (global.get $DYNAMICTOP_PTR$asm2wasm$import)
      (local.get $3)
      (local.get $1)
     )
    )
   )
  )
  (local.get $3)
 )
 (func $dynCall_ff (; 701 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (result f32)
  (call_indirect (type $FUNCSIG$ff)
   (local.get $1)
   (i32.and
    (local.get $0)
    (i32.const 7)
   )
  )
 )
 (func $dynCall_fff (; 702 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (result f32)
  (call_indirect (type $FUNCSIG$fff)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 8)
   )
  )
 )
 (func $dynCall_i (; 703 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (call_indirect (type $FUNCSIG$i)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 16)
   )
  )
 )
 (func $dynCall_ii (; 704 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (call_indirect (type $FUNCSIG$ii)
   (local.get $1)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 31)
    )
    (i32.const 20)
   )
  )
 )
 (func $dynCall_iidiiii (; 705 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f64) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (call_indirect (type $FUNCSIG$iidiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 1)
    )
    (i32.const 52)
   )
  )
 )
 (func $dynCall_iii (; 706 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (call_indirect (type $FUNCSIG$iii)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 54)
   )
  )
 )
 (func $dynCall_iiii (; 707 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (call_indirect (type $FUNCSIG$iiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 15)
    )
    (i32.const 58)
   )
  )
 )
 (func $dynCall_iiiii (; 708 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (call_indirect (type $FUNCSIG$iiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (i32.const 74)
  )
 )
 (func $dynCall_iiiiii (; 709 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (call_indirect (type $FUNCSIG$iiiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (i32.const 75)
  )
 )
 (func $dynCall_iiiiiii (; 710 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (call_indirect (type $FUNCSIG$iiiiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (i32.const 76)
  )
 )
 (func $dynCall_iiiiiiii (; 711 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (call_indirect (type $FUNCSIG$iiiiiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (local.get $7)
   (i32.const 77)
  )
 )
 (func $dynCall_iiiiiiiii (; 712 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (result i32)
  (call_indirect (type $FUNCSIG$iiiiiiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (local.get $7)
   (local.get $8)
   (i32.const 78)
  )
 )
 (func $dynCall_iiiiiiiiii (; 713 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (result i32)
  (call_indirect (type $FUNCSIG$iiiiiiiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (local.get $7)
   (local.get $8)
   (local.get $9)
   (i32.const 79)
  )
 )
 (func $dynCall_v (; 714 ;) (; has Stack IR ;) (param $0 i32)
  (call_indirect (type $FUNCSIG$v)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 84)
   )
  )
 )
 (func $dynCall_vf (; 715 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32)
  (call_indirect (type $FUNCSIG$vf)
   (local.get $1)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 92)
   )
  )
 )
 (func $dynCall_vff (; 716 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32)
  (call_indirect (type $FUNCSIG$vff)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 96)
   )
  )
 )
 (func $dynCall_vfff (; 717 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32)
  (call_indirect (type $FUNCSIG$vfff)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (i32.const 100)
  )
 )
 (func $dynCall_vffff (; 718 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32) (param $4 f32)
  (call_indirect (type $FUNCSIG$vffff)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 101)
   )
  )
 )
 (func $dynCall_vfi (; 719 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 i32)
  (call_indirect (type $FUNCSIG$vfi)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 1)
    )
    (i32.const 105)
   )
  )
 )
 (func $dynCall_vi (; 720 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call_indirect (type $FUNCSIG$vi)
   (local.get $1)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 31)
    )
    (i32.const 107)
   )
  )
 )
 (func $dynCall_vidd (; 721 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f64) (param $3 f64)
  (call_indirect (type $FUNCSIG$vidd)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 139)
   )
  )
 )
 (func $dynCall_vif (; 722 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32)
  (call_indirect (type $FUNCSIG$vif)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 143)
   )
  )
 )
 (func $dynCall_viff (; 723 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32) (param $3 f32)
  (call_indirect (type $FUNCSIG$viff)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 147)
   )
  )
 )
 (func $dynCall_vifff (; 724 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32) (param $3 f32) (param $4 f32)
  (call_indirect (type $FUNCSIG$vifff)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 151)
   )
  )
 )
 (func $dynCall_viffff (; 725 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32) (param $3 f32) (param $4 f32) (param $5 f32)
  (call_indirect (type $FUNCSIG$viffff)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 155)
   )
  )
 )
 (func $dynCall_vii (; 726 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (call_indirect (type $FUNCSIG$vii)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 63)
    )
    (i32.const 159)
   )
  )
 )
 (func $dynCall_viif (; 727 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f32)
  (call_indirect (type $FUNCSIG$viif)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 1)
    )
    (i32.const 223)
   )
  )
 )
 (func $dynCall_viifi (; 728 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f32) (param $4 i32)
  (call_indirect (type $FUNCSIG$viifi)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (i32.const 225)
  )
 )
 (func $dynCall_viii (; 729 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (call_indirect (type $FUNCSIG$viii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 63)
    )
    (i32.const 226)
   )
  )
 )
 (func $dynCall_viiii (; 730 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (call_indirect (type $FUNCSIG$viiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 31)
    )
    (i32.const 290)
   )
  )
 )
 (func $dynCall_viiiii (; 731 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (call_indirect (type $FUNCSIG$viiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 322)
   )
  )
 )
 (func $dynCall_viiiiii (; 732 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (call_indirect (type $FUNCSIG$viiiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 1)
    )
    (i32.const 330)
   )
  )
 )
 (func $dynCall_viiiiiii (; 733 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (call_indirect (type $FUNCSIG$viiiiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (local.get $7)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 332)
   )
  )
 )
 (func $dynCall_viiiiiiii (; 734 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32)
  (call_indirect (type $FUNCSIG$viiiiiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (local.get $7)
   (local.get $8)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 336)
   )
  )
 )
 (func $dynCall_viiiiiiiii (; 735 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32)
  (call_indirect (type $FUNCSIG$viiiiiiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (local.get $7)
   (local.get $8)
   (local.get $9)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 340)
   )
  )
 )
 (func $dynCall_viiiiiiiiii (; 736 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32)
  (call_indirect (type $FUNCSIG$viiiiiiiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (local.get $7)
   (local.get $8)
   (local.get $9)
   (local.get $10)
   (i32.const 344)
  )
 )
 (func $dynCall_viiiiiiiiiii (; 737 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32) (param $11 i32)
  (call_indirect (type $FUNCSIG$viiiiiiiiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (local.get $7)
   (local.get $8)
   (local.get $9)
   (local.get $10)
   (local.get $11)
   (i32.const 345)
  )
 )
 (func $b0 (; 738 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (call $nullFunc_ff
   (i32.const 0)
  )
  (f32.const 0)
 )
 (func $b1 (; 739 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (result f32)
  (call $nullFunc_fff
   (i32.const 1)
  )
  (f32.const 0)
 )
 (func $b2 (; 740 ;) (; has Stack IR ;) (result i32)
  (call $nullFunc_i
   (i32.const 2)
  )
  (i32.const 0)
 )
 (func $b3 (; 741 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (call $nullFunc_ii
   (i32.const 3)
  )
  (i32.const 0)
 )
 (func $b4 (; 742 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (call $nullFunc_iidiiii
   (i32.const 4)
  )
  (i32.const 0)
 )
 (func $b5 (; 743 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (call $nullFunc_iii
   (i32.const 5)
  )
  (i32.const 0)
 )
 (func $b6 (; 744 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (call $nullFunc_iiii
   (i32.const 6)
  )
  (i32.const 0)
 )
 (func $b7 (; 745 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (call $nullFunc_iiiii
   (i32.const 7)
  )
  (i32.const 0)
 )
 (func $b8 (; 746 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (call $nullFunc_iiiiii
   (i32.const 8)
  )
  (i32.const 0)
 )
 (func $b9 (; 747 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (call $nullFunc_iiiiiii
   (i32.const 9)
  )
  (i32.const 0)
 )
 (func $b10 (; 748 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (call $nullFunc_iiiiiiii
   (i32.const 10)
  )
  (i32.const 0)
 )
 (func $b11 (; 749 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (call $nullFunc_iiiiiiiii
   (i32.const 11)
  )
  (i32.const 0)
 )
 (func $b12 (; 750 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (result i32)
  (call $nullFunc_iiiiiiiiii
   (i32.const 12)
  )
  (i32.const 0)
 )
 (func $b13 (; 751 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (param $2 i32) (result i64)
  (call $nullFunc_jiji
   (i32.const 13)
  )
  (i64.const 0)
 )
 (func $b14 (; 752 ;) (; has Stack IR ;)
  (call $nullFunc_v
   (i32.const 14)
  )
 )
 (func $b15 (; 753 ;) (; has Stack IR ;) (param $0 f32)
  (call $nullFunc_vf
   (i32.const 15)
  )
 )
 (func $b16 (; 754 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32)
  (call $nullFunc_vff
   (i32.const 16)
  )
 )
 (func $b17 (; 755 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (param $2 f32)
  (call $nullFunc_vfff
   (i32.const 17)
  )
 )
 (func $b18 (; 756 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (param $2 f32) (param $3 f32)
  (call $nullFunc_vffff
   (i32.const 18)
  )
 )
 (func $b19 (; 757 ;) (; has Stack IR ;) (param $0 f32) (param $1 i32)
  (call $nullFunc_vfi
   (i32.const 19)
  )
 )
 (func $b20 (; 758 ;) (; has Stack IR ;) (param $0 i32)
  (call $nullFunc_vi
   (i32.const 20)
  )
 )
 (func $b21 (; 759 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 f64)
  (call $nullFunc_vidd
   (i32.const 21)
  )
 )
 (func $b22 (; 760 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32)
  (call $nullFunc_vif
   (i32.const 22)
  )
 )
 (func $b23 (; 761 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32)
  (call $nullFunc_viff
   (i32.const 23)
  )
 )
 (func $b24 (; 762 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32)
  (call $nullFunc_vifff
   (i32.const 24)
  )
 )
 (func $b25 (; 763 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32) (param $4 f32)
  (call $nullFunc_viffff
   (i32.const 25)
  )
 )
 (func $b26 (; 764 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $nullFunc_vii
   (i32.const 26)
  )
 )
 (func $b27 (; 765 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32)
  (call $nullFunc_viif
   (i32.const 27)
  )
 )
 (func $b28 (; 766 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32) (param $3 i32)
  (call $nullFunc_viifi
   (i32.const 28)
  )
 )
 (func $b29 (; 767 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (call $nullFunc_viii
   (i32.const 29)
  )
 )
 (func $b30 (; 768 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (call $nullFunc_viiii
   (i32.const 30)
  )
 )
 (func $b31 (; 769 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (call $nullFunc_viiiii
   (i32.const 31)
  )
 )
 (func $b32 (; 770 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (call $nullFunc_viiiiii
   (i32.const 32)
  )
 )
 (func $b33 (; 771 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (call $nullFunc_viiiiiii
   (i32.const 33)
  )
 )
 (func $b34 (; 772 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (call $nullFunc_viiiiiiii
   (i32.const 34)
  )
 )
 (func $b35 (; 773 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32)
  (call $nullFunc_viiiiiiiii
   (i32.const 35)
  )
 )
 (func $b36 (; 774 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32)
  (call $nullFunc_viiiiiiiiii
   (i32.const 36)
  )
 )
 (func $b37 (; 775 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (param $10 i32)
  (call $nullFunc_viiiiiiiiiii
   (i32.const 37)
  )
 )
 (func $b38 (; 776 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32)
  (call $nullFunc_viiji
   (i32.const 38)
  )
 )
 (func $legalstub$__emscripten_atomic_fetch_and_add_u64 (; 777 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i64)
  (local.set $3
   (call $__emscripten_atomic_fetch_and_add_u64
    (local.get $0)
    (i64.or
     (i64.extend_i32_u
      (local.get $1)
     )
     (i64.shl
      (i64.extend_i32_u
       (local.get $2)
      )
      (i64.const 32)
     )
    )
   )
  )
  (call $setTempRet0
   (i32.wrap_i64
    (i64.shr_u
     (local.get $3)
     (i64.const 32)
    )
   )
  )
  (i32.wrap_i64
   (local.get $3)
  )
 )
 (func $legalstub$__emscripten_atomic_fetch_and_and_u64 (; 778 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i64)
  (local.set $3
   (call $__emscripten_atomic_fetch_and_and_u64
    (local.get $0)
    (i64.or
     (i64.extend_i32_u
      (local.get $1)
     )
     (i64.shl
      (i64.extend_i32_u
       (local.get $2)
      )
      (i64.const 32)
     )
    )
   )
  )
  (call $setTempRet0
   (i32.wrap_i64
    (i64.shr_u
     (local.get $3)
     (i64.const 32)
    )
   )
  )
  (i32.wrap_i64
   (local.get $3)
  )
 )
 (func $legalstub$__emscripten_atomic_fetch_and_or_u64 (; 779 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i64)
  (local.set $3
   (call $__emscripten_atomic_fetch_and_or_u64
    (local.get $0)
    (i64.or
     (i64.extend_i32_u
      (local.get $1)
     )
     (i64.shl
      (i64.extend_i32_u
       (local.get $2)
      )
      (i64.const 32)
     )
    )
   )
  )
  (call $setTempRet0
   (i32.wrap_i64
    (i64.shr_u
     (local.get $3)
     (i64.const 32)
    )
   )
  )
  (i32.wrap_i64
   (local.get $3)
  )
 )
 (func $legalstub$__emscripten_atomic_fetch_and_sub_u64 (; 780 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i64)
  (local.set $3
   (call $__emscripten_atomic_fetch_and_sub_u64
    (local.get $0)
    (i64.or
     (i64.extend_i32_u
      (local.get $1)
     )
     (i64.shl
      (i64.extend_i32_u
       (local.get $2)
      )
      (i64.const 32)
     )
    )
   )
  )
  (call $setTempRet0
   (i32.wrap_i64
    (i64.shr_u
     (local.get $3)
     (i64.const 32)
    )
   )
  )
  (i32.wrap_i64
   (local.get $3)
  )
 )
 (func $legalstub$__emscripten_atomic_fetch_and_xor_u64 (; 781 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i64)
  (local.set $3
   (call $__emscripten_atomic_fetch_and_xor_u64
    (local.get $0)
    (i64.or
     (i64.extend_i32_u
      (local.get $1)
     )
     (i64.shl
      (i64.extend_i32_u
       (local.get $2)
      )
      (i64.const 32)
     )
    )
   )
  )
  (call $setTempRet0
   (i32.wrap_i64
    (i64.shr_u
     (local.get $3)
     (i64.const 32)
    )
   )
  )
  (i32.wrap_i64
   (local.get $3)
  )
 )
 (func $legalstub$_emscripten_atomic_cas_u64 (; 782 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i64)
  (local.set $5
   (call $_emscripten_atomic_cas_u64
    (local.get $0)
    (i64.or
     (i64.extend_i32_u
      (local.get $1)
     )
     (i64.shl
      (i64.extend_i32_u
       (local.get $2)
      )
      (i64.const 32)
     )
    )
    (i64.or
     (i64.extend_i32_u
      (local.get $3)
     )
     (i64.shl
      (i64.extend_i32_u
       (local.get $4)
      )
      (i64.const 32)
     )
    )
   )
  )
  (call $setTempRet0
   (i32.wrap_i64
    (i64.shr_u
     (local.get $5)
     (i64.const 32)
    )
   )
  )
  (i32.wrap_i64
   (local.get $5)
  )
 )
 (func $legalstub$_emscripten_atomic_exchange_u64 (; 783 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i64)
  (local.set $3
   (call $_emscripten_atomic_exchange_u64
    (local.get $0)
    (i64.or
     (i64.extend_i32_u
      (local.get $1)
     )
     (i64.shl
      (i64.extend_i32_u
       (local.get $2)
      )
      (i64.const 32)
     )
    )
   )
  )
  (call $setTempRet0
   (i32.wrap_i64
    (i64.shr_u
     (local.get $3)
     (i64.const 32)
    )
   )
  )
  (i32.wrap_i64
   (local.get $3)
  )
 )
 (func $legalstub$_emscripten_atomic_load_u64 (; 784 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i64)
  (local.set $1
   (call $_emscripten_atomic_load_u64
    (local.get $0)
   )
  )
  (call $setTempRet0
   (i32.wrap_i64
    (i64.shr_u
     (local.get $1)
     (i64.const 32)
    )
   )
  )
  (i32.wrap_i64
   (local.get $1)
  )
 )
 (func $legalstub$_emscripten_atomic_store_u64 (; 785 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i64)
  (local.set $3
   (call $_emscripten_atomic_store_u64
    (local.get $0)
    (i64.or
     (i64.extend_i32_u
      (local.get $1)
     )
     (i64.shl
      (i64.extend_i32_u
       (local.get $2)
      )
      (i64.const 32)
     )
    )
   )
  )
  (call $setTempRet0
   (i32.wrap_i64
    (i64.shr_u
     (local.get $3)
     (i64.const 32)
    )
   )
  )
  (i32.wrap_i64
   (local.get $3)
  )
 )
 (func $legalstub$dynCall_jiji (; 786 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i64)
  (call $setTempRet0
   (i32.wrap_i64
    (i64.shr_u
     (local.tee $5
      (call_indirect (type $FUNCSIG$jiji)
       (local.get $1)
       (i64.or
        (i64.extend_i32_u
         (local.get $2)
        )
        (i64.shl
         (i64.extend_i32_u
          (local.get $3)
         )
         (i64.const 32)
        )
       )
       (local.get $4)
       (i32.add
        (i32.and
         (local.get $0)
         (i32.const 3)
        )
        (i32.const 80)
       )
      )
     )
     (i64.const 32)
    )
   )
  )
  (i32.wrap_i64
   (local.get $5)
  )
 )
 (func $legalstub$dynCall_viiji (; 787 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (call_indirect (type $FUNCSIG$viiji)
   (local.get $1)
   (local.get $2)
   (i64.or
    (i64.extend_i32_u
     (local.get $3)
    )
    (i64.shl
     (i64.extend_i32_u
      (local.get $4)
     )
     (i64.const 32)
    )
   )
   (local.get $5)
   (i32.const 346)
  )
 )
)
